{"version":3,"sources":["components/UI/BlueBtn/BlueBtn.module.css","../node_modules/webpack/buildin/amd-options.js","containers/PlanPage/PlanPage.module.css","../node_modules/compound-interest-calc/index.js","containers/PlanPage/PlanPage.js","components/UI/Inputs/Inputs.js","components/UI/BlueBtn/BlueBtn.js","components/UI/Inputs/Inputs.module.css"],"names":["module","exports","__webpack_amd_options__","compound","initial","amount","years","interest","period","Number","result","totalFromPrincipal","totalFromAnnuity","rate","principal","int","total","i","totalForYear","push","toFixed","contribution","intAmt","CanvasJSChart","CanvasJSReact","PlanPage","props","useState","contrib","inputVals","setInputVals","showChart","setShowChart","dataPoints","setDataPoints","finalVal","setFinalVal","setInputsHandler","val","field","options","animationEnabled","theme","exportEnabled","axisY","valueFormatString","axisX","minimum","toolTip","content","data","type","indexLabelFontColor","indexLabelPlacement","color","fillOpacity","className","classes","Container","Content","Title","Inputs","InputRow","InputField","change","Btns","clicked","key","res","Compound","newData","map","pt","x","y","updatedVals","Chart","HideChart","Title2","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","Block","Input","value","onChange","e","target","placeholder","ph","NumInput","isNaN","length","charAt","slice","BlueBtn","big","noMargin","NoBigBtn","BigBtn","Btn","onClick","children"],"mappings":"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","file":"static/js/9.5b407825.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BigBtn\":\"BlueBtn_BigBtn__3hb37\",\"Btn\":\"BlueBtn_Btn__O1Uk4\",\"NoBigBtn\":\"BlueBtn_NoBigBtn__2jTSw\"};","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlanPage_Container__1AJoD\",\"Content\":\"PlanPage_Content__14s1_\",\"Chart\":\"PlanPage_Chart__1SVaj\",\"HideChart\":\"PlanPage_HideChart__3nFdt\",\"Block\":\"PlanPage_Block__1nzxK\",\"Inputs\":\"PlanPage_Inputs__2xDI-\",\"InputRow\":\"PlanPage_InputRow__3_YF2\",\"InputField\":\"PlanPage_InputField__33n_W\",\"Btns\":\"PlanPage_Btns__3itjP\",\"Title\":\"PlanPage_Title__NmRSi\",\"Title2\":\"PlanPage_Title2__1ThLw\"};","module.exports= compound = (initial, amount, years,interest, period = 1) =>{\n    initial = Number(initial);\n    amount = Number(amount);\n    years = Number(years);\n    interest = Number(interest);\n    period = Number(period);\n\n    const rate = interest/period;\n    let result\n    let totalFromPrincipal;\n    let totalFromAnnuity;\n    let principal = [initial]\n    let int = [0]\n    let total = [initial]\n    for(let i = 1; i< years+1; i++){\n        // What is current value of initial investment\n        totalFromPrincipal = initial*(1+rate)**(i*period);\n        // what is current value factor of the annuity\n        totalFromAnnuity = ((1+rate)**(i*period)-1)/rate;\n        // multiply value factor by amount\n        totalFromAnnuity = totalFromAnnuity*amount;\n\n        let totalForYear = totalFromAnnuity + totalFromPrincipal;\n        total.push(Number(totalForYear.toFixed(2)));\n\n        // total amount of contributed capital \n        let contribution = amount*i*period + initial;\n        principal.push(Number(contribution.toFixed(2)));\n\n        let intAmt = totalForYear - contribution;\n        int.push(Number(intAmt.toFixed(2)));\n        if(i == years){\n            result = Number(totalForYear.toFixed(2));\n        }\n    }\n    return {result: result, principal: principal, interest: int, total: total}\n}","import React, { useState } from 'react';\r\nimport classes from './PlanPage.module.css';\r\nimport Compound from 'compound-interest-calc';\r\nimport CanvasJSReact from '../../components/canvasjs/canvasjs.react';\r\nimport BlueBtn from '../../components/UI/BlueBtn/BlueBtn';\r\nimport { NumInput } from '../../components/UI/Inputs/Inputs';\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst PlanPage = props => {\r\n  const [inputVals, setInputVals] = useState({\r\n    principal: '',\r\n    contrib: '',\r\n    years: '',\r\n    interest: ''\r\n  });\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [dataPoints, setDataPoints] = useState([]);\r\n  const [finalVal, setFinalVal] = useState('');\r\n\r\n  const setInputsHandler = (val, field) => setInputVals({ ...inputVals, [field]: val });\r\n\r\n  const resetHandler = () => {\r\n    const updatedVals = { ...inputVals };\r\n    for (let key in updatedVals) { updatedVals[key] = ''; }\r\n    setInputVals(updatedVals);\r\n    setFinalVal('');\r\n    setDataPoints([]);\r\n    setShowChart(false);\r\n  };\r\n\r\n  const calcHandler = () => {\r\n    for (let key in inputVals) { if (inputVals[key] === '') { return; } }\r\n    if (inputVals.years === '0' || inputVals.interest === '0') { return; }\r\n    const res = Compound(inputVals.principal, inputVals.contrib, inputVals.years, (inputVals.interest / 100), 12);\r\n    setFinalVal(res.result);\r\n    const newData = res.total.map((pt, i) => ({ x: i, y: pt }));\r\n    setDataPoints(newData);\r\n    setShowChart(true);\r\n  };\r\n\r\n  const options = {\r\n    animationEnabled: true,\r\n    theme: 'light2',\r\n    exportEnabled: false,\r\n    axisY: { valueFormatString: \"'$'0\" },\r\n    axisX: { valueFormatString: \"'Year '0\", minimum: 0 },\r\n    toolTip: { content: 'Year {x}: ${y}' },\r\n    data: [{\r\n      type: 'area',\r\n      indexLabelFontColor: '#5A5757',\r\n      indexLabelPlacement: 'outside',\r\n      color: 'rgb(26, 171, 152)',\r\n      fillOpacity: '1',\r\n      dataPoints\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Content}>\r\n        <h1 className={classes.Title}>Compound Interest Visualizer</h1>\r\n        <div className={classes.Inputs}>\r\n          <div className={classes.InputRow}>\r\n            <div className={classes.InputField}>\r\n              <p>Principal Investment</p>\r\n              <NumInput val={inputVals.principal} change={val => setInputsHandler(val, 'principal')} />\r\n            </div>\r\n            <div className={classes.InputField}>\r\n              <p>Monthly Contribution</p>\r\n              <NumInput val={inputVals.contrib} change={val => setInputsHandler(val, 'contrib')} />\r\n            </div>\r\n            </div>\r\n          <div className={classes.InputRow}>\r\n            <div className={classes.InputField}>\r\n              <p>Years Compounded</p>\r\n              <NumInput val={inputVals.years} change={val => setInputsHandler(val, 'years')} />\r\n            </div>\r\n            <div className={classes.InputField}>\r\n              <p>Yearly return in %</p>\r\n              <NumInput val={inputVals.interest} change={val => setInputsHandler(val, 'interest')} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.Btns}>\r\n          <BlueBtn clicked={calcHandler}>Calculate</BlueBtn>\r\n          <BlueBtn clicked={resetHandler}>Reset</BlueBtn>\r\n        </div>\r\n        <div className={showChart ? classes.Chart : classes.HideChart}>\r\n          <h1 className={classes.Title2}>\r\n            ${Number(Number(finalVal).toFixed(2)).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          </h1>\r\n          <CanvasJSChart options={options} />\r\n          <div className={classes.Block}></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanPage;\r\n","import React from 'react';\r\nimport classes from './Inputs.module.css';\r\n\r\nexport const Input = props => (\r\n  <input value={props.val} onChange={e => props.change(e.target.value)} className={classes.Input} placeholder={props.ph} />\r\n);\r\n\r\nexport const NumInput = props => {\r\n  const changeHandler = e => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    props.change(val);\r\n  };\r\n\r\n  return (\r\n    <input value={props.val} onChange={changeHandler} className={classes.Input} placeholder={props.ph} />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './BlueBtn.module.css';\r\n\r\nconst BlueBtn = props => (\r\n  <button className={props.big ? (props.noMargin ? classes.NoBigBtn : classes.BigBtn) : classes.Btn} \r\n    onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default BlueBtn;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Inputs_Input__1d94w\"};"],"sourceRoot":""}