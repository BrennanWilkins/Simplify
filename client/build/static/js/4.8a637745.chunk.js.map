{"version":3,"sources":["components/UI/Btns/GreenBtn/GreenBtn.js","components/UI/Form/Form.js","utils/formatDate.js","components/UI/Btns/GreenBtn/GreenBtn.module.css","components/PortfolioPage/NetWorthChart/NetWorthChart.js","components/PortfolioPage/NetWorthChart/NetWorthChart.module.css","components/PortfolioPage/InvestmentTable/InvestmentTable.js","components/PortfolioPage/InvestmentTable/InvestmentTable.module.css","components/PortfolioPage/Portfolio/Portfolio.module.css","components/PortfolioPage/SearchPanel/SearchPanel.module.css","components/UI/Btns/BackBtn/BackBtn.module.css","components/PortfolioPage/PortPanelContainer/PortPanelContainer.module.css","components/PortfolioPage/BuySellPanel/BuySellPanel.module.css","components/PortfolioPage/SettingsPanel/SettingsPanel.module.css","components/PortfolioPage/AssetPanel/AssetPanel.module.css","components/PortfolioPage/Highlights/Highlights.module.css","components/PortfolioPage/NewsPanel/NewsPanel.module.css","components/PortfolioPage/PremiumContainer/PremiumContainer.module.css","components/PortfolioPage/AnalysisPanel/AnalysisPanel.module.css","components/PortfolioPage/PriceChartPanel/PriceChartPanel.module.css","components/PortfolioPage/Breakdown/Breakdown.module.css","components/UI/Btns/BackBtn/BackBtn.js","components/PortfolioPage/PortPanelContainer/PortPanelContainer.js","components/PortfolioPage/SearchPanel/SearchPanel.js","components/UI/Select/Select.js","components/PortfolioPage/BuySellPanel/BuySellPanel.js","components/PortfolioPage/SettingsPanel/SettingsPanel.js","components/PortfolioPage/AssetPanel/AssetPanel.js","components/PortfolioPage/Highlights/Highlights.js","components/PortfolioPage/PremiumContainer/PremiumContainer.js","components/PortfolioPage/NewsPanel/NewsPanel.js","components/PortfolioPage/AnalysisPanel/AnalysisPanel.js","components/PortfolioPage/PriceChartPanel/PriceChartPanel.js","components/PortfolioPage/Breakdown/Breakdown.js","components/PortfolioPage/Portfolio/Portfolio.js"],"names":["GreenBtn","props","type","isSubmit","className","big","classes","BigBtn","Btn","onClick","clicked","children","Form","onSubmit","e","preventDefault","allow","submit","formatDate","date","split","charAt","slice","String","Date","getFullYear","join","formatDate2","y","m","getMonth","length","d","getDate","formatDate3","module","exports","connect","state","dark","theme","darkMode","netWorthData","netWorth","netWorthVal","formatNum","value","map","dataPt","x","Number","toFixed","options","axisY","valueFormatString","axisX","labelAngle","toolTip","content","backgroundColor","data","indexLabelFontColor","indexLabelPlacement","color","fillOpacity","dataPoints","small","undefined","Container","TitleSmall","Title","NWTitle","Value","ChartSmall","Chart","height","stocks","portfolio","cryptos","assets","otherAssets","debts","liabilities","cryptoIDs","useState","setData","name","desc","symbol","quantity","price","sortMethods","setSortMethods","useEffect","syncData","normal","methods","key","mode","sortHandler","field","getCorrectField","method","isString","sorted","sort","a","b","localeCompare","sortData","getClass","Neutral","Ascend","Descend","isInvestment","Dark","AssetContainer","NormalTable","DarkTable","Table","HeaderFields","caretNeutralIcon","caretIcon","SymbolHeader","stock","i","Symbol","toLocaleString","maximumFractionDigits","identifier","showChart","ChartBtn","stockChartIcon","crypto","cmcID","src","alt","asset","debt","BackBtn","Hide","back","arrowRight","PortPanelContainer","PanelContainer","show","close","down","BigDownPanel","BigPanel","BigHide","DownPanel","Panel","style","left","width","CloseBtn","isDemo","auth","dispatch","addStock","actions","addCrypto","setNetWorthData","addNotif","msg","setUpdateHighlights","query","setQuery","searchRes","setSearchRes","showInput","setShowInput","showManual","setShowManual","inputValName","setInputValName","inputValTicker","setInputValTicker","inputValShares","setInputValShares","inputValPrice","setInputValPrice","selectedRes","setSelectedRes","selectedTicker","setSelectedTicker","err","setErr","searchErr","setSearchErr","errMsg","setErrMsg","loading","setLoading","typingTimeout","setTypingTimeout","inputRef","useRef","sharesRef","isStock","setTimeout","current","focus","searchHandler","val","url","axios","get","then","res","result","catch","closeHandler","resetInputsHandler","addHandler","manual","toUpperCase","curr","filter","inv","unshift","updatedPortfolio","updatedNetWorth","calcNetWorth","put","resp","Text","SearchInput","change","clearTimeout","ref","ph","dark2","Spinner","DarkResults","Results","Result","selectedHandler","CoinIcon","ResultLeft","SearchSymbol","ResultRight","PosChange","NegChange","Math","abs","BtnDiv2","BlueBtn","ShowErr","HideErr","ShowInput","HideInput","background","InputText","AddInput","Select","onChange","isSearchable","classNamePrefix","changeCrypto","changeStock","selected","setSelected","selectedName","setSelectedName","selectedVal","setSelectedVal","setOptions","label","errHandler","bool","confirmHandler","sellStock","currField","newPortfolio","index","findIndex","newData","newQuantity","selectedOption","stockMatch","find","cryptoMatch","HideText","FormContainer","HideInputDiv","InputDiv","AllBtn","HideConfirmBtn","ConfirmBtn","priceVal","setPriceVal","priceRef","newPrice","match","updateAssets","updateDebts","titleText","setTitleText","panelLeft","setPanelLeft","HideConfirm","confirmClass","setConfirmClass","inputName","setInputName","inputDesc","setInputDesc","inputValue","setInputValue","newValue","setNewValue","nameRef","valRef","btnClassHandler","Confirm","confirmValid","includes","Text2","marginBottom","option","assetMatch","debtMatch","Inputs","NewValueInput","marginTop","updateHighlights","highestStock","highlightData","lowestStock","highestCrypto","lowestCrypto","setHighlights","NWchange","setNWChange","showErr","setShowErr","diff","getData","stockNames","cryptoNames","post","wasMounted","InfoContainer","InfoContent","Info","Green","Red","AnimIn","Bold","NoInfo","NewsLink","openNews","PremiumContainer","Fragment","Backdrop","HideBackdrop","HidePanel","isAuth","AuthTitle","title","codeInvalid","AccessInput","RedInput","accessCode","accessHandler","Content","setAccessCode","news","setNews","totArticles","bearPerc","bullPerc","ticker","sentiment","setSentiment","setCodeInvalid","searchHelper","article","datetime","headline","summary","image","StockText","GeneralBtn","response","status","buzz","articlesInLastWeek","bearishPercent","bullishPercent","Err","Sentiment","art","Article","href","target","rel","Summary","high","low","mean","median","setTarget","buy","sell","hold","strongBuy","strongSell","recom","setRecom","EPSActual","setEPSActual","EPSEstimate","setEPSEstimate","stockOptions","resetData","tar","targetHigh","targetLow","targetMean","targetMedian","earnings","pt","period","actual","estimate","recomData","recommendation","earningsOptions","animationEnabled","exportEnabled","markerType","markerSize","showInLegend","recomOptions","legend","maxWidth","yValueFormatString","SubTitle","HideData","Data","StockTitle","Targets","ChartTitle","dps1","dps2","dps3","priceData","setPriceData","stockData","push","open","volume","cryptoData","charts","lineThickness","tickLength","labelFormatter","crosshair","enabled","snapToDataPoint","prefix","shared","navigator","dynamicUpdate","slider","minimum","maximum","SelectBar","Active","Inactive","marginLeft","marginRight","FocusBorder","TableContainer","TableInnerContainer","Down","Up","percent","setDataPoints","setStockData","setCryptoData","stockSortDown","setStockSortDown","cryptoSortDown","setCryptoSortDown","stockTot","cryptoTot","tot","assetCategs","assetTots","assetTot","prev","toolTipContent","indexLabel","indexLabelFontWeight","darkMode4","withRouter","showStockSearch","setShowStockSearch","showCryptoSearch","setShowCryptoSearch","showBuyStock","setShowBuyStock","showSellStock","setShowSellStock","showBuyCrypto","setShowBuyCrypto","showSellCrypto","setShowSellCrypto","showStockSettings","setShowStockSettings","showCryptoSettings","setShowCryptoSettings","showAddAsset","setShowAddAsset","showRemoveAsset","setShowRemoveAsset","showAddDebt","setShowAddDebt","showRemoveDebt","setShowRemoveDebt","showAssetSettings","setShowAssetSettings","showDebtSettings","setShowDebtSettings","showNews","setShowNews","showAnalysis","setShowAnalysis","showStockPriceChart","setShowStockPriceChart","showCryptoPriceChart","setShowCryptoPriceChart","stockPriceChartSymbol","setStockPriceChartSymbol","cryptoPriceChartSymbol","setCryptoPriceChartSymbol","stockRef","cryptoRef","assetRef","debtRef","location","search","scrollIntoView","showBuySellHandler","showChartHandler","ChartContainer","NetWorthChart","Investments","Stocks","Btns","AddBtn","plusIcon","getBoundingClientRect","top","AnalysisBtn","analysisIcon","SettingsBtn","settingsIcon","InvestmentTable","Cryptos","RemoveBtn","trashIcon"],"mappings":"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","file":"static/js/4.8a637745.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './GreenBtn.module.css';\r\n\r\nconst GreenBtn = props => (\r\n  <button type={props.isSubmit ? 'submit' : 'button'} className={props.big ? classes.BigBtn : classes.Btn} onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default GreenBtn;\r\n","import React from 'react';\r\n\r\nconst Form = props => (\r\n  <form onSubmit={e => { e.preventDefault(); if (props.allow) { props.submit(); } }}>{props.children}</form>\r\n);\r\n\r\nexport default Form;\r\n","export const formatDate = date => {\r\n  date = date.split('-');\r\n  let m = date[1].charAt(0) === '0' ? date[1].slice(1) : date[1];\r\n  let d = date[2].charAt(0) === '0' ? date[2].slice(1) : date[2];\r\n  let y = date[0] === String(new Date().getFullYear()) ? date[0].slice(2) : date[0];\r\n  return [m, d, y].join('/');\r\n};\r\n\r\nexport const formatDate2 = date => {\r\n  let y = date.getFullYear();\r\n  let m = '' + (date.getMonth() + 1);\r\n  if (m.length < 2) { m = '0' + m; }\r\n  let d = '' + date.getDate();\r\n  if (d.length < 2) { d = '0' + d; }\r\n  return [y, m, d].join('-');\r\n};\r\n\r\nexport const formatDate3 = date => {\r\n  let y = '' + date.getFullYear();\r\n  if (y === '2020') { y = '20'; }\r\n  let m = '' + (date.getMonth() + 1);\r\n  let d = '' + date.getDate();\r\n  return [m, d, y].join('/');\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BigBtn\":\"GreenBtn_BigBtn__1RpQc\",\"Btn\":\"GreenBtn_Btn__2UGmh\"};","import React from 'react';\r\nimport classes from './NetWorthChart.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Chart from '../../UI/Chart/Chart';\r\nimport { formatNum } from '../../../utils/formatNum';\r\n\r\nconst NetWorthChart = props => {\r\n  const netWorthVal = props.netWorthData.length === 0 ? '0.00' :\r\n  formatNum(props.netWorthData[props.netWorthData.length - 1].value);\r\n\r\n  const netWorthData = props.netWorthData.map(dataPt => ({ x: new Date(dataPt.date), y: Number((dataPt.value).toFixed(2)) }));\r\n\r\n  const options = {\r\n    theme: props.dark ? 'dark2' : 'light2',\r\n    axisY: { valueFormatString: \"'$'0\" },\r\n    axisX: { valueFormatString: 'MM/DD/YY', labelAngle: -20 },\r\n    toolTip: { content: '{x}: ${y}' },\r\n    backgroundColor: props.dark ? 'rgb(32, 84, 109)' : 'white',\r\n    data: [{\r\n      type: 'area',\r\n      indexLabelFontColor: '#5A5757',\r\n      indexLabelPlacement: 'outside',\r\n      color: 'rgb(26, 171, 152)',\r\n      fillOpacity: '1',\r\n      dataPoints: netWorthData\r\n    }]\r\n  };\r\n\r\n  // props.small used for chart on home page\r\n  return (\r\n    <div className={props.small ? undefined : classes.Container}>\r\n      <h1 className={props.small ? classes.TitleSmall : classes.Title}>\r\n        <span className={classes.NWTitle}>Net Worth</span>\r\n        <span className={classes.Value}>${netWorthVal}</span>\r\n      </h1>\r\n      <div className={props.small ? classes.ChartSmall : classes.Chart}>\r\n        <Chart options={props.small ? { ...options, height: 200 } : options} darkMode={props.dark} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  dark: state.theme.darkMode,\r\n  netWorthData: state.netWorth.netWorthData\r\n});\r\n\r\nexport default connect(mapStateToProps)(NetWorthChart);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleSmall\":\"NetWorthChart_TitleSmall__JPZhB\",\"Title\":\"NetWorthChart_Title__kcjdH\",\"Value\":\"NetWorthChart_Value__ELvx1\",\"NWTitle\":\"NetWorthChart_NWTitle__1KSaq\",\"ChartSmall\":\"NetWorthChart_ChartSmall__1tSge\",\"Chart\":\"NetWorthChart_Chart__FlBGM\",\"Container\":\"NetWorthChart_Container__XFY8B\"};","import React, { useState, useEffect } from 'react';\r\nimport classes from './InvestmentTable.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { caretIcon, caretNeutralIcon, stockChartIcon } from '../../UI/UIIcons';\r\n\r\nconst InvestmentTable = props => {\r\n  const [data, setData] = useState([]);\r\n  const [sortMethods, setSortMethods] = useState({\r\n    name: '',\r\n    desc: '',\r\n    symbol: '',\r\n    quantity: '',\r\n    price: '',\r\n    value: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    syncData();\r\n    if (!props.normal) { return; }\r\n    // reset sort methods on data change\r\n    let methods = { ...sortMethods };\r\n    for (let key in methods) { methods[key] = ''; }\r\n    setSortMethods(methods);\r\n  }, [props.mode, props.stocks, props.cryptos, props.assets, props.debts]);\r\n\r\n  const syncData = () => {\r\n    // sync data state to props based on mode\r\n    if (props.mode === 'Stocks') { setData([...props.stocks]); }\r\n    else if (props.mode === 'Cryptos') { setData([...props.cryptos]); }\r\n    else if (props.mode === 'Assets') { setData([...props.assets]); }\r\n    else { setData([...props.debts]); }\r\n  };\r\n\r\n  const sortData = (method, field) => {\r\n    // sort data either ascending/descending/no sort\r\n    // sort alphabetically if field is string else numerically\r\n    let isString = field === 'name' || field === 'desc' || field === 'symbol';\r\n    if (method === 'Ascend') {\r\n      const sorted = isString ?\r\n      data.sort((a, b) => a[field].localeCompare(b[field])) :\r\n      data.sort((a, b) => a[field] - b[field]);\r\n      setData(sorted);\r\n    } else if (method === 'Descend') {\r\n      const sorted = isString ?\r\n      data.sort((a, b) => b[field].localeCompare(a[field])) :\r\n      data.sort((a, b) => b[field] - a[field]);\r\n      setData(sorted);\r\n    } else { syncData(); }\r\n    // update current field in sort methods & return all others to ''\r\n    let methods = { ...sortMethods };\r\n    for (let key in methods) { methods[key] = ''; }\r\n    methods[field] = method;\r\n    setSortMethods(methods);\r\n  };\r\n\r\n  const sortHandler = field => {\r\n    if (data.length < 2) { return; }\r\n    field = getCorrectField(field);\r\n    // sort method cycles through none -> ascending -> descending -> none...\r\n    let method = '';\r\n    if (sortMethods[field] === '') { method = 'Descend'; }\r\n    else if (sortMethods[field] === 'Descend') { method = 'Ascend'; }\r\n    sortData(method, field);\r\n  };\r\n\r\n  const getClass = field => {\r\n    // get caret icon class based on field and current sorting method\r\n    field = getCorrectField(field);\r\n    if (sortMethods[field] === '') { return classes.Neutral; }\r\n    else if (sortMethods[field] === 'Ascend') { return classes.Ascend; }\r\n    else { return classes.Descend; }\r\n  };\r\n\r\n  const getCorrectField = field => {\r\n    // get correct field value due to differences in field names between the modes\r\n    let isInvestment = props.mode === 'Stocks' || props.mode === 'Cryptos';\r\n    if (field === 'symbol' && !isInvestment) { field = 'name'; }\r\n    else if (field === 'name' && !isInvestment) { field = 'desc'; }\r\n    else if (field === 'quantity' && !isInvestment) { field = 'value'; }\r\n    return field;\r\n  };\r\n\r\n  return (\r\n    <div className={props.normal ? null :\r\n      (props.mode === 'Stocks' || props.mode === 'Cryptos' ?\r\n      (props.dark ? `${classes.Container} ${classes.Dark}` : classes.Container) :\r\n      (props.dark ? `${classes.Container} ${classes.AssetContainer} ${classes.Dark}` : `${classes.Container} ${classes.AssetContainer}`))}>\r\n      <table className={props.normal ? (props.dark ? `${classes.NormalTable} ${classes.DarkTable}` : classes.NormalTable) :\r\n      (props.dark ? `${classes.Table} ${classes.DarkTable}` : classes.Table)}>\r\n        <thead>\r\n          <tr className={classes.HeaderFields}>\r\n            <th>{props.mode === 'Stocks' ? 'Ticker' : props.mode === 'Cryptos' ? 'Symbol' : 'Category'}\r\n              {props.normal && <span onClick={() => sortHandler('symbol')} className={getClass('symbol')}>\r\n                {sortMethods[getCorrectField('symbol')] === '' ? caretNeutralIcon : caretIcon}\r\n              </span>}\r\n            </th>\r\n            <th>{props.mode === 'Stocks' ? 'Company Name' : props.mode === 'Cryptos' ? (props.normal ? 'Cryptocurrency' : 'Name') : 'Description'}\r\n              {props.normal && <span onClick={() => sortHandler('name')} className={getClass('name')}>\r\n                {sortMethods[getCorrectField('name')] === '' ? caretNeutralIcon : caretIcon}\r\n              </span>}\r\n            </th>\r\n            <th>{props.mode === 'Stocks' ? 'Shares' : props.mode === 'Cryptos' ? 'Quantity': 'Value'}\r\n              {props.normal && <span onClick={() => sortHandler('quantity')} className={getClass('quantity')}>\r\n                {sortMethods[getCorrectField('quantity')] === '' ? caretNeutralIcon : caretIcon}\r\n              </span>}\r\n            </th>\r\n            {props.mode === 'Stocks' || props.mode === 'Cryptos' ? <th>Price\r\n              {props.normal && <span onClick={() => sortHandler('price')} className={getClass('price')}>\r\n                {sortMethods.price === '' ? caretNeutralIcon : caretIcon}\r\n              </span>}\r\n            </th> : null}\r\n            {props.mode === 'Stocks' || props.mode === 'Cryptos' ? <th>Value\r\n              {props.normal && <span onClick={() => sortHandler('value')} className={getClass('value')}>\r\n                {sortMethods.value === '' ? caretNeutralIcon : caretIcon}\r\n              </span>}\r\n            </th> : null}\r\n            {props.normal && (props.mode === 'Stocks' || props.mode === 'Cryptos') && <th className={classes.SymbolHeader}></th>}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.mode === 'Stocks' ? (\r\n            data.map((stock, i) => (\r\n              <tr key={i}>\r\n                <td className={classes.Symbol}>{stock.symbol}</td>\r\n                <td>{stock.name}</td>\r\n                <td>{Number(stock.quantity).toLocaleString(undefined, { maximumFractionDigits: 5 })}</td>\r\n                <td>{stock.price === '?' ? '?' : `$${Number(stock.price).toFixed(2)}`}</td>\r\n                <td className={classes.Value}>{stock.value === '?' ? '?' : `$${Number(stock.value).toFixed(2)}`}</td>\r\n                {props.normal && (props.mode === 'Stocks' || props.mode === 'Cryptos') &&\r\n                <td onClick={() => stock.identifier === 'Normal' ? props.showChart(stock.symbol, 'Stock') : null}\r\n                className={classes.ChartBtn}>{stockChartIcon}</td>}\r\n              </tr>\r\n          ))) : props.mode === 'Cryptos' ? (\r\n            data.map((crypto, i) => (\r\n              <tr key={i}>\r\n                <td className={classes.Symbol}>\r\n                  {crypto.cmcID ? <img src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${crypto.cmcID}.png`} alt=\"\" /> : crypto.symbol}\r\n                </td>\r\n                <td>{crypto.name}</td>\r\n                <td>{Number(crypto.quantity).toLocaleString(undefined, { maximumFractionDigits: 5 })}</td>\r\n                <td>{crypto.price === '?' ? '?' : `$${Number(crypto.price).toFixed(2)}`}</td>\r\n                <td className={classes.Value}>{crypto.value === '?' ? '?' : `$${Number(crypto.value).toFixed(2)}`}</td>\r\n                {props.normal && (props.mode === 'Stocks' || props.mode === 'Cryptos') &&\r\n                <td onClick={() => crypto.identifier === 'Normal' ? props.showChart(crypto.symbol, 'Crypto') : null}\r\n                className={classes.ChartBtn}>{stockChartIcon}</td>}\r\n              </tr>\r\n            ))\r\n          ) : props.mode === 'Assets' ? (\r\n            data.map((asset, i) => (\r\n              <tr key={i}>\r\n                <td className={classes.Symbol}>{asset.name}</td>\r\n                <td>{asset.desc}</td>\r\n                <td className={classes.Value}>${Number(asset.value).toFixed(2)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            data.map((debt, i) => (\r\n              <tr key={i}>\r\n                <td className={classes.Symbol}>{debt.name}</td>\r\n                <td>{debt.desc}</td>\r\n                <td className={classes.Value}>${Number(debt.value).toFixed(2)}</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  assets: state.portfolio.otherAssets,\r\n  debts: state.portfolio.liabilities,\r\n  dark: state.theme.darkMode,\r\n  cryptoIDs: state.portfolio.cryptoIDs\r\n});\r\n\r\nexport default connect(mapStateToProps)(InvestmentTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"InvestmentTable_Container__2RKk9\",\"AssetContainer\":\"InvestmentTable_AssetContainer__3v4Fg\",\"Dark\":\"InvestmentTable_Dark__oP_Ur\",\"Table\":\"InvestmentTable_Table__1p9G2\",\"NormalTable\":\"InvestmentTable_NormalTable__1wGbb\",\"DarkTable\":\"InvestmentTable_DarkTable__3rVrS\",\"Value\":\"InvestmentTable_Value__1WGvp\",\"ChartBtn\":\"InvestmentTable_ChartBtn__1ZjL-\",\"HeaderFields\":\"InvestmentTable_HeaderFields__1Ickk\",\"SymbolHeader\":\"InvestmentTable_SymbolHeader__gZ4ym\",\"Symbol\":\"InvestmentTable_Symbol__1qyVf\",\"Ascend\":\"InvestmentTable_Ascend__qKCAE\",\"Descend\":\"InvestmentTable_Descend__10yMk\",\"Neutral\":\"InvestmentTable_Neutral__2JdiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Portfolio_Container__3zD_-\",\"Content\":\"Portfolio_Content__3OrYr\",\"Investments\":\"Portfolio_Investments__2Z7yq\",\"Stocks\":\"Portfolio_Stocks__13rPF\",\"Cryptos\":\"Portfolio_Cryptos__2zj36\",\"ChartContainer\":\"Portfolio_ChartContainer__2mcEP\",\"Btns\":\"Portfolio_Btns__38kDz\",\"SettingsBtn\":\"Portfolio_SettingsBtn__3B__q\",\"AnalysisBtn\":\"Portfolio_AnalysisBtn__2DI7X\",\"AddBtn\":\"Portfolio_AddBtn__1oYkF\",\"RemoveBtn\":\"Portfolio_RemoveBtn__1SuIM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackBtn\":\"SearchPanel_BackBtn__35foa\",\"Text\":\"SearchPanel_Text__2voVi\",\"SearchInput\":\"SearchPanel_SearchInput__uGNDD\",\"Results\":\"SearchPanel_Results__1Wwvx\",\"DarkResults\":\"SearchPanel_DarkResults__10l-x\",\"ShowInput\":\"SearchPanel_ShowInput__33Y61\",\"HideInput\":\"SearchPanel_HideInput__1CHDV\",\"AddInput\":\"SearchPanel_AddInput__XY4Bl\",\"Result\":\"SearchPanel_Result__1J1FE\",\"ResultLeft\":\"SearchPanel_ResultLeft__1_Olp\",\"ResultRight\":\"SearchPanel_ResultRight__1GQ5s\",\"CoinIcon\":\"SearchPanel_CoinIcon__1-LRy\",\"SearchSymbol\":\"SearchPanel_SearchSymbol__25C-3\",\"PosChange\":\"SearchPanel_PosChange__2sOZJ\",\"NegChange\":\"SearchPanel_NegChange__1PJpS\",\"BtnDiv2\":\"SearchPanel_BtnDiv2__DH7uN\",\"InputText\":\"SearchPanel_InputText__2jgv8\",\"ShowErr\":\"SearchPanel_ShowErr__zjGCU\",\"HideErr\":\"SearchPanel_HideErr__2rVi7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackBtn\":\"BackBtn_BackBtn__1Ffgi\",\"Hide\":\"BackBtn_Hide__1ajwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"PortPanelContainer_Panel__11_hI\",\"Hide\":\"PortPanelContainer_Hide__RYTyU\",\"BigPanel\":\"PortPanelContainer_BigPanel__lWMGo\",\"BigHide\":\"PortPanelContainer_BigHide__1u-sE\",\"DownPanel\":\"PortPanelContainer_DownPanel__1BfmZ\",\"BigDownPanel\":\"PortPanelContainer_BigDownPanel__3MJmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"BuySellPanel_Text__1RryW\",\"HideText\":\"BuySellPanel_HideText__1F7B4\",\"ConfirmBtn\":\"BuySellPanel_ConfirmBtn__bAOKK\",\"HideConfirmBtn\":\"BuySellPanel_HideConfirmBtn__2IwzA\",\"AllBtn\":\"BuySellPanel_AllBtn__3uZD7\",\"ShowErr\":\"BuySellPanel_ShowErr__3x9Jn\",\"HideErr\":\"BuySellPanel_HideErr__3fOkF\",\"InputDiv\":\"BuySellPanel_InputDiv__3fI_T\",\"HideInputDiv\":\"BuySellPanel_HideInputDiv__t_RQX\",\"FormContainer\":\"BuySellPanel_FormContainer__uXsl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"SettingsPanel_Text__3P9oA\",\"ShowInput\":\"SettingsPanel_ShowInput__21he0\",\"HideInput\":\"SettingsPanel_HideInput__1O3bq\",\"ShowErr\":\"SettingsPanel_ShowErr__1MoF-\",\"HideErr\":\"SettingsPanel_HideErr__JfuF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"AssetPanel_Text__1Y88g\",\"Text2\":\"AssetPanel_Text2__39mK8\",\"Inputs\":\"AssetPanel_Inputs__1IwX0\",\"NewValueInput\":\"AssetPanel_NewValueInput__gwoUo\",\"Confirm\":\"AssetPanel_Confirm__1lGn2\",\"HideConfirm\":\"AssetPanel_HideConfirm__2w0am\",\"ShowErr\":\"AssetPanel_ShowErr__2FLd2\",\"HideErr\":\"AssetPanel_HideErr__3RQ0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Highlights_Container__1CwF6\",\"Title\":\"Highlights_Title__1vkha\",\"InfoContainer\":\"Highlights_InfoContainer__1pY_X\",\"Dark\":\"Highlights_Dark__3bDFl\",\"InfoContent\":\"Highlights_InfoContent__3k4Om\",\"Info\":\"Highlights_Info__3zKzW\",\"Green\":\"Highlights_Green__1aip4\",\"Red\":\"Highlights_Red__3XaPo\",\"NoInfo\":\"Highlights_NoInfo__4H95E\",\"Bold\":\"Highlights_Bold__3e8NH\",\"AnimIn\":\"Highlights_AnimIn__1HUpk\",\"animIn\":\"Highlights_animIn__23joi\",\"NewsLink\":\"Highlights_NewsLink__1xaa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Err\":\"NewsPanel_Err__3citJ\",\"HideErr\":\"NewsPanel_HideErr__3A7AW\",\"StockText\":\"NewsPanel_StockText__fZC5M\",\"Article\":\"NewsPanel_Article__1Jit8\",\"fadeIn\":\"NewsPanel_fadeIn__2yVNr\",\"Summary\":\"NewsPanel_Summary__3eFEh\",\"Date\":\"NewsPanel_Date__225M5\",\"Sentiment\":\"NewsPanel_Sentiment__3CWMh\",\"GeneralBtn\":\"NewsPanel_GeneralBtn__2zHA0\",\"Inputs\":\"NewsPanel_Inputs__2Y1qX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"PremiumContainer_Panel__18WKA\",\"HidePanel\":\"PremiumContainer_HidePanel__3aQ9c\",\"Backdrop\":\"PremiumContainer_Backdrop__1auGu\",\"HideBackdrop\":\"PremiumContainer_HideBackdrop__2bTji\",\"CloseBtn\":\"PremiumContainer_CloseBtn__3FpQP\",\"Title\":\"PremiumContainer_Title__3-xBU\",\"AuthTitle\":\"PremiumContainer_AuthTitle__D5Kda\",\"InputText\":\"PremiumContainer_InputText__8wyk7\",\"AccessInput\":\"PremiumContainer_AccessInput__2D6aB\",\"RedInput\":\"PremiumContainer_RedInput__J7mu6\",\"Content\":\"PremiumContainer_Content__2fqh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"AnalysisPanel_Content__mLZle\",\"SubTitle\":\"AnalysisPanel_SubTitle__2RImJ\",\"Select\":\"AnalysisPanel_Select__1ylKz\",\"Err\":\"AnalysisPanel_Err__1oGOs\",\"HideErr\":\"AnalysisPanel_HideErr__jRyWt\",\"Data\":\"AnalysisPanel_Data__216V8\",\"HideData\":\"AnalysisPanel_HideData__2_DUr\",\"StockTitle\":\"AnalysisPanel_StockTitle__oeR3g\",\"Title\":\"AnalysisPanel_Title__2Vgsz\",\"Targets\":\"AnalysisPanel_Targets__10jf9\",\"Chart\":\"AnalysisPanel_Chart__1Sums\",\"ChartTitle\":\"AnalysisPanel_ChartTitle__1WfZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"PriceChartPanel_Panel__22kY2\",\"Hide\":\"PriceChartPanel_Hide__3XNJD\",\"Content\":\"PriceChartPanel_Content__1Ufrs\",\"fadeIn\":\"PriceChartPanel_fadeIn__2YbiJ\",\"Title\":\"PriceChartPanel_Title__JzS1L\",\"Err\":\"PriceChartPanel_Err__2BXJL\",\"HideErr\":\"PriceChartPanel_HideErr__2oeok\",\"CloseBtn\":\"PriceChartPanel_CloseBtn__3NdsE\",\"SelectBar\":\"PriceChartPanel_SelectBar__3LVlg\",\"Active\":\"PriceChartPanel_Active__31tkJ\",\"Inactive\":\"PriceChartPanel_Inactive__3QCOJ\",\"FocusBorder\":\"PriceChartPanel_FocusBorder__ozGaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Breakdown_Container__2ZBHJ\",\"Dark\":\"Breakdown_Dark__3c5nf\",\"Content\":\"Breakdown_Content__1CDyg\",\"Chart\":\"Breakdown_Chart__2P8m3\",\"TableContainer\":\"Breakdown_TableContainer__2BrHk\",\"TableInnerContainer\":\"Breakdown_TableInnerContainer__3LtWO\",\"Table\":\"Breakdown_Table__2Mqhr\",\"Title\":\"Breakdown_Title__3s-A7\",\"Up\":\"Breakdown_Up__1CTWr\",\"Down\":\"Breakdown_Down__2onNo\"};","import React from 'react';\r\nimport classes from './BackBtn.module.css';\r\nimport { arrowRight } from '../../UIIcons';\r\n\r\nconst BackBtn = props => (\r\n  <button className={props.mode === 'Hide' ? classes.Hide : classes.BackBtn} onClick={props.back}>\r\n    <span>{arrowRight}</span>\r\n  </button>\r\n);\r\n\r\nexport default BackBtn;\r\n","import React from 'react';\r\nimport classes from './PortPanelContainer.module.css';\r\nimport PanelContainer from '../../UI/PanelContainer/PanelContainer';\r\nimport CloseBtn from '../../UI/Btns/CloseBtn/CloseBtn';\r\n\r\nconst PortPanelContainer = props => (\r\n  <PanelContainer show={props.show} close={props.close}>\r\n    <div className={props.big ?\r\n      (props.show ? (props.down ? classes.BigDownPanel : classes.BigPanel) : classes.BigHide) :\r\n      (props.show ? (props.down ? classes.DownPanel : classes.Panel) : classes.Hide)}\r\n      style={!props.show ? { left: props.left } : null}>\r\n      <div style={{width: '100%'}}><CloseBtn close={props.close} /></div>\r\n      {props.children}\r\n    </div>\r\n  </PanelContainer>\r\n);\r\n\r\nexport default PortPanelContainer;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './SearchPanel.module.css';\r\nimport { instance as axios } from '../../../axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { calcNetWorth } from '../../../utils/valueCalcs';\r\nimport BackBtn from '../../UI/Btns/BackBtn/BackBtn';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport { NumInput, Input } from '../../UI/Inputs/Inputs';\r\nimport PortPanelContainer from '../PortPanelContainer/PortPanelContainer';\r\n\r\nconst SearchPanel = props => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchRes, setSearchRes] = useState([]);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [showManual, setShowManual] = useState(false);\r\n  const [inputValName, setInputValName] = useState('');\r\n  const [inputValTicker, setInputValTicker] = useState('');\r\n  const [inputValShares, setInputValShares] = useState(0);\r\n  const [inputValPrice, setInputValPrice] = useState(0);\r\n  const [selectedRes, setSelectedRes] = useState(null);\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [searchErr, setSearchErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [typingTimeout, setTypingTimeout] = useState();\r\n  const inputRef = useRef();\r\n  const sharesRef = useRef();\r\n  const isStock = props.mode === 'Stock';\r\n\r\n  useEffect(() => {\r\n    if (props.show) { setTimeout(() => inputRef.current.focus(), 400); }\r\n  }, [props.show]);\r\n\r\n  const setSearchQuery = val => {\r\n    // searches for stock/crypto 600ms after user stops typing\r\n    setSearchErr(false);\r\n    setQuery(val);\r\n    clearTimeout(typingTimeout);\r\n    setTypingTimeout(setTimeout(() => searchHandler(val), 600));\r\n  };\r\n\r\n  const searchHandler = val => {\r\n    if (val === '') { return setSearchRes([]); }\r\n    setLoading(true);\r\n    const url = isStock ? `portfolio/searchStock/${val}` : `portfolio/searchCrypto/${val}`;\r\n    axios.get(url).then(res => {\r\n      setSearchRes(res.data.result);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      setSearchErr(true);\r\n      setSearchRes([]);\r\n    });\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    props.close();\r\n    setQuery('');\r\n    setSearchRes([]);\r\n    resetInputsHandler();\r\n  };\r\n\r\n  const resetInputsHandler = () => {\r\n    setShowInput(false);\r\n    setShowManual(false);\r\n    setInputValName('');\r\n    setInputValShares(0);\r\n    setInputValPrice(0);\r\n    setInputValTicker('');\r\n    setSelectedRes(null);\r\n    setSelectedTicker('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setLoading(false);\r\n    setSearchErr(false);\r\n  };\r\n\r\n  const selectedHandler = stock => {\r\n    setShowInput(true);\r\n    setSelectedRes({ ...stock });\r\n    setSelectedTicker(stock.symbol);\r\n    setTimeout(() => sharesRef.current.focus(), 400);\r\n  };\r\n\r\n  const addHandler = async manual => {\r\n    if (inputValShares === 0 || inputValShares === '') { return; }\r\n    if (manual && (inputValName === '' || inputValTicker === '' || inputValPrice === '')) { return; }\r\n    // identifier is Manual if stock/crypto added manually, else is Normal\r\n    const data = { name: '', symbol: '', price: 0, quantity: '', value: 0, identifier: '' };\r\n    data.name = manual ? inputValName : selectedRes.name;\r\n    data.symbol = manual ? inputValTicker.toUpperCase() : selectedRes.symbol;\r\n    data.price = manual ? Number(inputValPrice).toFixed(2) : (selectedRes.price).toFixed(2);\r\n    data.quantity = inputValShares;\r\n    data.value = (data.quantity * data.price).toFixed(2);\r\n    data.identifier = manual ? 'Manual' : 'Normal';\r\n    // check if user has the stock/crypto already in portfolio\r\n    const curr = isStock ? [...props.stocks] : [...props.cryptos];\r\n    // check if stock/cypto already in portfolio\r\n    const check = curr.filter(inv => inv.symbol === data.symbol || (inv.name === data.name && manual));\r\n    if (check.length) { setErr(true); return setErrMsg(`You already have ${data.symbol} in your portfolio.`); }\r\n    // add stock/crypto to portfolio\r\n    curr.unshift({ ...data });\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (isStock) { updatedPortfolio.stocks = curr; }\r\n    else { updatedPortfolio.cryptos = curr; }\r\n    const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n    if (props.isDemo) {\r\n      props.setNetWorthData(updatedNetWorth);\r\n      isStock ? props.addStock(data) : props.addCrypto({ ...data, cmcID: selectedRes.cmcID });\r\n      props.addNotif(`${data.symbol} added to portfolio`);\r\n      // update todays highlights data\r\n      props.setUpdateHighlights();\r\n      return closeHandler();\r\n    }\r\n    try {\r\n      isStock ? await axios.put('portfolio/updateStocks', { data }) :\r\n      await axios.put('portfolio/updateCryptos', { data });\r\n      const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n      props.setNetWorthData(resp.data.result.dataPoints);\r\n      isStock ? props.addStock(data) : props.addCrypto({ ...data, cmcID: selectedRes.cmcID });\r\n      props.addNotif(`${data.symbol} added to portfolio`);\r\n      // update todays highlights data\r\n      props.setUpdateHighlights();\r\n      closeHandler();\r\n    } catch(e) { setErr(true); return setErrMsg('Error connecting to the server.'); }\r\n  };\r\n\r\n  return (\r\n    <PortPanelContainer show={props.show} close={closeHandler} down={props.down} left={isStock ? '-60px' : '-10px'} big>\r\n      <div className={classes.BackBtn}>\r\n        <BackBtn back={resetInputsHandler} mode={!showInput && !showManual ? 'Hide' : 'Show'} />\r\n      </div>\r\n      <p className={classes.Text} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>\r\n        {isStock ?\r\n        'Search for a stock by entering its ticker or the company name' :\r\n        'Search for a cryptocurrency by entering its symbol or name'}\r\n      </p>\r\n      <div className={classes.SearchInput}>\r\n        <Input val={query} change={setSearchQuery} ref={inputRef} ph={isStock ? 'AAPL, Apple, ...' : 'BTC, Bitcoin, ...'} dark2={props.dark} />\r\n      </div>\r\n      {loading && <Spinner mode=\"Search\" />}\r\n      <div className={props.dark ? classes.DarkResults : classes.Results}>\r\n        {searchRes.map((stock, i) => (\r\n          <div className={classes.Result} key={i} onClick={() => selectedHandler(stock)}>\r\n            {!isStock && <div className={classes.CoinIcon}><img src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${stock.cmcID}.png`} alt=\"\" /></div>}\r\n            <div className={classes.ResultLeft} style={!isStock ? {width: '240px'} : null}>\r\n              <div className={classes.SearchSymbol}>{stock.symbol}</div>\r\n              <div>{stock.name}</div>\r\n            </div>\r\n            <div className={classes.ResultRight}>\r\n              <div>${stock.price.toFixed(2)}</div>\r\n              <div className={stock.change >= 0 ? classes.PosChange : classes.NegChange}>\r\n                <span>\r\n                  {stock.change > 0 ? '+' : stock.change < 0 ? '-' : ''}\r\n                  {Math.abs(stock.change).toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className={classes.BtnDiv2}>\r\n          <BlueBtn clicked={() => setShowManual(true)}>\r\n            {`${isStock ? 'Stock' : 'Crypto'} not found? Add it manually`}\r\n          </BlueBtn>\r\n        </div>\r\n      </div>\r\n      <div className={searchErr ? classes.ShowErr : classes.HideErr}\r\n      style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>There was an error connecting to the server.</div>\r\n      <div className={showInput ? classes.ShowInput : classes.HideInput} style={props.dark ? {background: 'var(--panelBack)', color: 'rgb(var(--light-blue3))'} : null}>\r\n        <p className={classes.InputText}>\r\n          {isStock ?\r\n          `How many shares of ${selectedTicker} do you own?` :\r\n          `How much ${selectedTicker} do you own?`}\r\n        </p>\r\n        <div className={classes.AddInput}>\r\n          <NumInput val={inputValShares} change={val => setInputValShares(val)} ref={sharesRef} dark2={props.dark} />\r\n        </div>\r\n        <BlueBtn clicked={() => addHandler(false)}>Add</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{errMsg}</p>\r\n      </div>\r\n      <div className={showManual ? classes.ShowInput: classes.HideInput} style={props.dark ? {background: 'var(--panelBack)', color: 'rgb(var(--light-blue3))'} : null}>\r\n        <div>\r\n          <p>{isStock ? 'Ticker:' : 'Symbol:'}</p>\r\n          <Input ph={isStock ? 'eg AAPL' : 'eg BTC'} val={inputValTicker} change={val => { setInputValTicker(val); setErr(false); }} dark2={props.dark} />\r\n        </div>\r\n        <div>\r\n          <p>{isStock ? 'Company name:' : 'Name:'}</p>\r\n          <Input ph={isStock ? 'eg Apple' : 'eg Bitcoin'} val={inputValName} change={val => { setInputValName(val); setErr(false); }} dark2={props.dark} />\r\n        </div>\r\n        <div>\r\n          <p>Current price:</p>\r\n          <NumInput val={inputValPrice} change={val => { setInputValPrice(val); setErr(false); }} dark2={props.dark} />\r\n        </div>\r\n        <div>\r\n          <p>{isStock ? 'Number of shares:' : 'Quantity:'}</p>\r\n          <NumInput val={inputValShares} change={val => { setInputValShares(val); setErr(false); }} dark2={props.dark} />\r\n        </div>\r\n        <BlueBtn clicked={() => addHandler(true)}>Add</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{errMsg}</p>\r\n      </div>\r\n    </PortPanelContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo,\r\n  dark: state.theme.darkMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addStock: stock => dispatch(actions.addStock(stock)),\r\n  addCrypto: crypto => dispatch(actions.addCrypto(crypto)),\r\n  setNetWorthData: data => dispatch(actions.setNetWorthData(data)),\r\n  addNotif: msg => dispatch(actions.addNotif(msg)),\r\n  setUpdateHighlights: () => dispatch(actions.setUpdateHighlights(true))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel);\r\n","import React from 'react';\r\nimport ReactSelect from 'react-select';\r\nimport './Select.css';\r\n\r\nconst Select = props => (\r\n  <ReactSelect\r\n    options={props.options}\r\n    className=\"select-dropdown\"\r\n    onChange={props.change}\r\n    isSearchable\r\n    value={props.val}\r\n    classNamePrefix=\"react-select\"\r\n  />\r\n);\r\n\r\nexport default Select;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './BuySellPanel.module.css';\r\nimport { connect } from 'react-redux';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { instance as axios } from '../../../axios';\r\nimport { calcNetWorth } from '../../../utils/valueCalcs';\r\nimport Select from '../../UI/Select/Select';\r\nimport { NumInput } from '../../UI/Inputs/Inputs';\r\nimport PortPanelContainer from '../PortPanelContainer/PortPanelContainer';\r\nimport Form from '../../UI/Form/Form';\r\n\r\nconst BuySellPanel = props => {\r\n  const [selected, setSelected] = useState({ name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Normal' });\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selectedVal, setSelectedVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // set options based on mode/panel shown\r\n    if (props.show) {\r\n      if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n        setOptions(props.stocks.map(stock => ({ value: stock.name, label: stock.name })));\r\n      } else { setOptions(props.cryptos.map(crypto => ({ value: crypto.name, label: crypto.name }))); }\r\n    }\r\n  }, [props.mode, props.show, props.stocks, props.cryptos]);\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Normal' });\r\n    setSelectedVal(0);\r\n    setSelectedName('');\r\n    errHandler(false);\r\n    setOptions([]);\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = val => {\r\n    errHandler(false);\r\n    setSelectedVal(val);\r\n  };\r\n\r\n  const errHandler = bool => {\r\n    if (bool) { setErr(true); return setErrMsg('Error connecting to the server.'); }\r\n    setErr(false); setErrMsg('');\r\n  }\r\n\r\n  const confirmHandler = async () => {\r\n    if (selectedVal === 0) { return; }\r\n    // prevent update if selling more than have\r\n    if (props.mode === 'SellStock' || props.mode === 'SellCrypto') {\r\n      if (selectedVal > selected.quantity) {\r\n        setErr(true);\r\n        return setErrMsg(`You do not own enough${props.mode === 'SellStock' ? ' shares of' : ''} ${selected.symbol} to sell that much.`);\r\n      }\r\n      if (selectedVal === selected.quantity) {\r\n        let sellStock = props.mode === 'SellStock';\r\n        // if selling total value in portfolio then delete the stock/crypto from portfolio\r\n        const currField = sellStock ? props.stocks : props.cryptos;\r\n        const curr = currField.filter(inv => inv.name !== selected.name);\r\n        const updatedPortfolio = { ...props.portfolio };\r\n        if (sellStock) { updatedPortfolio.stocks = curr; }\r\n        else { updatedPortfolio.cryptos = curr; }\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        if (props.isDemo) {\r\n          // for demo mode only\r\n          props.setNetWorthData(updatedNetWorth);\r\n          sellStock ? props.changeStock(curr) : props.changeCrypto(curr);\r\n          props.addNotif(`${selected.symbol} removed from portfolio`);\r\n          // retrieves today's highlights again if stock/crypto deleted\r\n          props.setUpdateHighlights();\r\n          return closeHandler();\r\n        }\r\n        const data = { identifier: selected.identifier, name: selected.name };\r\n        try {\r\n          sellStock ? await axios.put('portfolio/deleteStock', { ...data }) :\r\n          await axios.put('portfolio/deleteCrypto', { ...data });\r\n          const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          sellStock ? props.changeStock(curr) : props.changeCrypto(curr);\r\n          props.addNotif(`${selected.symbol} removed from portfolio`);\r\n          // retrieves today's highlights again if stock/crypto deleted\r\n          props.setUpdateHighlights();\r\n          return closeHandler();\r\n        } catch(e) { return errHandler(true); }\r\n      }\r\n    }\r\n    // not selling all of the stock/crypto, update portfolio & net worth\r\n    const newPortfolio = props.mode === 'BuyStock' || props.mode === 'SellStock' ?\r\n    [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newQuantity = props.mode === 'BuyStock' || props.mode === 'BuyCrypto' ?\r\n    Number(Number(newData.quantity) + Number(selectedVal)) :\r\n    Number(Number(newData.quantity) - Number(selectedVal));\r\n    newData.quantity = Number(newQuantity);\r\n    newData.value = Number(newData.price * newQuantity);\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    let isStock = props.mode === 'BuyStock' || props.mode === 'SellStock';\r\n    if (isStock) { updatedPortfolio.stocks = [...newPortfolio]; }\r\n    else { updatedPortfolio.cryptos = [...newPortfolio]; }\r\n    const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n    if (props.isDemo) {\r\n      props.setNetWorthData(updatedNetWorth);\r\n      isStock ? props.changeStock(newPortfolio) : props.changeCrypto(newPortfolio);\r\n      props.addNotif(`${selected.symbol} updated in portfolio`);\r\n      return closeHandler();\r\n    }\r\n    try {\r\n      isStock ? await axios.put('portfolio/changeStock', { ...newData }) :\r\n      await axios.put('portfolio/changeCrypto', { ...newData });\r\n      const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n      props.setNetWorthData(resp.data.result.dataPoints);\r\n      isStock ? props.changeStock(newPortfolio) : props.changeCrypto(newPortfolio);\r\n      props.addNotif(`${selected.symbol} updated in portfolio`);\r\n      closeHandler();\r\n    } catch(e) { return errHandler(true); }\r\n  };\r\n\r\n  const selectHandler = selectedOption => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      return setSelected({ name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Normal' });\r\n    }\r\n    setSelectedName(selectedOption);\r\n    errHandler(false);\r\n    setSelectedVal(0);\r\n    if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n      const stockMatch = props.stocks.find(stock => stock.name === selectedOption.value);\r\n      setSelected({ ...stockMatch });\r\n    } else {\r\n      const cryptoMatch = props.cryptos.find(crypto => crypto.name === selectedOption.value);\r\n      setSelected({ ...cryptoMatch });\r\n    }\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <PortPanelContainer show={props.show} close={closeHandler} down={props.down}\r\n    left={props.mode === 'BuyStock' ? '52px' : props.mode === 'SellCrypto' ? '170px' : '115px'}>\r\n      <p className={classes.Text} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{\r\n        props.mode === 'BuyStock' ? 'Which stock did you buy?' :\r\n        props.mode === 'SellStock' ? 'Which stock did you sell?' :\r\n        props.mode === 'BuyCrypto' ? 'Which cryptocurrency did you buy?' :\r\n        'Which cryptocurrency did you sell?'\r\n      }</p>\r\n      <Select options={options} change={selectHandler} val={selectedName} />\r\n      <p className={selectedName === '' ? classes.HideText : classes.Text} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>\r\n        {props.mode === 'BuyStock' ?\r\n        `How many shares of ${selected.symbol} did you buy?` :\r\n        props.mode === 'SellStock' ?\r\n        `How many shares of ${selected.symbol} did you sell?` :\r\n        props.mode === 'BuyCrypto' ?\r\n        `How much ${selected.symbol} did you buy?` :\r\n        `How much ${selected.symbol} did you sell?`}\r\n      </p>\r\n      <Form allow={selectedVal !== 0 && props.show} submit={confirmHandler}>\r\n        <div className={classes.FormContainer}>\r\n          <div className={selectedName === '' ? classes.HideInputDiv : classes.InputDiv}>\r\n            <NumInput val={selectedVal} change={setValHandler} ref={inputRef} dark2={props.dark} />\r\n            {(props.mode === 'SellStock' || props.mode === 'SellCrypto') && (\r\n              <div className={classes.AllBtn}><BlueBtn clicked={() => setSelectedVal(selected.quantity)}>All</BlueBtn></div>)}\r\n          </div>\r\n          <div className={selectedName === '' ? classes.HideConfirmBtn : classes.ConfirmBtn}>\r\n            <BlueBtn isSubmit>Confirm</BlueBtn>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n      <p className={err ? classes.ShowErr : classes.HideErr} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{errMsg}</p>\r\n    </PortPanelContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo,\r\n  dark: state.theme.darkMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: cryptos => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: stocks => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: data => dispatch(actions.setNetWorthData(data)),\r\n  addNotif: msg => dispatch(actions.addNotif(msg)),\r\n  setUpdateHighlights: () => dispatch(actions.setUpdateHighlights(true))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuySellPanel);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './SettingsPanel.module.css';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Select from '../../UI/Select/Select';\r\nimport { instance as axios } from '../../../axios';\r\nimport { calcNetWorth } from '../../../utils/valueCalcs';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport { NumInput } from '../../UI/Inputs/Inputs';\r\nimport PortPanelContainer from '../PortPanelContainer/PortPanelContainer';\r\n\r\nconst SettingsPanel = props => {\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState({\r\n    name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Manual'\r\n  });\r\n  const [priceVal, setPriceVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const priceRef = useRef();\r\n  const isStock = props.mode === 'Stock';\r\n\r\n  useEffect(() => {\r\n    // set options based on mode & if panel shown\r\n    if (props.show) {\r\n      if (props.mode === 'Stock') {\r\n        setOptions(props.stocks.filter(stock => stock.identifier === 'Manual').map(stock => ({ value: stock.name, label: stock.name }))); }\r\n      else { setOptions(props.cryptos.filter(crypto => crypto.identifier === 'Manual').map(crypto => ({ value: crypto.name, label: crypto.name }))); }\r\n    }\r\n  }, [props.mode, props.show, props.stocks, props.cryptos]);\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Manual' });\r\n    setPriceVal(0);\r\n    setSelectedName('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setOptions([]);\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = val => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setPriceVal(val);\r\n  };\r\n\r\n  const selectHandler = selectedOption => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      return setSelected({ name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Manual' });\r\n    }\r\n    setSelectedName(selectedOption);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    // find stock/crypto from the selected value & update price val\r\n    const curr = isStock ? props.stocks.filter(stock => stock.identifier === 'Manual') :\r\n    props.cryptos.filter(crypto => crypto.identifier === 'Manual');\r\n    const match = curr.find(inv => inv.name === selectedOption.value);\r\n    setSelected({ ...match });\r\n    setPriceVal(match.price);\r\n    priceRef.current.focus();\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    const newPortfolio = isStock ? [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newPrice = Number(priceVal);\r\n    newData.price = newPrice;\r\n    newData.value = newPrice * newData.quantity;\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (isStock) { updatedPortfolio.stocks = [...newPortfolio]; }\r\n    else { updatedPortfolio.cryptos = [...newPortfolio]; }\r\n    const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n    if (props.isDemo) {\r\n      props.setNetWorthData(updatedNetWorth);\r\n      isStock ? props.changeStock(newPortfolio) : props.changeCrypto(newPortfolio);\r\n      props.addNotif(`${props.mode} price updated`);\r\n      return closeHandler();\r\n    }\r\n    try {\r\n      isStock ? await axios.put('portfolio/changeStock', { ...newData }) :\r\n      await axios.put('portfolio/changeCrypto', { ...newData });\r\n      const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n      props.setNetWorthData(resp.data.result.dataPoints);\r\n      isStock ? props.changeStock(newPortfolio) : props.changeCrypto(newPortfolio);\r\n      props.addNotif(`${props.mode} price updated`);\r\n      closeHandler();\r\n    } catch(e) { setErr(true); setErrMsg('Error connecting to the server.'); }\r\n  };\r\n\r\n  return (\r\n    <PortPanelContainer show={props.show} close={closeHandler} down={props.down} left={isStock ? '282px' : '225px'}>\r\n      <p className={classes.Text} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>\r\n        {isStock ?\r\n        'Change the price of a manually added stock' :\r\n        'Change the price of a manually added cryptocurrency'}\r\n      </p>\r\n      <Select options={options} change={selectHandler} val={selectedName} />\r\n      <div className={selectedName !== '' ? classes.ShowInput : classes.HideInput} style={props.dark ? { background: 'var(--panelBack)'} : null}>\r\n        <NumInput val={priceVal} change={setValHandler} ref={priceRef} dark2={props.dark} />\r\n        <BlueBtn clicked={confirmHandler}>Confirm</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{errMsg}</p>\r\n      </div>\r\n    </PortPanelContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo,\r\n  dark: state.theme.darkMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: cryptos => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: stocks => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: data => dispatch(actions.setNetWorthData(data)),\r\n  addNotif: msg => dispatch(actions.addNotif(msg))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPanel);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './AssetPanel.module.css';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { instance as axios } from '../../../axios';\r\nimport { calcNetWorth } from '../../../utils/valueCalcs';\r\nimport Select from '../../UI/Select/Select';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport { Input, NumInput } from '../../UI/Inputs/Inputs';\r\nimport PortPanelContainer from '../PortPanelContainer/PortPanelContainer';\r\n\r\nconst AssetPanel = props => {\r\n  const [titleText, setTitleText] = useState('');\r\n  const [panelLeft, setPanelLeft] = useState('135px');\r\n  const [confirmClass, setConfirmClass] = useState(classes.HideConfirm);\r\n  const [options, setOptions] = useState(null);\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [inputName, setInputName] = useState('');\r\n  const [inputDesc, setInputDesc] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [newValue, setNewValue] = useState('');\r\n  const nameRef = useRef();\r\n  const valRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // set options/titleText/panel position based on curr mode\r\n    switch(props.mode) {\r\n      case 'AddAsset':\r\n        setTitleText('Add a new asset');\r\n        setPanelLeft('-45px');\r\n        nameRef.current.focus();\r\n        break;\r\n      case 'RemoveAsset':\r\n        setTitleText('Select an asset to remove it from your portfolio');\r\n        setPanelLeft('135px');\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.desc, label: asset.desc })));\r\n        break;\r\n      case 'AddDebt':\r\n        setTitleText('Add a new liability');\r\n        setPanelLeft('-45px');\r\n        nameRef.current.focus();\r\n        break;\r\n      case 'RemoveDebt':\r\n        setTitleText('Select a liability to remove it from your portfolio');\r\n        setPanelLeft('135px');\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.desc, label: debt.desc })));\r\n        break;\r\n      case 'SettingsAsset':\r\n        setTitleText('Select an asset to change its value');\r\n        setPanelLeft('242px');\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.desc, label: asset.desc })));\r\n        break;\r\n      default:\r\n        setTitleText('Select a liability to change its value');\r\n        setPanelLeft('242px');\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.desc, label: debt.desc })));\r\n        break;\r\n    }\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => btnClassHandler(), [inputName, inputDesc, inputValue]);\r\n\r\n  useEffect(() => {\r\n    // focus input if asset/liability is selected\r\n    if ((props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') && selectedName !== '') {\r\n      valRef.current.focus();\r\n    }\r\n  }, [props.mode, selectedName]);\r\n\r\n  const closeHandler = () => {\r\n    setTitleText('');\r\n    setConfirmClass(classes.HideConfirm);\r\n    setOptions(null);\r\n    setSelectedName('');\r\n    setSelected(null);\r\n    setInputName('');\r\n    setInputDesc('');\r\n    setInputValue('');\r\n    errHandler(false);\r\n    setNewValue('');\r\n    props.close();\r\n  };\r\n\r\n  const selectHandler = option => {\r\n    if (!option) {\r\n      setSelectedName('');\r\n      setConfirmClass(classes.HideConfirm);\r\n      return setSelected(null);\r\n    }\r\n    setSelectedName(option);\r\n    errHandler(false);\r\n    setConfirmClass(classes.Confirm);\r\n    if (props.mode === 'SettingsAsset' || props.mode === 'RemoveAsset') {\r\n      const assetMatch = props.otherAssets.find(asset => asset.desc === option.value);\r\n      setSelected({ ...assetMatch });\r\n      setNewValue(assetMatch.value);\r\n    } else if (props.mode === 'SettingsDebt' || props.mode === 'RemoveDebt') {\r\n      const debtMatch = props.liabilities.find(debt => debt.desc === option.value);\r\n      setSelected({ ...debtMatch });\r\n      setNewValue(debtMatch.value);\r\n    }\r\n  };\r\n\r\n  const btnClassHandler = () => {\r\n    errHandler(false);\r\n    // show confirm btn if all fields arent empty\r\n    if (inputName.length > 0 && inputDesc.length > 0 && inputValue.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const newValueHandler = val => {\r\n    setNewValue(val);\r\n    errHandler(false);\r\n  };\r\n\r\n  const errHandler = bool => {\r\n    if (bool) {setErr(true); return setErrMsg('Error connecting to the server.'); }\r\n    setErr(false); setErrMsg('');\r\n  };\r\n\r\n  const confirmValid = data => {\r\n    if (props.mode === 'AddAsset') {\r\n      for (let asset of props.otherAssets) {\r\n        // must have diff names\r\n        if (asset.desc === data.desc) {\r\n          setErr(true);\r\n          setErrMsg(`You already have ${data.desc.length < 15 ? data.desc : 'that asset'} in your portfolio.`);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    if (props.mode === 'AddDebt') {\r\n      for (let debt of props.liabilities) {\r\n        if (debt.desc === data.desc) {\r\n          setErr(true);\r\n          setErrMsg(`You already have ${data.desc.length < 15 ? data.desc : 'that liability'} in your portfolio.`);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    const data = props.mode.includes('Settings') ? { value: newValue, name: selected.name, desc: selected.desc } :\r\n    { name: inputName, desc: inputDesc, value: inputValue };\r\n    // return if fields not valid\r\n    if (!confirmValid(data)) { return; }\r\n    const curr = props.mode.includes('Asset') ? [...updatedPortfolio.otherAssets] :\r\n    [...updatedPortfolio.liabilities];\r\n    if (props.isDemo) {\r\n      let msg = '';\r\n      if (props.mode === 'AddAsset') {\r\n        curr.unshift({ ...data });\r\n        updatedPortfolio.otherAssets = curr;\r\n        msg = 'Asset added to portfolio';\r\n      }\r\n      if (props.mode === 'RemoveAsset') {\r\n        updatedPortfolio.otherAssets = curr.filter(asset => asset.desc !== selected.desc);\r\n        msg = 'Asset removed from portfolio';\r\n      }\r\n      if (props.mode === 'AddDebt') {\r\n        curr.unshift({ ...data });\r\n        updatedPortfolio.liabilities = curr;\r\n        msg = 'Liability added to portfolio';\r\n      }\r\n      if (props.mode === 'RemoveDebt') {\r\n        updatedPortfolio.liabilities = curr.filter(debt => debt.desc !== selected.desc);\r\n        msg = 'Liability removed from portfolio';\r\n      }\r\n      if (props.mode === 'SettingsAsset') {\r\n        const index = curr.findIndex(asset => asset.desc === data.desc);\r\n        curr[index].value = data.value;\r\n        updatedPortfolio.otherAssets = curr;\r\n        msg = 'Asset updated in portfolio';\r\n      }\r\n      if (props.mode === 'SettingsDebt') {\r\n        const index = curr.findIndex(debt => debt.desc === data.desc);\r\n        curr[index].value = data.value;\r\n        updatedPortfolio.liabilities = curr;\r\n        msg = 'Liability updated in portfolio';\r\n      }\r\n      // update net worth\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.mode.includes('Asset')) { props.updateAssets(updatedPortfolio.otherAssets); }\r\n      else { props.updateDebts(updatedPortfolio.liabilities); }\r\n      props.setNetWorthData(updatedNetWorth);\r\n      props.addNotif(msg);\r\n      return closeHandler();\r\n    }\r\n    try {\r\n      let msg = '';\r\n      if (props.mode === 'AddAsset') {\r\n        // add asset to portfolio\r\n        const res = await axios.put('portfolio/addAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        msg = 'Asset added to portfolio';\r\n      } else if (props.mode === 'RemoveAsset') {\r\n        // remove asset from portfolio\r\n        const res = await axios.put('portfolio/removeAsset', { desc: selected.desc });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        msg = 'Asset removed from portfolio';\r\n      } else if (props.mode === 'AddDebt') {\r\n        // add liability to portfolio\r\n        const res = await axios.put('portfolio/addDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        msg = 'Liability added to portfolio';\r\n      } else if (props.mode === 'RemoveDebt') {\r\n        // remove liability from portfolio\r\n        const res = await axios.put('portfolio/removeDebt', { desc: selected.desc });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        msg = 'Liability removed from portfolio';\r\n      } else if (props.mode === 'SettingsAsset') {\r\n        // update price of asset in portfolio\r\n        const res = await axios.put('portfolio/updateAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        msg = 'Asset updated in portfolio';\r\n      } else {\r\n        // update value of liability in portfolio\r\n        const res = await axios.put('portfolio/updateDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        msg = 'Liability updated in portfolio';\r\n      }\r\n      // update net worth\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n      props.setNetWorthData(resp.data.result.dataPoints);\r\n      if (props.mode.includes('Asset')) { props.updateAssets(updatedPortfolio.otherAssets); }\r\n      if (props.mode.includes('Debt')) { props.updateDebts(updatedPortfolio.liabilities); }\r\n      props.addNotif(msg);\r\n      return closeHandler();\r\n    } catch(e) { return errHandler(true); }\r\n  };\r\n\r\n  return (\r\n    <PortPanelContainer show={props.show} close={closeHandler} left={panelLeft} down={props.down}>\r\n      <p className={(props.mode === 'AddAsset' || props.mode === 'AddDebt') ? classes.Text2 : classes.Text}\r\n      style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{titleText}</p>\r\n      {options ?\r\n        <div style={{marginBottom: (props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') ? '0' : '15px'}}>\r\n          <Select options={options} change={selectHandler} val={selectedName} /></div>\r\n        :\r\n        <div className={classes.Inputs} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>\r\n          <div>\r\n            <p>Category</p>\r\n            <Input val={inputName} change={val => setInputName(val)} ref={nameRef} dark2={props.dark} />\r\n          </div>\r\n          <div>\r\n            <p>Description</p>\r\n            <Input val={inputDesc} change={val => setInputDesc(val)} dark2={props.dark} />\r\n          </div>\r\n          <div>\r\n            <p>Value</p>\r\n            <NumInput val={inputValue} change={val => setInputValue(val)} dark2={props.dark} />\r\n          </div>\r\n        </div>\r\n      }\r\n      {(props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') && selectedName !== '' ?\r\n        <div className={classes.NewValueInput}>\r\n          <NumInput val={newValue} change={newValueHandler} ref={valRef} dark2={props.dark} />\r\n        </div>\r\n      : null}\r\n      <div className={confirmClass} style={(props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') ? {marginTop: '20px'} : null}>\r\n        <BlueBtn clicked={confirmHandler}>Confirm</BlueBtn></div>\r\n      <p className={err ? classes.ShowErr : classes.HideErr} style={props.dark ? {color: 'rgb(var(--light-blue3))'} : null}>{errMsg}</p>\r\n    </PortPanelContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  otherAssets: state.portfolio.otherAssets,\r\n  liabilities: state.portfolio.liabilities,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo,\r\n  dark: state.theme.darkMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setNetWorthData: data => dispatch(actions.setNetWorthData(data)),\r\n  updateAssets: assets => dispatch(actions.updateAssets(assets)),\r\n  updateDebts: debts => dispatch(actions.updateDebts(debts)),\r\n  addNotif: msg => dispatch(actions.addNotif(msg))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetPanel);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './Highlights.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { formatNum } from '../../../utils/formatNum';\r\nimport * as actions from '../../../store/actions';\r\nimport { instance as axios } from '../../../axios';\r\nimport { arrowRight } from '../../UI/UIIcons';\r\n\r\nconst Highlights = props => {\r\n  const [NWchange, setNWChange] = useState(0);\r\n  const [showErr, setShowErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (props.netWorthData.length >= 2) {\r\n      // calculate change in net worth since last log in\r\n      let diff = props.netWorthData[props.netWorthData.length - 1].value - props.netWorthData[props.netWorthData.length - 2].value;\r\n      setNWChange(diff);\r\n    }\r\n    if (!props.stocks.length && !props.cryptos.length) {\r\n      setErrMsg('Add more stocks and cryptocurrencies to your portfolio to get more highlights.');\r\n      return setShowErr(true);\r\n    }\r\n\r\n    const getData = async () => {\r\n      try {\r\n        const stockNames = props.stocks.filter(stock => stock.identifier !== 'Manual').map(stock => stock.symbol);\r\n        const cryptoNames = props.cryptos.filter(crypto => crypto.identifier !== 'Manual').map(crypto => crypto.symbol);\r\n        const data = await axios.post('portfolio/highlights', { stocks: stockNames, cryptos: cryptoNames });\r\n        props.setHighlights(data.data);\r\n      } catch(e) { setErrMsg('There was an error connecting to the server.'); setShowErr(true); }\r\n    };\r\n\r\n    // get highest/lowest performing stock/crypto this week on mount\r\n    if (props.updateHighlights) { getData(); }\r\n  }, [props.netWorthData, props.wasMounted, props.stocks, props.cryptos, props.setHighlights]);\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <h1 className={classes.Title}>Today's Highlights</h1>\r\n      <div className={props.darkMode ? `${classes.InfoContainer} ${classes.Dark}` : classes.InfoContainer}>\r\n        <div className={classes.InfoContent}>\r\n          <div className={classes.Info}>{\r\n            NWchange === 0 ? <span>Your net worth has not changed since the last time you logged in.</span> :\r\n            <span>Your net worth has {NWchange > 0 ? 'increased' : 'decreased'} by <span className={NWchange > 0 ? classes.Green : classes.Red}>\r\n            ${formatNum(Math.abs(NWchange))}</span> since you last logged in.</span>\r\n          }</div>\r\n          {props.highestStock.symbol !== '' &&\r\n            <div className={`${classes.Info} ${classes.AnimIn}`}>\r\n              <span className={classes.Bold}>{props.highestStock.symbol} </span>\r\n              is your highest performing stock this week, {props.highestStock.change > 0 ? 'increasing' : 'decreasing'} in price by\r\n              <span className={props.highestStock.change > 0 ? classes.Green : classes.Red}> {Math.abs((props.highestStock.change)).toFixed(2)}%.</span>\r\n            </div>}\r\n          {props.lowestStock.symbol !== '' &&\r\n            <div className={`${classes.Info} ${classes.AnimIn}`}>\r\n              <span className={classes.Bold}>{props.lowestStock.symbol} </span>\r\n              is your lowest performing stock this week, {props.lowestStock.change > 0 ? 'increasing' : 'decreasing'} in price by\r\n              <span className={props.lowestStock.change > 0 ? classes.Green : classes.Red}> {Math.abs((props.lowestStock.change)).toFixed(2)}%.</span>\r\n            </div>}\r\n          {props.highestCrypto.symbol !== '' &&\r\n            <div className={`${classes.Info} ${classes.AnimIn}`}>\r\n              <span className={classes.Bold}>{props.highestCrypto.symbol} </span>\r\n              is your highest performing cryptocurrency this week, {props.highestCrypto.change > 0 ? 'increasing' : 'decreasing'} in price by\r\n              <span className={props.highestCrypto.change > 0 ? classes.Green : classes.Red}> {Math.abs((props.highestCrypto.change)).toFixed(2)}%.</span>\r\n            </div>}\r\n          {props.lowestCrypto.symbol !== '' &&\r\n            <div className={`${classes.Info} ${classes.AnimIn}`}>\r\n              <span className={classes.Bold}>{props.lowestCrypto.symbol} </span>\r\n              is your lowest performing cryptocurrency this week, {props.lowestCrypto.change > 0 ? 'increasing' : 'decreasing'} in price by\r\n              <span className={props.lowestCrypto.change > 0 ? classes.Green : classes.Red}> {Math.abs((props.lowestCrypto.change)).toFixed(2)}%.</span>\r\n            </div>}\r\n          {showErr && <div className={classes.NoInfo}>{errMsg}</div>}\r\n        </div>\r\n        <div className={classes.NewsLink} onClick={props.openNews}>Get financial news{arrowRight}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  netWorthData: state.netWorth.netWorthData,\r\n  updateHighlights: state.portfolio.updateHighlights,\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  highestStock: state.portfolio.highlightData.highestStock,\r\n  lowestStock: state.portfolio.highlightData.lowestStock,\r\n  highestCrypto: state.portfolio.highlightData.highestCrypto,\r\n  lowestCrypto: state.portfolio.highlightData.lowestCrypto,\r\n  darkMode: state.theme.darkMode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setHighlights: data => dispatch(actions.setHighlights(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Highlights);\r\n","import React from 'react';\r\nimport classes from './PremiumContainer.module.css';\r\nimport PanelContainer from '../../UI/PanelContainer/PanelContainer';\r\nimport CloseBtn from '../../UI/Btns/CloseBtn/CloseBtn';\r\nimport { PassInput } from '../../UI/Inputs/Inputs';\r\n\r\nconst PremiumContainer = props => (\r\n  <React.Fragment>\r\n    <div className={props.show ? classes.Backdrop : classes.HideBackdrop}></div>\r\n    <PanelContainer show={props.show} close={props.close}>\r\n      <div className={props.show ? classes.Panel : `${classes.Panel} ${classes.HidePanel}`}>\r\n        <div className={classes.CloseBtn}><CloseBtn close={props.close} /></div>\r\n        <div className={props.isAuth ? classes.AuthTitle : classes.Title}>{props.title}</div>\r\n        {!props.isAuth && <><div className={classes.InputText}>You must be logged in or have an access code to access this feature</div>\r\n        <div className={props.codeInvalid ? `${classes.AccessInput} ${classes.RedInput}` : classes.AccessInput}>\r\n          <PassInput val={props.accessCode} change={props.accessHandler} ph=\"Access Code\" />\r\n        </div></>}\r\n        <div className={classes.Content}>{props.children}</div>\r\n      </div>\r\n    </PanelContainer>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default PremiumContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './NewsPanel.module.css';\r\nimport { SearchInput } from '../../UI/Inputs/Inputs';\r\nimport { instance as axios } from '../../../axios';\r\nimport { formatDate3 } from '../../../utils/formatDate';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport { arrowRight } from '../../UI/UIIcons';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport PremiumContainer from '../PremiumContainer/PremiumContainer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NewsPanel = props => {\r\n  const [query, setQuery] = useState('');\r\n  const [accessCode, setAccessCode] = useState('');\r\n  const [news, setNews] = useState([]);\r\n  const [sentiment, setSentiment] = useState({\r\n    totArticles: 0,\r\n    bearPerc: 0,\r\n    bullPerc: 0,\r\n    ticker: ''\r\n  });\r\n  const [err, setErr] = useState(false);\r\n  const [codeInvalid, setCodeInvalid] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('Error');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!props.show) {\r\n      setErr(false);\r\n      setCodeInvalid(false);\r\n      setLoading(false);\r\n    }\r\n  }, [props.show]);\r\n\r\n  const errHandler = msg => { setErr(true); setErrMsg(msg); };\r\n\r\n  const searchHelper = data => {\r\n    setNews(data.map(article => ({\r\n      date: formatDate3(new Date(article.datetime * 1000)),\r\n      headline: article.headline,\r\n      summary: article.summary,\r\n      url: article.url,\r\n      image: article.image\r\n    })));\r\n    setLoading(false);\r\n  };\r\n\r\n  const search = () => {\r\n    if (query === '' || (accessCode === '' && !props.isAuth)) { return; }\r\n    setLoading(true);\r\n    // access code needed if not logged in\r\n    const url = props.isAuth ? `portfolio/authNews/${query}` : `portfolio/news/${accessCode}/${query}`;\r\n    axios.get(url).then(res => {\r\n      searchHelper(res.data.news);\r\n      setSentiment({\r\n        totArticles: res.data.sentiment.buzz.articlesInLastWeek,\r\n        bearPerc: (res.data.sentiment.sentiment.bearishPercent * 100).toFixed(2),\r\n        bullPerc: (res.data.sentiment.sentiment.bullishPercent * 100).toFixed(2),\r\n        ticker: query\r\n      });\r\n      setErr(false);\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      if (err.response) {\r\n        let status = err.response.status;\r\n        if (status === 401 && !props.isAuth) { setCodeInvalid(true); }\r\n        if (status === 400) { errHandler('No news was found for the symbol you entered.'); }\r\n      } else { errHandler('There was an error connecting to the server.'); }\r\n    });\r\n  };\r\n\r\n  const generalSearch = () => {\r\n    if (accessCode === '' && !props.isAuth) { return; }\r\n    setLoading(true);\r\n    // access code needed if not logged in\r\n    const url = props.isAuth ? `portfolio/authGeneralNews` : `portfolio/generalNews/${accessCode}`;\r\n    axios.get(url).then(res => {\r\n      searchHelper(res.data.news);\r\n      setSentiment({ totArticles: 0, bearPerc: 0, bullPerc: 0, ticker: '' });\r\n      setErr(false);\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      if (err.response && err.response.status === 401 && !props.isAuth) { setCodeInvalid(true); }\r\n      else { errHandler('There was an error connecting to the server.'); }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PremiumContainer title=\"Financial News\" show={props.show} close={props.close} accessCode={accessCode}\r\n    codeInvalid={codeInvalid} accessHandler={val => { setCodeInvalid(false); setAccessCode(val); }} isAuth={props.isAuth}>\r\n      <div style={news.length > 0 ? { width: '488px' } : { width: '500px' }}>\r\n        <div className={classes.StockText}>Get today's market news or enter a stock ticker for recent company news</div>\r\n        <div className={classes.Inputs}>\r\n          <div className={classes.GeneralBtn}><BlueBtn big clicked={generalSearch}>General market news{arrowRight}</BlueBtn></div>\r\n          <div><SearchInput val={query} change={val => { setErr(false); setQuery(val); }} submit={search} ph=\"Eg AAPL, aapl\" /></div>\r\n          {loading && <Spinner mode=\"News\" />}\r\n        </div>\r\n        <div className={err ? classes.Err : classes.HideErr}>{errMsg}</div>\r\n        {sentiment.ticker !== '' && <div className={classes.Sentiment}>\r\n          <div>Total articles mentioning {String(sentiment.ticker).toUpperCase()} this week: <span>{sentiment.totArticles}</span></div>\r\n          <div>Articles with bearish sentiment: <span>{sentiment.bearPerc}%</span></div>\r\n          <div>Articles with bullish sentiment: <span>{sentiment.bullPerc}%</span></div>\r\n        </div>}\r\n        {news.map((art, i) => (\r\n          <div className={classes.Article} key={i}>\r\n            <div>\r\n              <a href={art.url} target=\"_blank\" rel=\"noopener noreferrer\">{art.headline}</a>\r\n              <div className={classes.Summary}>{art.summary}</div>\r\n              <div className={classes.Date}>{art.date}</div>\r\n            </div>\r\n            <img src={art.image} alt=\"\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </PremiumContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewsPanel);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './AnalysisPanel.module.css';\r\nimport Select from '../../UI/Select/Select';\r\nimport { connect } from 'react-redux';\r\nimport PremiumContainer from '../PremiumContainer/PremiumContainer';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport { instance as axios } from '../../../axios';\r\nimport { formatNum } from '../../../utils/formatNum';\r\nimport Chart from '../../UI/Chart/Chart';\r\n\r\nconst AnalysisPanel = props => {\r\n  const [selected, setSelected] = useState({ value: '', label: '' });\r\n  const [options, setOptions] = useState([]);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [accessCode, setAccessCode] = useState('');\r\n  const [codeInvalid, setCodeInvalid] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [target, setTarget] = useState({\r\n    high: 0,\r\n    low: 0,\r\n    mean: 0,\r\n    median: 0\r\n  });\r\n  const [recom, setRecom] = useState({\r\n    buy: [],\r\n    sell: [],\r\n    hold: [],\r\n    strongBuy: [],\r\n    strongSell: []\r\n  });\r\n  const [EPSActual, setEPSActual] = useState([]);\r\n  const [EPSEstimate, setEPSEstimate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const stockOptions = props.stocks.filter(stock => stock.identifier !== 'Manual')\r\n    .map(stock => ({ value: stock.symbol, label: stock.name }));\r\n    setOptions(stockOptions);\r\n  }, [props.stocks]);\r\n\r\n  const closeHandler = () => {\r\n    setErr(false);\r\n    setCodeInvalid(false);\r\n    setLoading(false);\r\n    setErrMsg('');\r\n    setSelected({ value: '', label: '' });\r\n    resetData();\r\n    props.close();\r\n  };\r\n\r\n  const resetData = () => {\r\n    setTarget({ high: 0, low: 0, mean: 0, median: 0 });\r\n    setEPSActual([]);\r\n    setEPSEstimate([]);\r\n    setRecom({ buy: [], sell: [], hold: [], strongBuy: [], strongSell: [] });\r\n  };\r\n\r\n  const selectHandler = selectedOption => {\r\n    if (!selectedOption) { return setSelected({ value: '', label: '' }); }\r\n    setSelected({ ...selectedOption });\r\n    setErr(false);\r\n    getData(selectedOption.value);\r\n  };\r\n\r\n  const getData = ticker => {\r\n    if (loading) { return; }\r\n    if (accessCode === '' && !props.isAuth) { return setSelected({ value: '', label: '' }); }\r\n    setLoading(true);\r\n    const url = props.isAuth ? `portfolio/authAnalysis/${ticker}` : `portfolio/analysis/${accessCode}/${ticker}`;\r\n    axios.get(url).then(res => {\r\n      setLoading(false);\r\n      const tar = res.data.target;\r\n      setTarget({ high: tar.targetHigh, low: tar.targetLow, mean: tar.targetMean, median: tar.targetMedian });\r\n      setEPSActual(res.data.earnings.map(pt => ({ x: new Date(pt.period), y: Number(pt.actual.toFixed(2)) })));\r\n      setEPSEstimate(res.data.earnings.map(pt => ({ x: new Date(pt.period), y: Number(pt.estimate.toFixed(2)) })));\r\n      const recomData = res.data.recommendation.slice(0, 7);\r\n      setRecom({\r\n        buy: recomData.map(pt => ({ x: new Date(pt.period), y: pt.buy })),\r\n        sell: recomData.map(pt => ({ x: new Date(pt.period), y: pt.sell })),\r\n        hold: recomData.map(pt => ({ x: new Date(pt.period), y: pt.hold })),\r\n        strongBuy: recomData.map(pt => ({ x: new Date(pt.period), y: pt.strongBuy })),\r\n        strongSell: recomData.map(pt => ({ x: new Date(pt.period), y: pt.strongSell }))\r\n      });\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      resetData();\r\n      if (err.response && err.response.status === 401 && !props.isAuth) { setCodeInvalid(true); errHandler('Invalid access code.'); }\r\n      else if (err.response && err.response.status === 400) { errHandler(`The analysis could not be retrieved for ${ticker}`); }\r\n      else { errHandler('There was an error connecting to the server.'); }\r\n    });\r\n  };\r\n\r\n  const errHandler = msg => {\r\n    setErr(true);\r\n    setErrMsg(msg);\r\n  };\r\n\r\n  const earningsOptions = {\r\n    animationEnabled: true,\r\n    theme: 'light2',\r\n    exportEnabled: false,\r\n    toolTip: { content: '{x}: ${y}' },\r\n    axisY: { title: 'Quarterly EPS' },\r\n    data: [{\r\n      type: 'scatter',\r\n      name: 'Actual',\r\n      markerType: 'circle',\r\n      markerSize: 30,\r\n      showInLegend: true,\r\n      color: 'rgb(26, 171, 152)',\r\n      fillOpacity: '0.7',\r\n      dataPoints: EPSActual\r\n    },\r\n    {\r\n      type: 'scatter',\r\n      name: 'Estimate',\r\n      markerType: 'circle',\r\n      markerSize: 30,\r\n      showInLegend: true,\r\n      color: 'rgb(15, 119, 147)',\r\n      fillOpacity: '0.7',\r\n      dataPoints: EPSEstimate\r\n    }]\r\n  };\r\n\r\n  const recomOptions = {\r\n    animationEnabled: true,\r\n    theme: 'light2',\r\n    exportEnabled: false,\r\n    axisY: { title: 'Number of analysts' },\r\n    legend: { maxWidth: 350 },\r\n    data: [{\r\n      type: 'stackedColumn',\r\n      name: 'Buy',\r\n      yValueFormatString: '#,### Buy',\r\n      showInLegend: true,\r\n      fillOpacity: '1',\r\n      dataPoints: recom.buy\r\n    },\r\n    {\r\n      type: 'stackedColumn',\r\n      name: 'Sell',\r\n      yValueFormatString: '#,### Sell',\r\n      showInLegend: true,\r\n      fillOpacity: '1',\r\n      dataPoints: recom.sell\r\n    },\r\n    {\r\n      type: 'stackedColumn',\r\n      name: 'Hold',\r\n      yValueFormatString: '#,### Hold',\r\n      showInLegend: true,\r\n      fillOpacity: '1',\r\n      dataPoints: recom.hold\r\n    },\r\n    {\r\n      type: 'stackedColumn',\r\n      name: 'Strong Buy',\r\n      yValueFormatString: '#,### Strong Buy',\r\n      showInLegend: true,\r\n      fillOpacity: '1',\r\n      dataPoints: recom.strongBuy\r\n    },\r\n    {\r\n      type: 'stackedColumn',\r\n      name: 'Strong Sell',\r\n      yValueFormatString: '#,### Strong Sell',\r\n      showInLegend: true,\r\n      fillOpacity: '1',\r\n      dataPoints: recom.strongSell\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <PremiumContainer title=\"Stock Analysis\" show={props.show} close={closeHandler} accessCode={accessCode}\r\n    codeInvalid={codeInvalid} accessHandler={val => { setCodeInvalid(false); setAccessCode(val); }} isAuth={props.isAuth}>\r\n      <div className={classes.Content}>\r\n        <div className={classes.SubTitle}>Select a stock from your portfolio to retrieve its analysis</div>\r\n        <div className={classes.Select}>\r\n          <Select options={options} change={selectHandler} val={selected} />\r\n          {loading && <Spinner mode=\"Analysis\" />}\r\n        </div>\r\n        <div className={err ? classes.Err : classes.HideErr}>{errMsg}</div>\r\n        <div className={selected.value === '' || loading || err ? classes.HideData : classes.Data}>\r\n          <div className={classes.StockTitle}><span>{selected.value}</span>-<span>{selected.label}</span></div>\r\n          <div className={classes.Title}>{target.mean === 0 ? `No price targets were found for ${selected.value}.` :\r\n          'Current quarter analyst price targets'}</div>\r\n          {target.mean !== 0 &&\r\n            <div className={classes.Targets}>\r\n              <div>\r\n                <span>High: ${formatNum(target.high)}</span>\r\n                <span>Low: ${formatNum(target.low)}</span>\r\n              </div>\r\n              <div>\r\n                <span>Mean: ${formatNum(target.mean)}</span>\r\n                <span>Median: ${formatNum(target.median)}</span>\r\n              </div>\r\n            </div>}\r\n          {EPSActual.length > 0 ?\r\n            <div className={classes.Chart}>\r\n              <div className={classes.ChartTitle}>EPS Actual vs. EPS Estimate</div>\r\n              <Chart options={earningsOptions} />\r\n            </div>\r\n          : <div className={classes.Title}>No EPS data was found for {selected.value}.</div>}\r\n          {recom.buy.length > 0 ?\r\n            <div className={classes.Chart}>\r\n              <div className={classes.ChartTitle}>Recommendation Trends</div>\r\n              <Chart options={recomOptions} />\r\n            </div>\r\n            : <div className={classes.Title}>No recommendation trend data was found for {selected.value}.</div>}\r\n        </div>\r\n      </div>\r\n    </PremiumContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps)(AnalysisPanel);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './PriceChartPanel.module.css';\r\nimport { StockChart } from '../../UI/Chart/Chart';\r\nimport { instance as axios } from '../../../axios';\r\nimport CloseBtn from '../../UI/Btns/CloseBtn/CloseBtn';\r\nimport { connect } from 'react-redux';\r\nimport PanelContainer from '../../UI/PanelContainer/PanelContainer';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\nconst PriceChartPanel = props => {\r\n  const [priceData, setPriceData] = useState({ dps1: [], dps2: [], dps3: [] });\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.show) { getData(); }\r\n  }, [props.show, props.symbol]);\r\n\r\n  const closeHandler = () => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setLoading(false);\r\n    setPriceData({ dps1: [], dps2: [], dps3: [] });\r\n    props.close();\r\n  };\r\n\r\n  const getData = async () => {\r\n    if (loading) { return; }\r\n    setLoading(true);\r\n    setErr(false);\r\n    try {\r\n      if (props.mode === 'Stock') {\r\n        const data = await axios.get(`portfolio/stockPriceData/${props.symbol}`);\r\n        setLoading(false);\r\n        const stockData = data.data.stockData;\r\n        const dps1 = []; const dps2 = []; const dps3 = [];\r\n        for (let i = 0; i < stockData.length; i++) {\r\n          dps1.push({ x: new Date(stockData[i].date), y: [stockData[i].open, stockData[i].high, stockData[i].low, stockData[i].close] });\r\n          dps2.push({ x: new Date(stockData[i].date), y: stockData[i].volume });\r\n          dps3.push({ x: new Date(stockData[i].date), y: stockData[i].close });\r\n        }\r\n        setPriceData({ dps1, dps2, dps3 });\r\n      } else {\r\n        const data = await axios.get(`portfolio/cryptoPriceData/${props.symbol}`);\r\n        setLoading(false);\r\n        const cryptoData = data.data.cryptoData;\r\n        const dps1 = []; const dps2 = []; const dps3 = [];\r\n        for (let i = 0; i < cryptoData.length; i++) {\r\n          dps1.push({ x: new Date(cryptoData[i].date), y: cryptoData[i].price });\r\n          dps2.push({ x: new Date(cryptoData[i].date), y: cryptoData[i].volume });\r\n        }\r\n        setPriceData({ dps1, dps2, dps3 });\r\n      }\r\n    } catch(e) {\r\n      setErr(true);\r\n      setLoading(false);\r\n      if (e.response && e.response.status === 400) {\r\n        setErrMsg(`${props.mode === 'Stock' ? 'Stock' : 'Cryptocurrency'} price data could not be retrieved for ${props.symbol}.`);\r\n      } else { setErrMsg('There was an error connecting to the server.'); }\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    theme: 'light2',\r\n    charts: [{\r\n      axisX: {\r\n        lineThickness: 5,\r\n        tickLength: 0,\r\n        labelFormatter: e => '',\r\n        crosshair: {\r\n          enabled: true,\r\n          snapToDataPoint: true,\r\n          labelFormatter: e => ''\r\n        }\r\n      },\r\n      axisY: {\r\n        prefix: '$',\r\n        tickLength: 0\r\n      },\r\n      toolTip: { shared: true },\r\n      data: [{\r\n        name: 'Price (in USD)',\r\n        yValueFormatString: '$#,###.##',\r\n        type: props.mode === 'Stock' ? 'candlestick' : 'spline',\r\n        dataPoints : priceData.dps1\r\n      }]\r\n    },{\r\n      height: 100,\r\n      axisX: {\r\n        crosshair: {\r\n          enabled: true,\r\n          snapToDataPoint: true\r\n        }\r\n      },\r\n      axisY: {\r\n        title: 'Volume',\r\n        prefix: '$',\r\n        tickLength: 0\r\n      },\r\n      toolTip: { shared: true },\r\n      data: [{\r\n        name: 'Volume',\r\n        yValueFormatString: '$#,###.##',\r\n        type: 'column',\r\n        dataPoints : priceData.dps2\r\n      }]\r\n    }],\r\n    navigator: {\r\n      dynamicUpdate: false,\r\n      data: [{\r\n        dataPoints: props.mode === 'Stock' ? priceData.dps3 : priceData.dps1\r\n      }],\r\n      slider: {\r\n        minimum: priceData.dps1.length ? priceData.dps1[0].x : new Date(),\r\n        maximum: priceData.dps1.length ? priceData.dps1[priceData.dps1.length - 1].x : new Date()\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PanelContainer show={props.show} close={closeHandler}>\r\n      <div className={props.show ? classes.Panel : `${classes.Panel} ${classes.Hide}`}>\r\n        <div className={classes.CloseBtn}><CloseBtn close={closeHandler} /></div>\r\n        <div className={classes.SelectBar}>\r\n          {props.mode === 'Stock' ? props.stocks.map((stock, i) => (\r\n            <span className={props.symbol === stock.symbol ? classes.Active : classes.Inactive}\r\n            onClick={() => stock.identifier === 'Normal' ? props.changeStock(stock.symbol) : null} key={i}\r\n            style={i === 0 ? {marginLeft: 'auto'} : i === props.stocks.length - 1 ? {marginRight: 'auto'} : undefined}>\r\n              {stock.symbol}\r\n              <div className={classes.FocusBorder}></div>\r\n            </span>\r\n          )) : props.cryptos.map((crypto, i) => (\r\n            <span className={props.symbol === crypto.symbol ? classes.Active : classes.Inactive}\r\n            onClick={() => crypto.identifier === 'Normal' ? props.changeCrypto(crypto.symbol) : null} key={i}\r\n            style={i === 0 ? {marginLeft: 'auto'} : i === props.cryptos.length - 1 ? {marginRight: 'auto'} : undefined}>\r\n              {crypto.symbol}\r\n              <div className={classes.FocusBorder}></div>\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className={err ? classes.Err : classes.HideErr}>{errMsg}</div>\r\n        {loading && <Spinner mode=\"PriceChart\" />}\r\n        {!err && !loading && priceData.dps1.length !== 0 && <div className={classes.Content}>\r\n          <div className={classes.Title}>{props.symbol} Price and Volume Chart</div>\r\n          <StockChart options={options} />\r\n        </div>}\r\n      </div>\r\n    </PanelContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos\r\n});\r\n\r\nexport default connect(mapStateToProps)(PriceChartPanel);\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from './Breakdown.module.css';\r\nimport { connect } from 'react-redux';\r\nimport Chart from '../../UI/Chart/Chart';\r\nimport { caretIcon } from '../../UI/UIIcons';\r\n\r\nconst Breakdown = props => {\r\n  const [dataPoints, setDataPoints] = useState([]);\r\n  const [stockData, setStockData] = useState([]);\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n  const [stockSortDown, setStockSortDown] = useState(true);\r\n  const [cryptoSortDown, setCryptoSortDown] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // calculate percentages and category totals of stocks/cryptos/assets of portfolio\r\n    const data = []; let stockTot = 0; let cryptoTot = 0;\r\n    for (let stock of props.stocks) { stockTot += Number(stock.value); }\r\n    for (let crypto of props.cryptos) { cryptoTot += Number(crypto.value); }\r\n    let tot = stockTot + cryptoTot;\r\n    for (let asset of props.assets) { tot += Number(asset.value); }\r\n    if (stockTot > 0) { data.push({ label: 'Stocks', y: ((stockTot / tot) * 100).toFixed(2), val: stockTot.toFixed(2) }); }\r\n    if (cryptoTot > 0) { data.push({ label: 'Cryptocurrencies', y: ((cryptoTot / tot) * 100).toFixed(2), val: cryptoTot.toFixed(2) }); }\r\n    // calculate asset total percentages by category\r\n    const assetCategs = [];\r\n    for (let asset of props.assets) { if (!assetCategs.includes(asset.name)) { assetCategs.push(asset.name); } }\r\n    const assetTots = assetCategs.map(name => ({ name, value: 0 }));\r\n    for (let asset of props.assets) {\r\n      const i = assetTots.findIndex(assetTot => assetTot.name === asset.name);\r\n      assetTots[i].value += Number(asset.value);\r\n    }\r\n    for (let asset of assetTots) {\r\n      data.push({ label: asset.name, y: ((asset.value / tot) * 100).toFixed(2), val: asset.value.toFixed(2) });\r\n    }\r\n    setDataPoints([...data]);\r\n    // get stock/crypto percentages for tables\r\n    if (props.stocks.length > 0) {\r\n      setStockData(props.stocks.map(stock => ({ name: stock.symbol, percent: (stock.value / stockTot * 100).toFixed(2) })).sort((a,b) => b.percent - a.percent));\r\n    }\r\n    if (props.cryptos.length > 0) {\r\n      setCryptoData(props.cryptos.map(crypto => ({ name: crypto.symbol, percent: (crypto.value / cryptoTot * 100).toFixed(2) })).sort((a,b) => b.percent - a.percent));\r\n    }\r\n  }, [props.stocks, props.cryptos, props.assets]);\r\n\r\n  const sortHandler = mode => {\r\n    if (mode === 'Stocks') {\r\n      if (stockSortDown) { setStockData(stockData.sort((a,b) => a.percent - b.percent));\r\n      } else { setStockData(stockData.sort((a,b) => b.percent - a.percent)); }\r\n      setStockSortDown(prev => !prev);\r\n    } else {\r\n      if (cryptoSortDown) { setCryptoData(cryptoData.sort((a,b) => a.percent - b.percent));\r\n      } else { setCryptoData(cryptoData.sort((a,b) => b.percent - a.percent)); }\r\n      setCryptoSortDown(prev => !prev);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    backgroundColor: 'transparent',\r\n    data: [{\r\n      type: \"pie\",\r\n      toolTipContent: \"{label}: {y}% (${val})\",\r\n      indexLabel: \"{y}%\",\r\n      indexLabelFontWeight: \"bold\",\r\n      indexLabelPlacement: \"inside\",\r\n      dataPoints\r\n    }],\r\n    width: 350,\r\n    height: 350\r\n  };\r\n\r\n  return (\r\n    <div className={props.dark ? `${classes.Dark} ${classes.Container}` : classes.Container}>\r\n      <h1>Portfolio Breakdown</h1>\r\n      <div className={classes.Content}>\r\n        <div className={classes.Chart}><Chart options={options} darkMode4={props.dark} /></div>\r\n        {props.stocks.length > 0 && <Table mode=\"Stocks\" data={stockData} sort={() => sortHandler('Stocks')} down={stockSortDown} />}\r\n        {props.cryptos.length > 0 && <Table mode=\"Cryptocurrencies\" data={cryptoData} sort={() => sortHandler('Cryptos')} down={cryptoSortDown} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({mode, data, sort, down }) => (\r\n  <div className={classes.TableContainer}>\r\n    <div className={classes.Title}>{mode}</div>\r\n    <div className={classes.TableInnerContainer}>\r\n      <table className={classes.Table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Symbol</th>\r\n            <th>Percentage<span onClick={sort}\r\n            className={down ? classes.Down : classes.Up}>\r\n            {caretIcon}</span></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((inv, i) => (\r\n            <tr key={i}>\r\n              <td>{inv.name}</td>\r\n              <td>{inv.percent}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  assets: state.portfolio.otherAssets,\r\n  dark: state.theme.darkMode\r\n});\r\n\r\nexport default connect(mapStateToProps)(Breakdown);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './Portfolio.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchPanel from '../SearchPanel/SearchPanel';\r\nimport BuySellPanel from '../BuySellPanel/BuySellPanel';\r\nimport { settingsIcon, plusIcon, trashIcon, analysisIcon } from '../../UI/UIIcons';\r\nimport SettingsPanel from '../SettingsPanel/SettingsPanel';\r\nimport AssetPanel from '../AssetPanel/AssetPanel';\r\nimport NetWorthChart from '../NetWorthChart/NetWorthChart';\r\nimport InvestmentTable from '../InvestmentTable/InvestmentTable';\r\nimport GreenBtn from '../../UI/Btns/GreenBtn/GreenBtn';\r\nimport BlueBtn from '../../UI/Btns/BlueBtn/BlueBtn';\r\nimport Highlights from '../Highlights/Highlights';\r\nimport NewsPanel from '../NewsPanel/NewsPanel';\r\nimport AnalysisPanel from '../AnalysisPanel/AnalysisPanel';\r\nimport PriceChartPanel from '../PriceChartPanel/PriceChartPanel';\r\nimport Breakdown from '../Breakdown/Breakdown';\r\n\r\nconst Portfolio = props => {\r\n  const [showStockSearch, setShowStockSearch] = useState(false);\r\n  const [showCryptoSearch, setShowCryptoSearch] = useState(false);\r\n  const [showBuyStock, setShowBuyStock] = useState(false);\r\n  const [showSellStock, setShowSellStock] = useState(false);\r\n  const [showBuyCrypto, setShowBuyCrypto] = useState(false);\r\n  const [showSellCrypto, setShowSellCrypto] = useState(false);\r\n  const [showStockSettings, setShowStockSettings] = useState(false);\r\n  const [showCryptoSettings, setShowCryptoSettings] = useState(false);\r\n  const [showAddAsset, setShowAddAsset] = useState(false);\r\n  const [showRemoveAsset, setShowRemoveAsset] = useState(false);\r\n  const [showAddDebt, setShowAddDebt] = useState(false);\r\n  const [showRemoveDebt, setShowRemoveDebt] = useState(false);\r\n  const [showAssetSettings, setShowAssetSettings] = useState(false);\r\n  const [showDebtSettings, setShowDebtSettings] = useState(false);\r\n  const [showNews, setShowNews] = useState(false);\r\n  const [showAnalysis, setShowAnalysis] = useState(false);\r\n  const [showStockPriceChart, setShowStockPriceChart] = useState(false);\r\n  const [showCryptoPriceChart, setShowCryptoPriceChart] = useState(false);\r\n  const [stockPriceChartSymbol, setStockPriceChartSymbol] = useState('');\r\n  const [cryptoPriceChartSymbol, setCryptoPriceChartSymbol] = useState('');\r\n  const stockRef = useRef();\r\n  const cryptoRef = useRef();\r\n  const assetRef = useRef();\r\n  const debtRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.location.search) {\r\n      case '?pos=stocks': return stockRef.current.scrollIntoView();\r\n      case '?pos=cryptos': return cryptoRef.current.scrollIntoView();\r\n      case '?pos=assets': return assetRef.current.scrollIntoView();\r\n      default: return;\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  const showBuySellHandler = mode => {\r\n    if ((mode === 'BuyStock' || mode === 'SellStock') && props.stocks.length === 0) {\r\n      return setShowStockSearch(true);\r\n    }\r\n    if ((mode === 'BuyCrypto' || mode === 'SellCrypto') && props.cryptos.length === 0) {\r\n      return setShowCryptoSearch(true);\r\n    }\r\n    mode === 'BuyStock' ? setShowBuyStock(true) :\r\n    mode === 'SellStock' ? setShowSellStock(true) :\r\n    mode === 'BuyCrypto' ? setShowBuyCrypto(true) :\r\n    setShowSellCrypto(true);\r\n  };\r\n\r\n  const showChartHandler = (symbol, mode) => {\r\n    if (mode === 'Stock') {\r\n      setStockPriceChartSymbol(symbol);\r\n      setShowStockPriceChart(true);\r\n    } else {\r\n      setCryptoPriceChartSymbol(symbol);\r\n      setShowCryptoPriceChart(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Content}>\r\n        <div className={classes.ChartContainer}>\r\n          <NetWorthChart />\r\n          <Highlights openNews={() => setShowNews(true)}/>\r\n        </div>\r\n        <NewsPanel show={showNews} close={() => setShowNews(false)} />\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={stockRef}>\r\n            <PriceChartPanel show={showStockPriceChart} close={() => setShowStockPriceChart(false)}\r\n            mode=\"Stock\" symbol={stockPriceChartSymbol} changeStock={symbol => setStockPriceChartSymbol(symbol)} />\r\n            <h1>Stocks</h1>\r\n            <div className={classes.Btns}>\r\n              <div className={classes.AddBtn}>\r\n                <BlueBtn big clicked={() => setShowStockSearch(true)}>{plusIcon}Add a new holding</BlueBtn>\r\n              </div>\r\n              <GreenBtn big clicked={() => showBuySellHandler('BuyStock')}>Buy</GreenBtn>\r\n              <BuySellPanel mode=\"BuyStock\" show={showBuyStock} close={() => setShowBuyStock(false)}\r\n              down={stockRef.current && stockRef.current.getBoundingClientRect().top < 310} />\r\n              <GreenBtn big clicked={() => showBuySellHandler('SellStock')}>Sell</GreenBtn>\r\n              <BuySellPanel mode=\"SellStock\" show={showSellStock} close={() => setShowSellStock(false)}\r\n              down={stockRef.current && stockRef.current.getBoundingClientRect().top < 310} />\r\n              <div className={classes.AnalysisBtn}>\r\n                <BlueBtn big clicked={() => setShowAnalysis(true)}>{analysisIcon}Analysis</BlueBtn>\r\n              </div>\r\n              <AnalysisPanel show={showAnalysis} close={() => setShowAnalysis(false)} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowStockSettings(true)}>{settingsIcon}</button>\r\n              <SettingsPanel mode=\"Stock\" show={showStockSettings} close={() => setShowStockSettings(false)}\r\n              down={stockRef.current && stockRef.current.getBoundingClientRect().top < 310} />\r\n              <SearchPanel mode=\"Stock\" show={showStockSearch} close={() => setShowStockSearch(false)}\r\n              down={stockRef.current && stockRef.current.getBoundingClientRect().top < 250} />\r\n            </div>\r\n            <InvestmentTable mode=\"Stocks\" normal showChart={showChartHandler} />\r\n          </div>\r\n          <div className={classes.Cryptos} ref={cryptoRef}>\r\n            <PriceChartPanel show={showCryptoPriceChart} close={() => setShowCryptoPriceChart(false)}\r\n            mode=\"Crypto\" symbol={cryptoPriceChartSymbol} changeCrypto={symbol => setCryptoPriceChartSymbol(symbol)} />\r\n            <h1>Cryptocurrencies</h1>\r\n            <div className={classes.Btns}>\r\n              <div className={classes.AddBtn}>\r\n                <BlueBtn big clicked={() => setShowCryptoSearch(true)}>{plusIcon}Add a new holding</BlueBtn>\r\n              </div>\r\n              <GreenBtn big clicked={() => showBuySellHandler('BuyCrypto')}>Buy</GreenBtn>\r\n              <BuySellPanel mode=\"BuyCrypto\" show={showBuyCrypto} close={() => setShowBuyCrypto(false)}\r\n              down={cryptoRef.current && cryptoRef.current.getBoundingClientRect().top < 310} />\r\n              <GreenBtn big clicked={() => showBuySellHandler('SellCrypto')}>Sell</GreenBtn>\r\n              <BuySellPanel mode=\"SellCrypto\" show={showSellCrypto} close={() => setShowSellCrypto(false)}\r\n              down={cryptoRef.current && cryptoRef.current.getBoundingClientRect().top < 310} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowCryptoSettings(true)}>{settingsIcon}</button>\r\n              <SettingsPanel mode=\"Crypto\" show={showCryptoSettings} close={() => setShowCryptoSettings(false)}\r\n              down={cryptoRef.current && cryptoRef.current.getBoundingClientRect().top < 310} />\r\n              <SearchPanel mode=\"Crypto\" show={showCryptoSearch} close={() => setShowCryptoSearch(false)}\r\n              down={cryptoRef.current && cryptoRef.current.getBoundingClientRect().top < 250} />\r\n            </div>\r\n            <InvestmentTable mode=\"Cryptos\" normal showChart={showChartHandler} />\r\n          </div>\r\n        </div>\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={assetRef}>\r\n            <h1>Assets</h1>\r\n            <div className={classes.Btns}>\r\n              <div className={classes.AddBtn}>\r\n                <BlueBtn big clicked={() => setShowAddAsset(true)}>{plusIcon}Add a new asset</BlueBtn>\r\n              </div>\r\n              <AssetPanel mode=\"AddAsset\" close={() => setShowAddAsset(false)} show={showAddAsset}\r\n              down={assetRef.current && assetRef.current.getBoundingClientRect().top < 310} />\r\n              <div className={classes.RemoveBtn}>\r\n                <BlueBtn big clicked={() => setShowRemoveAsset(true)}>{trashIcon}Remove an asset</BlueBtn>\r\n              </div>\r\n              <AssetPanel mode=\"RemoveAsset\" close={() => setShowRemoveAsset(false)} show={showRemoveAsset}\r\n              down={assetRef.current && assetRef.current.getBoundingClientRect().top < 310} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowAssetSettings(true)}>{settingsIcon}</button>\r\n              <AssetPanel mode=\"SettingsAsset\" close={() => setShowAssetSettings(false)} show={showAssetSettings}\r\n              down={assetRef.current && assetRef.current.getBoundingClientRect().top < 310} />\r\n            </div>\r\n            <InvestmentTable mode=\"Assets\" normal />\r\n          </div>\r\n          <div className={classes.Cryptos} ref={debtRef}>\r\n            <h1>Liabilities</h1>\r\n            <div className={classes.Btns}>\r\n              <div className={classes.AddBtn}>\r\n                <BlueBtn big clicked={() => setShowAddDebt(true)}>{plusIcon}Add a new liability</BlueBtn>\r\n              </div>\r\n              <AssetPanel mode=\"AddDebt\" close={() => setShowAddDebt(false)} show={showAddDebt}\r\n              down={debtRef.current && debtRef.current.getBoundingClientRect().top < 310} />\r\n              <div className={classes.RemoveBtn}>\r\n                <BlueBtn big clicked={() => setShowRemoveDebt(true)}>{trashIcon}Remove a liability</BlueBtn>\r\n              </div>\r\n              <AssetPanel mode=\"RemoveDebt\" close={() => setShowRemoveDebt(false)} show={showRemoveDebt}\r\n              down={debtRef.current && debtRef.current.getBoundingClientRect().top < 310} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowDebtSettings(true)}>{settingsIcon}</button>\r\n              <AssetPanel mode=\"SettingsDebt\" close={() => setShowDebtSettings(false)} show={showDebtSettings}\r\n              down={debtRef.current && debtRef.current.getBoundingClientRect().top < 310} />\r\n            </div>\r\n            <InvestmentTable mode=\"Debts\" normal />\r\n          </div>\r\n        </div>\r\n        <Breakdown />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Portfolio));\r\n"],"sourceRoot":""}