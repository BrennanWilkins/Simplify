{"version":3,"sources":["containers/Portfolio/Portfolio.module.css","components/SearchPanel/SearchPanel.module.css","components/UI/BackBtn/BackBtn.module.css","components/BuySellPanel/BuySellPanel.module.css","components/SettingsPanel/SettingsPanel.module.css","components/AssetPanel/AssetPanel.module.css","components/SearchPanel/SearchPanel.js","components/UI/BackBtn/BackBtn.js","components/BuySellPanel/BuySellPanel.js","components/SettingsPanel/SettingsPanel.js","components/AssetPanel/AssetPanel.js","containers/Portfolio/Portfolio.js"],"names":["module","exports","typingTimeout","BackBtn","props","className","mode","classes","Hide","onClick","back","arrowRight","connect","state","stocks","portfolio","cryptos","netWorthData","netWorth","isDemo","auth","dispatch","addStock","stock","actions","addCrypto","crypto","setNetWorthData","data","useState","val","setVal","searchRes","setSearchRes","showInput","setShowInput","showManual","setShowManual","inputValName","setInputValName","inputValTicker","setInputValTicker","inputValShares","setInputValShares","inputValPrice","setInputValPrice","selectedRes","setSelectedRes","selectedTicker","setSelectedTicker","err","setErr","errMsg","setErrMsg","loading","setLoading","inputRef","useRef","panelRef","useEffect","document","addEventListener","handleClick","show","current","focus","removeEventListener","e","contains","target","closeHandler","searchStock","axios","get","then","res","result","catch","console","log","searchCrypto","close","resetInputsHandler","inputValSharesHandler","value","isNaN","length","charAt","slice","addHandler","manual","a","name","symbol","toUpperCase","price","Number","toFixed","quantity","identifier","ticker","item","updatedStocks","unshift","updatedPortfolio","updatedNetWorth","calcNetWorth","put","resp","dataPoints","updatedCryptos","ref","StockPanel","StockPanelHide","CryptoPanel","CryptoPanelHide","BtnDiv","CloseBtn","Text","SearchInput","onChange","clearTimeout","setTimeout","placeholder","Spinner","Results","map","i","Result","key","selectedHandler","SearchSymbol","SearchName","ManualAddBtn","ShowInput","HideInput","InputText","ConfirmBtn","ShowErr","HideErr","originalSelected","changeCrypto","changeStock","selected","setSelected","selectedName","setSelectedName","selectedVal","setSelectedVal","panelClass","setPanelClass","titleText","setTitleText","BuyStock","HideBuyStock","SellStock","HideSellStock","BuyCrypto","HideBuyCrypto","SellCrypto","HideSellCrypto","confirmHandler","index","findIndex","splice","newPortfolio","newData","newQuantity","stockOptions","label","cryptoOptions","options","Dropdown","selectedOption","stockMatch","find","cryptoMatch","isSearchable","classNamePrefix","HideText","HideInputDiv","InputDiv","disabled","type","Input","AllBtn","HideConfirmBtn","priceVal","setPriceVal","filter","newPrice","otherAssets","liabilities","updateAssets","assets","updateDebts","debts","HideConfirm","confirmClass","setConfirmClass","setOptions","inputName","setInputName","inputDesc","setInputDesc","inputValue","setInputValue","newValue","setNewValue","AddAsset","HideAddAsset","RemoveAsset","HideRemoveAsset","asset","AddDebt","HideAddDebt","RemoveDebt","HideRemoveDebt","debt","SettingsAsset","HideSettingsAsset","SettingsDebt","HideSettingsDebt","errHandler","desc","option","Confirm","assetMatch","debtMatch","Inputs","NewValueInput","withRouter","showStockSearch","setShowStockSearch","showCryptoSearch","setShowCryptoSearch","showBuyStock","setShowBuyStock","showSellStock","setShowSellStock","showBuyCrypto","setShowBuyCrypto","showSellCrypto","setShowSellCrypto","showStockSettings","setShowStockSettings","showCryptoSettings","setShowCryptoSettings","showAddAsset","setShowAddAsset","showRemoveAsset","setShowRemoveAsset","showAddDebt","setShowAddDebt","showRemoveDebt","setShowRemoveDebt","showAssetSettings","setShowAssetSettings","showDebtSettings","setShowDebtSettings","contentRef","stockRef","cryptoRef","assetRef","location","search","scrollIntoView","showBuySellHandler","Container","Content","NetWorthChart","small","Investments","Stocks","NewBtn","BuySellBtns","BuyBtn","SellBtn","SettingsBtn","settingsIcon","InvestmentTable","normal","Cryptos","AssetBtns","AssetSettingsBtn"],"mappings":"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","file":"static/js/3.8699cf83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Portfolio_Container__2Lh7v\",\"Content\":\"Portfolio_Content__1tCeD\",\"Investments\":\"Portfolio_Investments__3xVv8\",\"Stocks\":\"Portfolio_Stocks__17s2Y\",\"Cryptos\":\"Portfolio_Cryptos__1lkDy\",\"Table\":\"Portfolio_Table__31oz1\",\"Value\":\"Portfolio_Value__7pg89\",\"HeaderFields\":\"Portfolio_HeaderFields__36Kmk\",\"Symbol\":\"Portfolio_Symbol__34IIQ\",\"NewBtn\":\"Portfolio_NewBtn__3d9Gr\",\"BuySellBtns\":\"Portfolio_BuySellBtns__1GGk8\",\"SettingsBtn\":\"Portfolio_SettingsBtn__3XtZ5\",\"AssetSettingsBtn\":\"Portfolio_AssetSettingsBtn__1r-p2\",\"BuyBtn\":\"Portfolio_BuyBtn__qjMvK\",\"SellBtn\":\"Portfolio_SellBtn__wlh1v\",\"AssetBtns\":\"Portfolio_AssetBtns__33a9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StockPanel\":\"SearchPanel_StockPanel__2CChX\",\"CryptoPanel\":\"SearchPanel_CryptoPanel__1dypT\",\"StockPanelHide\":\"SearchPanel_StockPanelHide__13Ch4\",\"CryptoPanelHide\":\"SearchPanel_CryptoPanelHide__2a3g4\",\"BtnDiv\":\"SearchPanel_BtnDiv__17zMD\",\"Text\":\"SearchPanel_Text__2AKO8\",\"SearchInput\":\"SearchPanel_SearchInput__1c0sz\",\"ShowInput\":\"SearchPanel_ShowInput__2qwC3\",\"HideInput\":\"SearchPanel_HideInput__2x1NU\",\"Results\":\"SearchPanel_Results__2-1PS\",\"Result\":\"SearchPanel_Result__Gop_s\",\"SearchSymbol\":\"SearchPanel_SearchSymbol__OfAX-\",\"SearchName\":\"SearchPanel_SearchName__3DzYW\",\"ManualAddBtn\":\"SearchPanel_ManualAddBtn__2Epv4\",\"ConfirmBtn\":\"SearchPanel_ConfirmBtn__1si_K\",\"InputText\":\"SearchPanel_InputText__3gmXN\",\"ShowErr\":\"SearchPanel_ShowErr__2DhsU\",\"HideErr\":\"SearchPanel_HideErr__3XLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackBtn\":\"BackBtn_BackBtn__2ULbF\",\"Hide\":\"BackBtn_Hide__2sOS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"BuySellPanel_Hide__2o5mT\",\"BuyStock\":\"BuySellPanel_BuyStock__1-QCB\",\"SellStock\":\"BuySellPanel_SellStock__2S1eJ\",\"HideBuyStock\":\"BuySellPanel_HideBuyStock__2euoZ\",\"HideSellStock\":\"BuySellPanel_HideSellStock__3vuAK\",\"BuyCrypto\":\"BuySellPanel_BuyCrypto__3F8id\",\"SellCrypto\":\"BuySellPanel_SellCrypto__3AD3L\",\"HideBuyCrypto\":\"BuySellPanel_HideBuyCrypto__cErw3\",\"HideSellCrypto\":\"BuySellPanel_HideSellCrypto__i1atI\",\"BtnDiv\":\"BuySellPanel_BtnDiv__1HkjQ\",\"Text\":\"BuySellPanel_Text__29sR8\",\"HideText\":\"BuySellPanel_HideText__3-jQz\",\"Input\":\"BuySellPanel_Input__3GW2s\",\"ConfirmBtn\":\"BuySellPanel_ConfirmBtn__9seJA\",\"HideConfirmBtn\":\"BuySellPanel_HideConfirmBtn__3-mHz\",\"AllBtn\":\"BuySellPanel_AllBtn__2dh18\",\"ShowErr\":\"BuySellPanel_ShowErr__Ttp5f\",\"HideErr\":\"BuySellPanel_HideErr__1B6WU\",\"InputDiv\":\"BuySellPanel_InputDiv__317pk\",\"HideInputDiv\":\"BuySellPanel_HideInputDiv__3FILJ\",\"Dropdown\":\"BuySellPanel_Dropdown__3Tpwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StockPanel\":\"SettingsPanel_StockPanel__UZXeJ\",\"CryptoPanel\":\"SettingsPanel_CryptoPanel__2tSHt\",\"StockPanelHide\":\"SettingsPanel_StockPanelHide__1UghW\",\"CryptoPanelHide\":\"SettingsPanel_CryptoPanelHide__1evDN\",\"BtnDiv\":\"SettingsPanel_BtnDiv__3ZXY8\",\"Text\":\"SettingsPanel_Text__2Nd-n\",\"Dropdown\":\"SettingsPanel_Dropdown__1ishV\",\"ShowInput\":\"SettingsPanel_ShowInput__3VLzL\",\"HideInput\":\"SettingsPanel_HideInput__19j3W\",\"ConfirmBtn\":\"SettingsPanel_ConfirmBtn__2Hnt7\",\"ShowErr\":\"SettingsPanel_ShowErr__6l0YA\",\"HideErr\":\"SettingsPanel_HideErr__2ME_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"AssetPanel_Hide__3Zgog\",\"AddAsset\":\"AssetPanel_AddAsset__aLKaa\",\"HideAddAsset\":\"AssetPanel_HideAddAsset__1YIeu\",\"AddDebt\":\"AssetPanel_AddDebt__25Dbr\",\"HideAddDebt\":\"AssetPanel_HideAddDebt__QE8he\",\"SettingsAsset\":\"AssetPanel_SettingsAsset__16_Bh\",\"HideSettingsAsset\":\"AssetPanel_HideSettingsAsset__1kSfW\",\"SettingsDebt\":\"AssetPanel_SettingsDebt__1e1zF\",\"HideSettingsDebt\":\"AssetPanel_HideSettingsDebt__2Y8t6\",\"RemoveAsset\":\"AssetPanel_RemoveAsset__2qe-b\",\"RemoveDebt\":\"AssetPanel_RemoveDebt__lRaMp\",\"HideRemoveDebt\":\"AssetPanel_HideRemoveDebt__ppnKl\",\"HideRemoveAsset\":\"AssetPanel_HideRemoveAsset__3WcJZ\",\"BtnDiv\":\"AssetPanel_BtnDiv__2A2iq\",\"Text\":\"AssetPanel_Text__2AaTj\",\"Inputs\":\"AssetPanel_Inputs__3EVLV\",\"NewValueInput\":\"AssetPanel_NewValueInput__27MUa\",\"Confirm\":\"AssetPanel_Confirm__3pA6d\",\"HideConfirm\":\"AssetPanel_HideConfirm__Xv9Y4\",\"ShowErr\":\"AssetPanel_ShowErr__2bbll\",\"HideErr\":\"AssetPanel_HideErr__TqJf1\",\"Dropdown\":\"AssetPanel_Dropdown__2TDVG\"};","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './SearchPanel.module.css';\r\nimport { instance as axios } from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport BackBtn from '../UI/BackBtn/BackBtn';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nlet typingTimeout;\r\n\r\nconst SearchPanel = props => {\r\n  const [val, setVal] = useState('');\r\n  const [searchRes, setSearchRes] = useState([]);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [showManual, setShowManual] = useState(false);\r\n  const [inputValName, setInputValName] = useState('');\r\n  const [inputValTicker, setInputValTicker] = useState('');\r\n  const [inputValShares, setInputValShares] = useState(0);\r\n  const [inputValPrice, setInputValPrice] = useState(0);\r\n  const [selectedRes, setSelectedRes] = useState(null);\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    if (props.show) { inputRef.current.focus(); }\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const setSearchVal = (e) => {\r\n    const value = e.target.value;\r\n    setVal(value);\r\n    clearTimeout(typingTimeout);\r\n    typingTimeout = props.mode === 'Stock' ?\r\n    setTimeout(() => searchStock(value), 600) :\r\n    setTimeout(() => searchCrypto(value), 600);\r\n  };\r\n\r\n  const searchStock = (stock) => {\r\n    if (stock === '') { return setSearchRes([]); }\r\n    setLoading(true);\r\n    axios.get('portfolio/searchStock/' + stock).then(res => {\r\n      setSearchRes(res.data.result);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const searchCrypto = (crypto) => {\r\n    if (crypto === '') { return setSearchRes([]); }\r\n    setLoading(true);\r\n    axios.get('portfolio/searchCrypto/' + crypto).then(res => {\r\n      setSearchRes(res.data.result);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    props.close();\r\n    setVal('');\r\n    setSearchRes([]);\r\n    resetInputsHandler();\r\n  };\r\n\r\n  const resetInputsHandler = () => {\r\n    setShowInput(false);\r\n    setShowManual(false);\r\n    setInputValName('');\r\n    setInputValShares(0);\r\n    setInputValPrice(0);\r\n    setInputValTicker('');\r\n    setSelectedRes(null);\r\n    setSelectedTicker('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setLoading(false);\r\n  };\r\n\r\n  const selectedHandler = (stock) => {\r\n    setShowInput(true);\r\n    setSelectedRes(stock);\r\n    props.mode === 'Stock' ?\r\n    setSelectedTicker(stock.ticker) :\r\n    setSelectedTicker(stock.item.symbol);\r\n  };\r\n\r\n  const inputValPriceHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = '0'; }\r\n    setInputValPrice(val);\r\n  };\r\n\r\n  const inputValSharesHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setInputValShares(val);\r\n  };\r\n\r\n  const addHandler = async (manual) => {\r\n    const data = manual ?\r\n    {\r\n      name: inputValName,\r\n      symbol: inputValTicker.toUpperCase(),\r\n      price: Number(inputValPrice).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValPrice * inputValShares).toFixed(2),\r\n      identifier: 'Manual'\r\n    } :\r\n    props.mode === 'Stock' ?\r\n    {\r\n      name: selectedRes.name,\r\n      symbol: selectedRes.ticker,\r\n      price: (selectedRes.price).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValShares * selectedRes.price).toFixed(2),\r\n      identifier: 'Normal'\r\n    } :\r\n    {\r\n      name: selectedRes.item.name,\r\n      symbol: selectedRes.item.symbol,\r\n      price: (selectedRes.item.price).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValShares * selectedRes.item.price).toFixed(2),\r\n      identifier: 'Normal'\r\n    };\r\n    if (props.mode === 'Stock') {\r\n      for (let stock of props.stocks) {\r\n        if (stock.symbol === data.symbol) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${stock.symbol} in your portfolio.`);\r\n        }\r\n      }\r\n      const updatedStocks = [...props.stocks];\r\n      updatedStocks.unshift({ ...data });\r\n      const updatedPortfolio = { ...props.portfolio, stocks: updatedStocks };\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.addStock(data);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateStocks', { data });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.addStock(data);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        return setErrMsg('Error connecting to the server.');\r\n      }\r\n    } else {\r\n      for (let crypto of props.cryptos) {\r\n        if (crypto.symbol === data.symbol) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${crypto.symbol} in your portfolio.`);\r\n        }\r\n      }\r\n      const updatedCryptos = [...props.cryptos];\r\n      updatedCryptos.unshift({ ...data });\r\n      const updatedPortfolio = { ...props.portfolio, cryptos: updatedCryptos };\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.addCrypto(data);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateCryptos', { data });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.addCrypto(data);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        return setErrMsg('Error connecting to the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={props.mode === 'Stock' ?\r\n      (props.show ? classes.StockPanel : classes.StockPanelHide) :\r\n      (props.show ? classes.CryptoPanel : classes.CryptoPanelHide)}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n        <BackBtn back={resetInputsHandler} mode={!showInput && !showManual ? 'Hide' : 'Show'} />\r\n      </div>\r\n      <p className={classes.Text}>\r\n        {props.mode === 'Stock' ?\r\n        'Search for a stock by entering its ticker or the company name' :\r\n        'Search for a cryptocurrency by entering its symbol or name'}\r\n      </p>\r\n      <input className={classes.SearchInput}\r\n        value={val} onChange={setSearchVal} ref={inputRef}\r\n        placeholder={props.mode === 'Stock' ? 'AAPL, Apple, ...' : 'BTC, Bitcoin, ...'} />\r\n      {loading && <Spinner mode=\"Search\" />}\r\n      <div className={classes.Results}>\r\n        {searchRes.map((stock, i) => (\r\n          <div className={classes.Result} key={i} onClick={() => selectedHandler(stock)}>\r\n            <div className={classes.SearchSymbol}>{props.mode === 'Stock' ? stock.ticker: stock.item.symbol}</div>\r\n            <div className={classes.SearchName}>{props.mode === 'Stock' ? stock.name : stock.item.name}</div>\r\n          </div>\r\n        ))}\r\n        <button className={classes.ManualAddBtn} onClick={() => setShowManual(true)}>\r\n          {`${props.mode === 'Stock' ? 'Stock' : 'Crypto'} not found? Add it manually`}\r\n        </button>\r\n      </div>\r\n      <div className={showInput ? classes.ShowInput : classes.HideInput}>\r\n        <p className={classes.InputText}>\r\n          {props.mode === 'Stock' ?\r\n          `How many shares of ${selectedTicker} do you own?` :\r\n          `How much ${selectedTicker} do you own?`}\r\n        </p>\r\n        <input value={inputValShares} onChange={inputValSharesHandler} />\r\n        <button className={classes.ConfirmBtn} onClick={() => addHandler(false)}>Add</button>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n      <div className={showManual ? classes.ShowInput: classes.HideInput}>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Ticker:' : 'Symbol:'}</p>\r\n          <input placeholder={props.mode === 'Stock' ? 'eg AAPL' : 'eg BTC'} value={inputValTicker}\r\n          onChange={e => setInputValTicker(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Company name:' : 'Cryptocurrency name:'}</p>\r\n          <input placeholder={props.mode === 'Stock' ? 'eg Apple' : 'eg Bitcoin'} value={inputValName}\r\n          onChange={e => setInputValName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <p>Current price:</p>\r\n          <input value={inputValPrice} onChange={inputValPriceHandler} />\r\n        </div>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Number of shares:' : 'Quantity:'}</p>\r\n          <input value={inputValShares} onChange={inputValSharesHandler} />\r\n        </div>\r\n        <button className={classes.ConfirmBtn} onClick={() => addHandler(true)}>Add</button>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addStock: (stock) => dispatch(actions.addStock(stock)),\r\n  addCrypto: (crypto) => dispatch(actions.addCrypto(crypto)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel);\r\n","import React from 'react';\r\nimport classes from './BackBtn.module.css';\r\nimport { arrowRight } from '../UIIcons';\r\n\r\nconst BackBtn = props => (\r\n  <button className={props.mode === 'Hide' ? classes.Hide : classes.BackBtn} onClick={props.back}>\r\n    <span>{arrowRight}</span>\r\n  </button>\r\n);\r\n\r\nexport default BackBtn;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './BuySellPanel.module.css';\r\nimport { connect } from 'react-redux';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport * as actions from '../../store/actions/index';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport Select from 'react-select';\r\nimport '../UI/ReactSelectStyles.css';\r\n\r\nconst originalSelected = { name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Normal' };\r\n\r\nconst BuySellPanel = props => {\r\n  const [selected, setSelected] = useState({ ...originalSelected });\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selectedVal, setSelectedVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [panelClass, setPanelClass] = useState(classes.Hide);\r\n  const [titleText, setTitleText] = useState('');\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.mode) {\r\n      case 'BuyStock':\r\n        if (props.show) { setPanelClass(classes.BuyStock); }\r\n        else { setPanelClass(classes.HideBuyStock); }\r\n        setTitleText('Which stock did you buy?');\r\n        break;\r\n      case 'SellStock':\r\n        if (props.show) { setPanelClass(classes.SellStock); }\r\n        else { setPanelClass(classes.HideSellStock); }\r\n        setTitleText('Which stock did you sell?');\r\n        break;\r\n      case 'BuyCrypto':\r\n        if (props.show) { setPanelClass(classes.BuyCrypto); }\r\n        else { setPanelClass(classes.HideBuyCrypto); }\r\n        setTitleText('Which cryptocurrency did you buy?');\r\n        break;\r\n      default:\r\n        if (props.show) { setPanelClass(classes.SellCrypto); }\r\n        else { setPanelClass(classes.HideSellCrypto); }\r\n        setTitleText('Which cryptocurrency did you sell?');\r\n        break;\r\n    }\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ ...originalSelected });\r\n    setSelectedVal(0);\r\n    setSelectedName('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setTitleText('');\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = (e) => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setSelectedVal(val);\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    if (selectedVal === 0) { return; }\r\n    if ((props.mode === 'SellStock' || props.mode === 'SellCrypto') && selectedVal > selected.quantity) {\r\n      setErr(true);\r\n      return setErrMsg(`You do not own enough${props.mode === 'SellStock' ? ' shares of' : ''} ${selected.symbol} to sell that much.`);\r\n    }\r\n    if (selectedVal === selected.quantity) {\r\n      if (props.mode === 'SellStock') {\r\n        const stocks = [...props.stocks];\r\n        const index = stocks.findIndex(stock => stock.name === selected.name);\r\n        stocks.splice(index, 1);\r\n        const updatedPortfolio = { ...props.portfolio };\r\n        updatedPortfolio.stocks = [...stocks];\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        if (props.isDemo) {\r\n          props.setNetWorthData(updatedNetWorth);\r\n          props.changeStock(stocks);\r\n          return closeHandler();\r\n        }\r\n        try {\r\n          const res = await axios.put('portfolio/deleteStock', { identifier: selected.identifier, name: selected.name });\r\n          const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeStock(stocks);\r\n          return closeHandler();\r\n        } catch(e) {\r\n          setErr(true);\r\n          return setErrMsg('Error connecting to the server.');\r\n        }\r\n      }\r\n      if (props.mode === 'SellCrypto') {\r\n        const cryptos = [...props.cryptos];\r\n        const index = cryptos.findIndex(crypto => crypto.name === selected.name);\r\n        cryptos.splice(index, 1);\r\n        const updatedPortfolio = { ...props.portfolio };\r\n        updatedPortfolio.cryptos = [...cryptos];\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        if (props.isDemo) {\r\n          props.setNetWorthData(updatedNetWorth);\r\n          props.changeCrypto(cryptos);\r\n          return closeHandler();\r\n        }\r\n        try {\r\n          const res = await axios.put('portfolio/deleteCrypto', { identifier: selected.identifier, name: selected.name });\r\n          const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeCrypto(cryptos);\r\n          return closeHandler();\r\n        } catch(e) {\r\n          setErr(true);\r\n          return setErrMsg('Error connecting to the server.');\r\n        }\r\n      }\r\n    }\r\n    const newPortfolio = props.mode === 'BuyStock' || props.mode === 'SellStock' ?\r\n    [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newQuantity = props.mode === 'BuyStock' || props.mode === 'BuyCrypto' ?\r\n    Number(Number(newData.quantity) + Number(selectedVal)) :\r\n    Number(Number(newData.quantity) - Number(selectedVal));\r\n    newData.quantity = Number(newQuantity);\r\n    newData.value = Number(newData.price * newQuantity);\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n      updatedPortfolio.stocks = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeStock(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/changeStock', { ...newData });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.changeStock(newPortfolio);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      }\r\n    } else {\r\n      updatedPortfolio.cryptos = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeCrypto(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/changeCrypto', { ...newData });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.changeCrypto(newPortfolio);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectHandler = (selectedOption) => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      return setSelected({ ...originalSelected });\r\n    }\r\n    setSelectedName(selectedOption);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setSelectedVal(0);\r\n    if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n      const stockMatch = props.stocks.find(stock => stock.name === selectedOption.value);\r\n      setSelected({ ...stockMatch });\r\n    } else {\r\n      const cryptoMatch = props.cryptos.find(crypto => crypto.name === selectedOption.value);\r\n      setSelected({ ...cryptoMatch });\r\n    }\r\n  };\r\n\r\n  const stockOptions = props.stocks.map(stock => ({ value: stock.name, label: stock.name }));\r\n  const cryptoOptions = props.cryptos.map(crypto => ({ value: crypto.name, label: crypto.name }));\r\n\r\n  return (\r\n    <div ref={panelRef} className={panelClass}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>{titleText}</p>\r\n      <Select options={props.mode === 'BuyStock' || props.mode === 'SellStock' ? stockOptions : cryptoOptions}\r\n        className={classes.Dropdown} onChange={selectHandler} isSearchable value={selectedName} classNamePrefix=\"react-select\" />\r\n      <p className={selectedName === '' ? classes.HideText : classes.Text}>\r\n        {props.mode === 'BuyStock' ?\r\n        `How many shares of ${selected.symbol} did you buy?` :\r\n        props.mode === 'SellStock' ?\r\n        `How many shares of ${selected.symbol} did you sell?` :\r\n        props.mode === 'BuyCrypto' ?\r\n        `How much ${selected.symbol} did you buy?` :\r\n        `How much ${selected.symbol} did you sell?`}\r\n      </p>\r\n      <div className={selectedName === '' ? classes.HideInputDiv : classes.InputDiv}>\r\n        <input disabled={selectedName === ''} type=\"text\" className={classes.Input}\r\n          value={selectedVal} onChange={setValHandler} />\r\n        {props.mode === 'SellStock' || props.mode === 'SellCrypto' ? (\r\n          <button className={classes.AllBtn} onClick={() => setSelectedVal(selected.quantity)}>All</button>\r\n        ) : null}\r\n      </div>\r\n      <button onClick={confirmHandler} className={selectedName === '' ? classes.HideConfirmBtn : classes.ConfirmBtn}>\r\n        Confirm\r\n      </button>\r\n      <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: (cryptos) => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: (stocks) => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuySellPanel);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './SettingsPanel.module.css';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport '../UI/ReactSelectStyles.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\n\r\nconst originalSelected = { name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Manual' };\r\n\r\nconst SettingsPanel = props => {\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState({ ...originalSelected });\r\n  const [priceVal, setPriceVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [showInput, setShowInput] = useState(false);\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ ...originalSelected });\r\n    setPriceVal(0);\r\n    setSelectedName('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setShowInput(false);\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = (e) => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setPriceVal(val);\r\n  };\r\n\r\n  const stocks = props.stocks.filter(stock => stock.identifier === 'Manual');\r\n  const cryptos = props.cryptos.filter(crypto => crypto.identifier === 'Manual');\r\n\r\n  const selectHandler = (selectedOption) => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      setShowInput(false);\r\n      return setSelected({ ...originalSelected });\r\n    }\r\n    setShowInput(true);\r\n    setSelectedName(selectedOption);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (props.mode === 'Stock') {\r\n      const stockMatch = stocks.find(stock => stock.name === selectedOption.value);\r\n      setSelected({ ...stockMatch });\r\n      setPriceVal(stockMatch.price);\r\n    } else {\r\n      const cryptoMatch = cryptos.find(crypto => crypto.name === selectedOption.value);\r\n      setSelected({ ...cryptoMatch });\r\n      setPriceVal(cryptoMatch.price);\r\n    }\r\n  };\r\n\r\n  const stockOptions = stocks.map(stock => {\r\n    return { value: stock.name, label: stock.name };\r\n  });\r\n\r\n  const cryptoOptions = cryptos.map(crypto => {\r\n    return { value: crypto.name, label: crypto.name };\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    const newPortfolio = props.mode === 'Stock' ? [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newPrice = Number(priceVal);\r\n    newData.price = newPrice;\r\n    newData.value = newPrice * newData.quantity;\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'Stock') {\r\n      updatedPortfolio.stocks = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeStock(newPortfolio);\r\n        return closeHandler();\r\n      } else {\r\n        axios.put('portfolio/changeStock', { ...newData }).then(res => {\r\n          axios.put('netWorth', { netWorthData: updatedNetWorth }).then(resp => {\r\n            props.setNetWorthData(resp.data.result.dataPoints);\r\n            props.changeStock(newPortfolio);\r\n            closeHandler();\r\n          }).catch(err => {\r\n            setErr(true);\r\n            setErrMsg('Error connecting to the server.');\r\n          });\r\n        }).catch(err => {\r\n          setErr(true);\r\n          setErrMsg('Error connecting to the server.');\r\n        });\r\n      }\r\n    } else {\r\n      updatedPortfolio.cryptos = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeCrypto(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      axios.put('portfolio/changeCrypto', { ...newData }).then(res => {\r\n        axios.put('netWorth', { netWorthData: updatedNetWorth }).then(resp => {\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeCrypto(newPortfolio);\r\n          closeHandler();\r\n        }).catch(err => {\r\n          setErr(true);\r\n          setErrMsg('Error connecting to the server.');\r\n        });\r\n      }).catch(err => {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={props.mode === 'Stock' ?\r\n      (props.show ? classes.StockPanel : classes.StockPanelHide) :\r\n      (props.show ? classes.CryptoPanel : classes.CryptoPanelHide)}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>\r\n        {props.mode === 'Stock' ?\r\n        'Change the price of a manually added stock' :\r\n        'Change the price of a manually added cryptocurrency'}\r\n      </p>\r\n      <Select options={props.mode === 'Stock' ? stockOptions : cryptoOptions}\r\n        className={classes.Dropdown} onChange={selectHandler} isSearchable\r\n        value={selectedName} classNamePrefix=\"react-select\" />\r\n      <div className={showInput ? classes.ShowInput : classes.HideInput}>\r\n        <input value={priceVal} onChange={setValHandler} />\r\n        <button className={classes.ConfirmBtn} onClick={confirmHandler}>Confirm</button>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: (cryptos) => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: (stocks) => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPanel);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './AssetPanel.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport Select from 'react-select';\r\nimport '../UI/ReactSelectStyles.css';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\n\r\nconst AssetPanel = props => {\r\n  const [titleText, setTitleText] = useState('');\r\n  const [panelClass, setPanelClass] = useState(classes.Hide);\r\n  const [confirmClass, setConfirmClass] = useState(classes.HideConfirm);\r\n  const [options, setOptions] = useState(null);\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [inputName, setInputName] = useState('');\r\n  const [inputDesc, setInputDesc] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [newValue, setNewValue] = useState('');\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.mode) {\r\n      case 'AddAsset':\r\n        setTitleText('Add a new asset');\r\n        if (props.show) { setPanelClass(classes.AddAsset); }\r\n        else { setPanelClass(classes.HideAddAsset); }\r\n        break;\r\n      case 'RemoveAsset':\r\n        setTitleText('Select an asset to remove it from your portfolio');\r\n        if (props.show) { setPanelClass(classes.RemoveAsset); }\r\n        else { setPanelClass(classes.HideRemoveAsset); }\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.name, label: asset.name })));\r\n        break;\r\n      case 'AddDebt':\r\n        setTitleText('Add a new liability');\r\n        if (props.show) { setPanelClass(classes.AddDebt); }\r\n        else { setPanelClass(classes.HideAddDebt); }\r\n        break;\r\n      case 'RemoveDebt':\r\n        setTitleText('Select a liability to remove it from your portfolio');\r\n        if (props.show) { setPanelClass(classes.RemoveDebt); }\r\n        else { setPanelClass(classes.HideRemoveDebt); }\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.name, label: debt.name })));\r\n        break;\r\n      case 'SettingsAsset':\r\n        setTitleText('Select an asset to change its value');\r\n        if (props.show) { setPanelClass(classes.SettingsAsset); }\r\n        else { setPanelClass(classes.HideSettingsAsset); }\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.name, label: asset.name })));\r\n        break;\r\n      default:\r\n        setTitleText('Select a liability to change its value');\r\n        if (props.show) { setPanelClass(classes.SettingsDebt); }\r\n        else { setPanelClass(classes.HideSettingsDebt); }\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.name, label: debt.name })));\r\n        break;\r\n    }\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setTitleText('');\r\n    setConfirmClass(classes.HideConfirm);\r\n    setOptions(null);\r\n    setSelectedName('');\r\n    setSelected(null);\r\n    setInputName('');\r\n    setInputDesc('');\r\n    setInputValue('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setNewValue('');\r\n    props.close();\r\n  };\r\n\r\n  const selectHandler = (option) => {\r\n    if (!option) {\r\n      setSelectedName('');\r\n      setConfirmClass(classes.HideConfirm);\r\n      return setSelected(null);\r\n    }\r\n    setSelectedName(option);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setConfirmClass(classes.Confirm);\r\n    if (props.mode === 'SettingsAsset' || props.mode === 'RemoveAsset') {\r\n      const assetMatch = props.otherAssets.find(asset => asset.name === option.value);\r\n      setSelected({ ...assetMatch });\r\n      setNewValue(assetMatch.value);\r\n    } else if (props.mode === 'SettingsDebt' || props.mode === 'RemoveDebt') {\r\n      const debtMatch = props.liabilities.find(debt => debt.name === option.value);\r\n      setSelected({ ...debtMatch });\r\n      setNewValue(debtMatch.value);\r\n    }\r\n  };\r\n\r\n  const inputNameHandler = (e) => {\r\n    setInputName(e.target.value);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (e.target.value.length > 0 && inputDesc.length > 0 && inputValue.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const inputDescHandler = (e) => {\r\n    setInputDesc(e.target.value);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (e.target.value.length > 0 && inputName.length > 0 && inputValue.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const inputValueHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setInputValue(val);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (val.length > 0 && inputDesc.length > 0 && inputName.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const newValueHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setNewValue(val);\r\n    setErr(false);\r\n    setErrMsg('');\r\n  };\r\n\r\n  const errHandler = () => {\r\n    setErr(true);\r\n    setErrMsg('Error connecting to the server.');\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'AddAsset') {\r\n      const data = { name: inputName, desc: inputDesc, value: inputValue };\r\n      for (let asset of props.otherAssets) {\r\n        if (asset.name === data.name) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${data.name} in your portfolio`);\r\n        }\r\n      }\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        otherAssets.unshift({ ...data });\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/addAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'RemoveAsset') {\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        const index = otherAssets.findIndex(asset => asset.name === selected.name);\r\n        otherAssets.splice(index, 1);\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/removeAsset', { name: selected.name });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'AddDebt') {\r\n      const data = { name: inputName, desc: inputDesc, value: inputValue };\r\n      for (let debt of props.liabilities) {\r\n        if (debt.name === data.name) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${data.name} in your portfolio`);\r\n        }\r\n      }\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        liabilities.unshift({ ...data });\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/addDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'RemoveDebt') {\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        const index = liabilities.findIndex(debt => debt.name === selected.name);\r\n        liabilities.splice(index, 1);\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/removeDebt', { name: selected.name });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'SettingsAsset') {\r\n      const data = { name: selected.name, desc: selected.desc, value: newValue };\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        const index = otherAssets.findIndex(asset => asset.name === data.name);\r\n        otherAssets[index].value = data.value;\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else {\r\n      const data = { name: selected.name, desc: selected.desc, value: newValue };\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        const index = liabilities.findIndex(debt => debt.name === data.name);\r\n        liabilities[index].value = data.value;\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={panelClass}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>{titleText}</p>\r\n      {options ?\r\n        <Select options={options} className={classes.Dropdown} onChange={selectHandler}\r\n          isSearchable value={selectedName} classNamePrefix=\"react-select\" />\r\n        :\r\n        <div className={classes.Inputs}>\r\n          <div>\r\n            <p>Name</p>\r\n            <input value={inputName} onChange={inputNameHandler} />\r\n          </div>\r\n          <div>\r\n            <p>Description</p>\r\n            <input value={inputDesc} onChange={inputDescHandler} />\r\n          </div>\r\n          <div>\r\n            <p>Value</p>\r\n            <input value={inputValue} onChange={inputValueHandler} />\r\n          </div>\r\n        </div>\r\n      }\r\n      {(props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') && selectedName !== '' ?\r\n        <input className={classes.NewValueInput} value={newValue} onChange={newValueHandler} />\r\n      : null}\r\n      <button onClick={confirmHandler} className={confirmClass}>Confirm</button>\r\n      <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  otherAssets: state.portfolio.otherAssets,\r\n  liabilities: state.portfolio.liabilities,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data)),\r\n  updateAssets: (assets) => dispatch(actions.updateAssets(assets)),\r\n  updateDebts: (debts) => dispatch(actions.updateDebts(debts))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetPanel);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './Portfolio.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchPanel from '../../components/SearchPanel/SearchPanel';\r\nimport BuySellPanel from '../../components/BuySellPanel/BuySellPanel';\r\nimport { settingsIcon } from '../../components/UI/UIIcons';\r\nimport SettingsPanel from '../../components/SettingsPanel/SettingsPanel';\r\nimport AssetPanel from '../../components/AssetPanel/AssetPanel';\r\nimport NetWorthChart from '../../components/NetWorthChart/NetWorthChart';\r\nimport InvestmentTable from '../../components/InvestmentTable/InvestmentTable';\r\n\r\nconst Portfolio = props => {\r\n  const [showStockSearch, setShowStockSearch] = useState(false);\r\n  const [showCryptoSearch, setShowCryptoSearch] = useState(false);\r\n  const [showBuyStock, setShowBuyStock] = useState(false);\r\n  const [showSellStock, setShowSellStock] = useState(false);\r\n  const [showBuyCrypto, setShowBuyCrypto] = useState(false);\r\n  const [showSellCrypto, setShowSellCrypto] = useState(false);\r\n  const [showStockSettings, setShowStockSettings] = useState(false);\r\n  const [showCryptoSettings, setShowCryptoSettings] = useState(false);\r\n  const [showAddAsset, setShowAddAsset] = useState(false);\r\n  const [showRemoveAsset, setShowRemoveAsset] = useState(false);\r\n  const [showAddDebt, setShowAddDebt] = useState(false);\r\n  const [showRemoveDebt, setShowRemoveDebt] = useState(false);\r\n  const [showAssetSettings, setShowAssetSettings] = useState(false);\r\n  const [showDebtSettings, setShowDebtSettings] = useState(false);\r\n  const contentRef = useRef();\r\n  const stockRef = useRef();\r\n  const cryptoRef = useRef();\r\n  const assetRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.location.search) {\r\n      case '?pos=stocks': return stockRef.current.scrollIntoView();\r\n      case '?pos=cryptos': return cryptoRef.current.scrollIntoView();\r\n      case '?pos=assets': return assetRef.current.scrollIntoView();\r\n      default: return contentRef.current.scrollIntoView();\r\n    }\r\n  }, []);\r\n\r\n  const showBuySellHandler = (mode) => {\r\n    if ((mode === 'BuyStock' || mode === 'SellStock') && props.stocks.length === 0) {\r\n      return setShowStockSearch(true);\r\n    }\r\n    if ((mode === 'BuyCrypto' || mode === 'SellCrypto') && props.cryptos.length === 0) {\r\n      return setShowCryptoSearch(true);\r\n    }\r\n    mode === 'BuyStock' ? setShowBuyStock(true) :\r\n    mode === 'SellStock' ? setShowSellStock(true) :\r\n    mode === 'BuyCrypto' ? setShowBuyCrypto(true) :\r\n    setShowSellCrypto(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Content} ref={contentRef}>\r\n        <NetWorthChart small={false} />\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={stockRef}>\r\n            <h1>Stocks</h1>\r\n            <button className={classes.NewBtn} onClick={() => setShowStockSearch(true)}>Add a new holding</button>\r\n            <div className={classes.BuySellBtns}>\r\n              <button className={classes.BuyBtn} onClick={() => showBuySellHandler('BuyStock')}>Buy</button>\r\n              <BuySellPanel mode=\"BuyStock\" show={showBuyStock} close={() => setShowBuyStock(false)} />\r\n              <button className={classes.SellBtn} onClick={() => showBuySellHandler('SellStock')}>Sell</button>\r\n              <BuySellPanel mode=\"SellStock\" show={showSellStock} close={() => setShowSellStock(false)} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowStockSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <SettingsPanel mode=\"Stock\" show={showStockSettings} close={() => setShowStockSettings(false)} />\r\n            </div>\r\n            <SearchPanel mode=\"Stock\" show={showStockSearch} close={() => setShowStockSearch(false)} />\r\n            <InvestmentTable mode=\"Stocks\" normal />\r\n          </div>\r\n          <div className={classes.Cryptos} ref={cryptoRef}>\r\n            <h1>Cryptocurrencies</h1>\r\n            <button className={classes.NewBtn} onClick={() => setShowCryptoSearch(true)}>Add a new holding</button>\r\n            <div className={classes.BuySellBtns}>\r\n              <button className={classes.BuyBtn} onClick={() => showBuySellHandler('BuyCrypto')}>Buy</button>\r\n              <BuySellPanel mode=\"BuyCrypto\" show={showBuyCrypto} close={() => setShowBuyCrypto(false)} />\r\n              <button className={classes.SellBtn} onClick={() => showBuySellHandler('SellCrypto')}>Sell</button>\r\n              <BuySellPanel mode=\"SellCrypto\" show={showSellCrypto} close={() => setShowSellCrypto(false)} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowCryptoSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <SettingsPanel mode=\"Crypto\" show={showCryptoSettings} close={() => setShowCryptoSettings(false)} />\r\n            </div>\r\n            <SearchPanel mode=\"Crypto\" show={showCryptoSearch} close={() => setShowCryptoSearch(false)} />\r\n            <InvestmentTable mode=\"Cryptos\" normal />\r\n          </div>\r\n        </div>\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={assetRef}>\r\n            <h1>Assets</h1>\r\n            <div className={classes.AssetBtns}>\r\n              <button className={classes.NewBtn} onClick={() => setShowAddAsset(true)}>Add a new asset</button>\r\n              <AssetPanel mode=\"AddAsset\" close={() => setShowAddAsset(false)} show={showAddAsset} />\r\n              <button className={classes.NewBtn} onClick={() => setShowRemoveAsset(true)}>Remove an asset</button>\r\n              <AssetPanel mode=\"RemoveAsset\" close={() => setShowRemoveAsset(false)} show={showRemoveAsset} />\r\n              <button className={classes.AssetSettingsBtn} onClick={() => setShowAssetSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <AssetPanel mode=\"SettingsAsset\" close={() => setShowAssetSettings(false)} show={showAssetSettings} />\r\n            </div>\r\n            <InvestmentTable mode=\"Assets\" normal />\r\n          </div>\r\n          <div className={classes.Cryptos}>\r\n            <h1>Liabilities</h1>\r\n            <div className={classes.AssetBtns}>\r\n              <button className={classes.NewBtn} onClick={() => setShowAddDebt(true)}>Add a new liability</button>\r\n              <AssetPanel mode=\"AddDebt\" close={() => setShowAddDebt(false)} show={showAddDebt} />\r\n              <button className={classes.NewBtn} onClick={() => setShowRemoveDebt(true)}>Remove a liability</button>\r\n              <AssetPanel mode=\"RemoveDebt\" close={() => setShowRemoveDebt(false)} show={showRemoveDebt} />\r\n              <button className={classes.AssetSettingsBtn} onClick={() => setShowDebtSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <AssetPanel mode=\"SettingsDebt\" close={() => setShowDebtSettings(false)} show={showDebtSettings} />\r\n            </div>\r\n            <InvestmentTable mode=\"Debts\" normal />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Portfolio));\r\n"],"sourceRoot":""}