{"version":3,"sources":["utils/chartFuncs.js","components/NetWorthChart/NetWorthChart.js","containers/Portfolio/Portfolio.module.css","components/SearchPanel/SearchPanel.module.css","components/UI/BackBtn/BackBtn.module.css","components/BuySellPanel/BuySellPanel.module.css","components/SettingsPanel/SettingsPanel.module.css","components/AssetPanel/AssetPanel.module.css","components/SearchPanel/SearchPanel.js","components/UI/BackBtn/BackBtn.js","components/BuySellPanel/BuySellPanel.js","components/SettingsPanel/SettingsPanel.js","components/AssetPanel/AssetPanel.js","containers/Portfolio/Portfolio.js","components/UI/BlueBtn/BlueBtn.js","components/UI/GreenBtn/GreenBtn.js","components/UI/BlueBtn/BlueBtn.module.css","components/UI/GreenBtn/GreenBtn.module.css","components/NetWorthChart/NetWorthChart.module.css","components/InvestmentTable/InvestmentTable.js","components/InvestmentTable/InvestmentTable.module.css"],"names":["createNetWorthOptions","data","animationEnabled","theme","exportEnabled","axisY","valueFormatString","axisX","labelAngle","toolTip","content","type","indexLabelFontColor","indexLabelPlacement","color","fillOpacity","dataPoints","map","dataPt","x","Date","date","y","Number","value","toFixed","CanvasJSChart","CanvasJSReact","connect","state","netWorthData","netWorth","props","netWorthVal","length","small","className","classes","Chart","NetWorthTitleSmall","NetWorthTextSmall","NetWorthValueSmall","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","NetWorthChartSmall","options","height","Block","NetWorthTitle","NetWorthText","NetWorthValue","NetWorthChart","module","exports","typingTimeout","BackBtn","mode","Hide","onClick","back","arrowRight","stocks","portfolio","cryptos","isDemo","auth","dispatch","addStock","stock","actions","addCrypto","crypto","setNetWorthData","useState","val","setVal","searchRes","setSearchRes","showInput","setShowInput","showManual","setShowManual","inputValName","setInputValName","inputValTicker","setInputValTicker","inputValShares","setInputValShares","inputValPrice","setInputValPrice","selectedRes","setSelectedRes","selectedTicker","setSelectedTicker","err","setErr","errMsg","setErrMsg","loading","setLoading","inputRef","useRef","panelRef","useEffect","document","addEventListener","handleClick","show","current","focus","removeEventListener","e","contains","target","closeHandler","searchStock","axios","get","then","res","result","catch","console","log","searchCrypto","close","resetInputsHandler","inputValSharesHandler","isNaN","charAt","slice","addHandler","manual","a","name","symbol","toUpperCase","price","quantity","identifier","ticker","item","updatedStocks","unshift","updatedPortfolio","updatedNetWorth","calcNetWorth","put","resp","updatedCryptos","ref","StockPanel","StockPanelHide","CryptoPanel","CryptoPanelHide","BtnDiv","CloseBtn","Text","SearchInput","onChange","clearTimeout","setTimeout","placeholder","Spinner","Results","i","Result","key","selectedHandler","SearchSymbol","SearchName","BtnDiv2","BlueBtn","clicked","ShowInput","HideInput","InputText","ShowErr","HideErr","originalSelected","changeCrypto","changeStock","selected","setSelected","selectedName","setSelectedName","selectedVal","setSelectedVal","panelClass","setPanelClass","titleText","setTitleText","BuyStock","HideBuyStock","SellStock","HideSellStock","BuyCrypto","HideBuyCrypto","SellCrypto","HideSellCrypto","confirmHandler","index","findIndex","splice","newPortfolio","newData","newQuantity","stockOptions","label","cryptoOptions","Dropdown","selectedOption","stockMatch","find","cryptoMatch","isSearchable","classNamePrefix","HideText","HideInputDiv","InputDiv","disabled","Input","AllBtn","HideConfirmBtn","ConfirmBtn","priceVal","setPriceVal","filter","newPrice","otherAssets","liabilities","updateAssets","assets","updateDebts","debts","HideConfirm","confirmClass","setConfirmClass","setOptions","inputName","setInputName","inputDesc","setInputDesc","inputValue","setInputValue","newValue","setNewValue","AddAsset","HideAddAsset","RemoveAsset","HideRemoveAsset","asset","AddDebt","HideAddDebt","RemoveDebt","HideRemoveDebt","debt","SettingsAsset","HideSettingsAsset","SettingsDebt","HideSettingsDebt","errHandler","desc","option","Confirm","assetMatch","debtMatch","Inputs","NewValueInput","withRouter","showStockSearch","setShowStockSearch","showCryptoSearch","setShowCryptoSearch","showBuyStock","setShowBuyStock","showSellStock","setShowSellStock","showBuyCrypto","setShowBuyCrypto","showSellCrypto","setShowSellCrypto","showStockSettings","setShowStockSettings","showCryptoSettings","setShowCryptoSettings","showAddAsset","setShowAddAsset","showRemoveAsset","setShowRemoveAsset","showAddDebt","setShowAddDebt","showRemoveDebt","setShowRemoveDebt","showAssetSettings","setShowAssetSettings","showDebtSettings","setShowDebtSettings","contentRef","stockRef","cryptoRef","assetRef","location","search","scrollIntoView","showBuySellHandler","Container","Content","Investments","Stocks","big","BuySellBtns","GreenBtn","SettingsBtn","settingsIcon","InvestmentTable","normal","Cryptos","AssetBtns","AssetSettingsBtn","noMargin","NoBigBtn","BigBtn","Btn","children","TableContainer","AssetTableContainer","NormalTable","Table","HeaderFields","Symbol","Value","src","alt"],"mappings":"8JAAaA,EAAwB,SAACC,GAsBpC,MAjBgB,CACdC,kBAAkB,EAClBC,MAAO,SACPC,eAAe,EACfC,MAAO,CAAEC,kBAAmB,QAC5BC,MAAO,CAAED,kBAAmB,WAAYE,YAAa,IACrDC,QAAS,CAAEC,QAAS,aACpBT,KAAM,CAAC,CACLU,KAAM,OACNC,oBAAqB,UACrBC,oBAAqB,UACrBC,MAAO,oBACPC,YAAa,IACbC,WAjBiBf,EAAKgB,KAAI,SAAAC,GAC5B,MAAO,CAAEC,EAAG,IAAIC,KAAKF,EAAOG,MAAOC,EAAGC,OAAQL,EAAOM,MAAOC,QAAQ,YCGlEC,EAAgBC,IAAcD,cAyCrBE,iBAJS,SAAAC,GAAK,MAAK,CAChCC,aAAcD,EAAME,SAASD,gBAGhBF,EAvCO,SAAAI,GACpB,IAAMC,EAA4C,IAA9BD,EAAMF,aAAaI,OAAe,OACtDX,OAAOS,EAAMF,aAAaE,EAAMF,aAAaI,OAAS,GAAGV,OAAOC,QAAQ,GAExE,OACEO,EAAMG,MACJ,yBAAKC,UAAWC,IAAQC,OACtB,yBAAKF,UAAWC,IAAQE,oBACtB,wBAAIH,UAAWC,IAAQG,mBAAvB,aACA,wBAAIJ,UAAWC,IAAQI,oBAAvB,IACIlB,OAAOU,GAAaS,oBAAeC,EAAW,CAAEC,sBAAuB,EAAGC,sBAAuB,MAGvG,yBAAKT,UAAWC,IAAQS,oBACtB,kBAACpB,EAAD,CAAeqB,QAAO,eAAO/C,EAAsBgC,EAAMF,cAAnC,CAAkDkB,OAAQ,QAChF,yBAAKZ,UAAWC,IAAQY,UAI5B,6BACE,yBAAKb,UAAWC,IAAQa,eACtB,wBAAId,UAAWC,IAAQc,cAAvB,aACA,wBAAIf,UAAWC,IAAQe,eAAvB,IACI7B,OAAOU,GAAaS,oBAAeC,EAAW,CAAEC,sBAAuB,EAAGC,sBAAuB,MAGvG,yBAAKT,UAAWC,IAAQgB,eACtB,kBAAC3B,EAAD,CAAeqB,QAAO,eAAO/C,EAAsBgC,EAAMF,iBACzD,yBAAKM,UAAWC,IAAQY,c,oBClClCK,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,YAAc,+BAA+B,OAAS,0BAA0B,QAAU,2BAA2B,MAAQ,yBAAyB,MAAQ,yBAAyB,aAAe,gCAAgC,OAAS,0BAA0B,YAAc,+BAA+B,YAAc,+BAA+B,iBAAmB,oCAAoC,UAAY,+B,oBCAtgBD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,YAAc,iCAAiC,eAAiB,oCAAoC,gBAAkB,qCAAqC,OAAS,4BAA4B,KAAO,0BAA0B,YAAc,iCAAiC,UAAY,+BAA+B,UAAY,+BAA+B,QAAU,6BAA6B,OAAS,4BAA4B,aAAe,kCAAkC,WAAa,gCAAgC,QAAU,6BAA6B,UAAY,+BAA+B,QAAU,6BAA6B,QAAU,+B,oBCAltBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,oBCA5DD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,+BAA+B,UAAY,gCAAgC,aAAe,mCAAmC,cAAgB,oCAAoC,UAAY,gCAAgC,WAAa,iCAAiC,cAAgB,oCAAoC,eAAiB,qCAAqC,OAAS,6BAA6B,KAAO,2BAA2B,SAAW,+BAA+B,MAAQ,4BAA4B,WAAa,iCAAiC,eAAiB,qCAAqC,OAAS,6BAA6B,QAAU,8BAA8B,QAAU,8BAA8B,SAAW,+BAA+B,aAAe,mCAAmC,SAAW,iC,oBCA34BD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,YAAc,mCAAmC,eAAiB,sCAAsC,gBAAkB,uCAAuC,OAAS,8BAA8B,KAAO,4BAA4B,SAAW,gCAAgC,UAAY,iCAAiC,UAAY,iCAAiC,QAAU,+BAA+B,QAAU,iC,oBCApeD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,aAAe,iCAAiC,QAAU,4BAA4B,YAAc,gCAAgC,cAAgB,kCAAkC,kBAAoB,sCAAsC,aAAe,iCAAiC,iBAAmB,qCAAqC,YAAc,gCAAgC,WAAa,+BAA+B,eAAiB,mCAAmC,gBAAkB,oCAAoC,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,2BAA2B,cAAgB,kCAAkC,QAAU,4BAA4B,YAAc,gCAAgC,QAAU,4BAA4B,QAAU,4BAA4B,SAAW,+B,4CCUv7BC,E,qLCDWC,EANC,SAAAzB,GAAK,OACnB,4BAAQI,UAA0B,SAAfJ,EAAM0B,KAAkBrB,IAAQsB,KAAOtB,IAAQoB,QAASG,QAAS5B,EAAM6B,MACxF,8BAAOC,O,gBD6RIlC,eAdS,SAAAC,GAAK,MAAK,CAChCkC,OAAQlC,EAAMmC,UAAUD,OACxBE,QAASpC,EAAMmC,UAAUC,QACzBD,UAAWnC,EAAMmC,UACjBlC,aAAcD,EAAME,SAASD,aAC7BoC,OAAQrC,EAAMsC,KAAKD,WAGM,SAAAE,GAAQ,MAAK,CACtCC,SAAU,SAACC,GAAD,OAAWF,EAASG,IAAiBD,KAC/CE,UAAW,SAACC,GAAD,OAAYL,EAASG,IAAkBE,KAClDC,gBAAiB,SAACzE,GAAD,OAAUmE,EAASG,IAAwBtE,QAG/C2B,EAtRK,SAAAI,GAAU,IAAD,EACL2C,mBAAS,IADJ,mBACpBC,EADoB,KACfC,EADe,OAEOF,mBAAS,IAFhB,mBAEpBG,EAFoB,KAETC,EAFS,OAGOJ,oBAAS,GAHhB,mBAGpBK,EAHoB,KAGTC,EAHS,OAISN,oBAAS,GAJlB,mBAIpBO,EAJoB,KAIRC,EAJQ,OAKaR,mBAAS,IALtB,mBAKpBS,EALoB,KAKNC,EALM,OAMiBV,mBAAS,IAN1B,mBAMpBW,EANoB,KAMJC,EANI,OAOiBZ,mBAAS,GAP1B,mBAOpBa,EAPoB,KAOJC,EAPI,OAQed,mBAAS,GARxB,mBAQpBe,EARoB,KAQLC,EARK,OASWhB,mBAAS,MATpB,mBASpBiB,EAToB,KASPC,EATO,OAUiBlB,mBAAS,IAV1B,oBAUpBmB,GAVoB,MAUJC,GAVI,SAWLpB,oBAAS,GAXJ,qBAWpBqB,GAXoB,MAWfC,GAXe,SAYCtB,mBAAS,IAZV,qBAYpBuB,GAZoB,MAYZC,GAZY,SAaGxB,oBAAS,GAbZ,qBAapByB,GAboB,MAaXC,GAbW,MAcrBC,GAAWC,mBACXC,GAAWD,mBAEjBE,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,YAAaC,IACnC5E,EAAM6E,MAAQP,GAASQ,QAAQC,QAC5B,kBAAML,SAASM,oBAAoB,YAAaJ,OACtD,CAAC5E,EAAM0B,KAAM1B,EAAM6E,OAEtBJ,qBAAU,WACR,OAAO,kBAAMC,SAASM,oBAAoB,YAAaJ,OACtD,IAEH,IAAMA,GAAc,SAACK,GACfT,GAASM,QAAQI,SAASD,EAAEE,SAChCC,MAYIC,GAAc,SAAC/C,GACnB,GAAc,KAAVA,EAAgB,OAAOS,EAAa,IACxCsB,IAAW,GACXiB,IAAMC,IAAI,yBAA2BjD,GAAOkD,MAAK,SAAAC,GAC/C1C,EAAa0C,EAAIxH,KAAKyH,QACtBrB,IAAW,MACVsB,OAAM,SAAA3B,GACPK,IAAW,GACXuB,QAAQC,IAAI7B,OAIV8B,GAAe,SAACrD,GACpB,GAAe,KAAXA,EAAiB,OAAOM,EAAa,IACzCsB,IAAW,GACXiB,IAAMC,IAAI,0BAA4B9C,GAAQ+C,MAAK,SAAAC,GACjD1C,EAAa0C,EAAIxH,KAAKyH,QACtBrB,IAAW,MACVsB,OAAM,SAAA3B,GACP4B,QAAQC,IAAI7B,GACZK,IAAW,OAITe,GAAe,WACnBpF,EAAM+F,QACNlD,EAAO,IACPE,EAAa,IACbiD,MAGIA,GAAqB,WACzB/C,GAAa,GACbE,GAAc,GACdE,EAAgB,IAChBI,EAAkB,GAClBE,EAAiB,GACjBJ,EAAkB,IAClBM,EAAe,MACfE,GAAkB,IAClBE,IAAO,GACPE,GAAU,IACVE,IAAW,IAqBP4B,GAAwB,SAAChB,GAC7B,IAAIrC,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,GACxBa,EAAkBb,KAGdyD,GAAU,uCAAG,WAAOC,GAAP,2CAAAC,EAAA,yDACM,IAAnB/C,GAA2C,KAAnBA,EADX,qDAEb8C,GAA4B,KAAjBlD,GAA0C,KAAnBE,GAA2C,KAAlBI,EAF9C,oDAGXzF,EAAOqI,EACb,CACEE,KAAMpD,EACNqD,OAAQnD,EAAeoD,cACvBC,MAAOpH,OAAOmE,GAAejE,QAAQ,GACrCmH,SAAUpD,EACVhE,OAAQkE,EAAgBF,GAAgB/D,QAAQ,GAChDoH,WAAY,UAEC,UAAf7G,EAAM0B,KACN,CACE8E,KAAM5C,EAAY4C,KAClBC,OAAQ7C,EAAYkD,OACpBH,MAAQ/C,EAAY+C,MAAOlH,QAAQ,GACnCmH,SAAUpD,EACVhE,OAAQgE,EAAiBI,EAAY+C,OAAOlH,QAAQ,GACpDoH,WAAY,UAEd,CACEL,KAAM5C,EAAYmD,KAAKP,KACvBC,OAAQ7C,EAAYmD,KAAKN,OACzBE,MAAQ/C,EAAYmD,KAAKJ,MAAOlH,QAAQ,GACxCmH,SAAUpD,EACVhE,OAAQgE,EAAiBI,EAAYmD,KAAKJ,OAAOlH,QAAQ,GACzDoH,WAAY,UAEK,UAAf7G,EAAM0B,KA7BO,+BA8BG1B,EAAM+B,QA9BT,6DA8BNO,EA9BM,SA+BHmE,SAAWxI,EAAKwI,OA/Bb,wBAgCXxC,IAAO,GAhCI,kBAiCJE,GAAU,oBAAD,OAAqB7B,EAAMmE,OAA3B,yBAjCL,mJAoCTO,EApCS,YAoCWhH,EAAM+B,SAClBkF,QAAd,eAA2BhJ,IACrBiJ,EAtCS,eAsCelH,EAAMgC,UAtCrB,CAsCgCD,OAAQiF,IACjDG,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OAxCK,wBAyCblC,EAAM0C,gBAAgByE,GACtBnH,EAAMqC,SAASpE,GA1CF,kBA2CNmH,MA3CM,mCA8CKE,IAAM+B,IAAI,yBAA0B,CAAEpJ,SA9C3C,gCA+CMqH,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA/C5C,QA+CPG,EA/CO,OAgDbtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMqC,SAASpE,GACfmH,KAlDa,0DAoDbnB,IAAO,GApDM,kBAqDNE,GAAU,oCArDJ,8CAwDInE,EAAMiC,SAxDV,+DAwDNQ,EAxDM,SAyDFgE,SAAWxI,EAAKwI,OAzDd,wBA0DXxC,IAAO,GA1DI,kBA2DJE,GAAU,oBAAD,OAAqB1B,EAAOgE,OAA5B,yBA3DL,qJA8DTc,EA9DS,YA8DYvH,EAAMiC,UAClBgF,QAAf,eAA4BhJ,IACtBiJ,EAhES,eAgEelH,EAAMgC,UAhErB,CAgEgCC,QAASsF,IAClDJ,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OAlEK,wBAmEblC,EAAM0C,gBAAgByE,GACtBnH,EAAMwC,UAAUvE,GApEH,kBAqENmH,MArEM,mCAwEKE,IAAM+B,IAAI,0BAA2B,CAAEpJ,SAxE5C,gCAyEMqH,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IAzE5C,QAyEPG,EAzEO,OA0EbtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMwC,UAAUvE,GAChBmH,KA5Ea,0DA8EbnB,IAAO,GA9EM,kBA+ENE,GAAU,oCA/EJ,8FAAH,sDAoFhB,OACE,yBAAKqD,IAAKhD,GAAUpE,UAA0B,UAAfJ,EAAM0B,KAClC1B,EAAM6E,KAAOxE,IAAQoH,WAAapH,IAAQqH,eAC1C1H,EAAM6E,KAAOxE,IAAQsH,YAActH,IAAQuH,iBAC5C,yBAAKxH,UAAWC,IAAQwH,QACtB,kBAACC,EAAA,EAAD,CAAU/B,MAAOX,KACjB,kBAAC,EAAD,CAASvD,KAAMmE,GAAoBtE,KAAOsB,GAAcE,EAAsB,OAAT,UAEvE,uBAAG9C,UAAWC,IAAQ0H,MACJ,UAAf/H,EAAM0B,KACP,gEACA,8DAEF,2BAAOtB,UAAWC,IAAQ2H,YACxBxI,MAAOoD,EAAKqF,SApLG,SAAChD,GACpB,IAAMzF,EAAQyF,EAAEE,OAAO3F,MACvBqD,EAAOrD,GACP0I,aAAa1G,GACbA,EAA+B,UAAfxB,EAAM0B,KACtByG,YAAW,kBAAM9C,GAAY7F,KAAQ,KACrC2I,YAAW,kBAAMrC,GAAatG,KAAQ,MA8KEgI,IAAKlD,GACzC8D,YAA4B,UAAfpI,EAAM0B,KAAmB,mBAAqB,sBAC5D0C,IAAW,kBAACiE,EAAA,EAAD,CAAS3G,KAAK,WAC1B,yBAAKtB,UAAWC,IAAQiI,SACrBxF,EAAU7D,KAAI,SAACqD,EAAOiG,GAAR,OACb,yBAAKnI,UAAWC,IAAQmI,OAAQC,IAAKF,EAAG3G,QAAS,kBAnIjC,SAACU,GACvBW,GAAa,GACbY,EAAevB,GACA,UAAftC,EAAM0B,KACNqC,GAAkBzB,EAAMwE,QACxB/C,GAAkBzB,EAAMyE,KAAKN,QA8HgCiC,CAAgBpG,KACrE,yBAAKlC,UAAWC,IAAQsI,cAA8B,UAAf3I,EAAM0B,KAAmBY,EAAMwE,OAAQxE,EAAMyE,KAAKN,QACzF,yBAAKrG,UAAWC,IAAQuI,YAA4B,UAAf5I,EAAM0B,KAAmBY,EAAMkE,KAAOlE,EAAMyE,KAAKP,UAG1F,yBAAKpG,UAAWC,IAAQwI,SACtB,kBAACC,EAAA,EAAD,CAASC,QAAS,kBAAM5F,GAAc,KAAtC,UACqB,UAAfnD,EAAM0B,KAAmB,QAAU,SADzC,kCAKJ,yBAAKtB,UAAW4C,EAAY3C,IAAQ2I,UAAY3I,IAAQ4I,WACtD,uBAAG7I,UAAWC,IAAQ6I,WACJ,UAAflJ,EAAM0B,KAAN,6BACqBoC,GADrB,mCAEWA,GAFX,iBAIH,2BAAOtE,MAAOgE,EAAgByE,SAAUhC,KACxC,kBAAC6C,EAAA,EAAD,CAASC,QAAS,kBAAM1C,IAAW,KAAnC,OACA,uBAAGjG,UAAW4D,GAAM3D,IAAQ8I,QAAU9I,IAAQ+I,SAAUlF,KAE1D,yBAAK9D,UAAW8C,EAAa7C,IAAQ2I,UAAW3I,IAAQ4I,WACtD,6BACE,2BAAmB,UAAfjJ,EAAM0B,KAAmB,UAAY,WACzC,2BAAO0G,YAA4B,UAAfpI,EAAM0B,KAAmB,UAAY,SAAUlC,MAAO8D,EAC1E2E,SAAU,SAAAhD,GAAC,OAAI1B,EAAkB0B,EAAEE,OAAO3F,WAE5C,6BACE,2BAAmB,UAAfQ,EAAM0B,KAAmB,gBAAkB,SAC/C,2BAAO0G,YAA4B,UAAfpI,EAAM0B,KAAmB,WAAa,aAAclC,MAAO4D,EAC/E6E,SAAU,SAAAhD,GAAC,OAAI5B,EAAgB4B,EAAEE,OAAO3F,WAE1C,6BACE,6CACA,2BAAOA,MAAOkE,EAAeuE,SA7JR,SAAChD,GAC5B,IAAIrC,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,KACxBe,EAAiBf,QAwJb,6BACE,2BAAmB,UAAf5C,EAAM0B,KAAmB,oBAAsB,aACnD,2BAAOlC,MAAOgE,EAAgByE,SAAUhC,MAE1C,kBAAC6C,EAAA,EAAD,CAASC,QAAS,kBAAM1C,IAAW,KAAnC,OACA,uBAAGjG,UAAW4D,GAAM3D,IAAQ8I,QAAU9I,IAAQ+I,SAAUlF,S,2BErQ1DmF,G,MAAmB,CAAE7C,KAAM,GAAIC,OAAQ,GAAIG,SAAU,EAAGD,MAAO,EAAGnH,MAAO,EAAGqH,WAAY,WAiP/EjH,eAdS,SAAAC,GAAK,MAAK,CAChCoC,QAASpC,EAAMmC,UAAUC,QACzBF,OAAQlC,EAAMmC,UAAUD,OACxBC,UAAWnC,EAAMmC,UACjBlC,aAAcD,EAAME,SAASD,aAC7BoC,OAAQrC,EAAMsC,KAAKD,WAGM,SAAAE,GAAQ,MAAK,CACtCkH,aAAc,SAACrH,GAAD,OAAaG,EAASG,IAAqBN,KACzDsH,YAAa,SAACxH,GAAD,OAAYK,EAASG,IAAoBR,KACtDW,gBAAiB,SAACzE,GAAD,OAAUmE,EAASG,IAAwBtE,QAG/C2B,EA/OM,SAAAI,GAAU,IAAD,EACI2C,mBAAS,eAAK0G,IADlB,mBACrBG,EADqB,KACXC,EADW,OAEY9G,mBAAS,IAFrB,mBAErB+G,EAFqB,KAEPC,EAFO,OAGUhH,mBAAS,GAHnB,mBAGrBiH,EAHqB,KAGRC,EAHQ,OAINlH,oBAAS,GAJH,mBAIrBqB,EAJqB,KAIhBC,EAJgB,OAKAtB,mBAAS,IALT,mBAKrBuB,EALqB,KAKbC,EALa,OAMQxB,mBAAStC,IAAQsB,MANzB,mBAMrBmI,EANqB,KAMTC,EANS,OAOMpH,mBAAS,IAPf,mBAOrBqH,EAPqB,KAOVC,EAPU,KAQtBzF,EAAWD,mBAEjBE,qBAAU,WACR,OAAOzE,EAAM0B,MACX,IAAK,WACC1B,EAAM6E,KAAQkF,EAAc1J,IAAQ6J,UACjCH,EAAc1J,IAAQ8J,cAC7BF,EAAa,4BACb,MACF,IAAK,YACCjK,EAAM6E,KAAQkF,EAAc1J,IAAQ+J,WACjCL,EAAc1J,IAAQgK,eAC7BJ,EAAa,6BACb,MACF,IAAK,YACCjK,EAAM6E,KAAQkF,EAAc1J,IAAQiK,WACjCP,EAAc1J,IAAQkK,eAC7BN,EAAa,qCACb,MACF,QACMjK,EAAM6E,KAAQkF,EAAc1J,IAAQmK,YACjCT,EAAc1J,IAAQoK,gBAC7BR,EAAa,sCAIjB,OADAvF,SAASC,iBAAiB,YAAaC,GAChC,kBAAMF,SAASM,oBAAoB,YAAaJ,MACtD,CAAC5E,EAAM0B,KAAM1B,EAAM6E,OAEtBJ,qBAAU,WACR,OAAO,kBAAMC,SAASM,oBAAoB,YAAaJ,MACtD,IAEH,IAAMA,EAAc,SAACK,GACfT,EAASM,QAAQI,SAASD,EAAEE,SAChCC,KAGIA,EAAe,WACnBqE,EAAY,eAAKJ,IACjBQ,EAAe,GACfF,EAAgB,IAChB1F,GAAO,GACPE,EAAU,IACV8F,EAAa,IACbjK,EAAM+F,SAeF2E,EAAc,uCAAG,gEAAAnE,EAAA,yDACD,IAAhBqD,EADiB,oDAED,cAAf5J,EAAM0B,MAAuC,eAAf1B,EAAM0B,QAA0BkI,EAAcJ,EAAS5C,UAFrE,uBAGnB3C,GAAO,GAHY,kBAIZE,EAAU,wBAAD,OAAwC,cAAfnE,EAAM0B,KAAuB,aAAe,GAArE,YAA2E8H,EAAS/C,OAApF,yBAJG,UAMjBmD,IAAgBJ,EAAS5C,SANR,oBAOA,cAAf5G,EAAM0B,KAPS,oBAQXK,EARW,YAQE/B,EAAM+B,QACnB4I,EAAQ5I,EAAO6I,WAAU,SAAAtI,GAAK,OAAIA,EAAMkE,OAASgD,EAAShD,QAChEzE,EAAO8I,OAAOF,EAAO,IACfzD,EAXW,eAWalH,EAAMgC,YACnBD,OAAjB,YAA8BA,GACxBoF,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OAdO,wBAeflC,EAAM0C,gBAAgByE,GACtBnH,EAAMuJ,YAAYxH,GAhBH,kBAiBRqD,KAjBQ,mCAoBGE,IAAM+B,IAAI,wBAAyB,CAAER,WAAY2C,EAAS3C,WAAYL,KAAMgD,EAAShD,OApBxF,gCAqBIlB,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IArB1C,eAqBTG,EArBS,OAsBftH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMuJ,YAAYxH,GAvBH,kBAwBRqD,KAxBQ,0CA0BfnB,GAAO,GA1BQ,kBA2BRE,EAAU,oCA3BF,WA8BA,eAAfnE,EAAM0B,KA9BS,oBA+BXO,EA/BW,YA+BGjC,EAAMiC,SACpB0I,EAAQ1I,EAAQ2I,WAAU,SAAAnI,GAAM,OAAIA,EAAO+D,OAASgD,EAAShD,QACnEvE,EAAQ4I,OAAOF,EAAO,IAChBzD,EAlCW,eAkCalH,EAAMgC,YACnBC,QAAjB,YAA+BA,GACzBkF,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OArCO,wBAsCflC,EAAM0C,gBAAgByE,GACtBnH,EAAMsJ,aAAarH,GAvCJ,kBAwCRmD,KAxCQ,mCA2CGE,IAAM+B,IAAI,yBAA0B,CAAER,WAAY2C,EAAS3C,WAAYL,KAAMgD,EAAShD,OA3CzF,gCA4CIlB,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA5C1C,eA4CTG,EA5CS,OA6CftH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMsJ,aAAarH,GA9CJ,kBA+CRmD,KA/CQ,0CAiDfnB,GAAO,GAjDQ,kBAkDRE,EAAU,oCAlDF,WAsDf2G,EAA8B,aAAf9K,EAAM0B,MAAsC,cAAf1B,EAAM0B,KAAnC,YACjB1B,EAAM+B,QADW,YACG/B,EAAMiC,SACxB0I,EAAQG,EAAaF,WAAU,SAAA3M,GAAI,OAAIA,EAAKuI,OAASgD,EAAShD,QAC9DuE,EAzDe,eAyDAD,EAAaH,IAC5BK,EAA6B,aAAfhL,EAAM0B,MAAsC,cAAf1B,EAAM0B,KACvDnC,OAAOA,OAAOwL,EAAQnE,UAAYrH,OAAOqK,IACzCrK,OAAOA,OAAOwL,EAAQnE,UAAYrH,OAAOqK,IACzCmB,EAAQnE,SAAWrH,OAAOyL,GAC1BD,EAAQvL,MAAQD,OAAOwL,EAAQpE,MAAQqE,GACvCF,EAAaH,GAAb,eAA2BI,GACrB7D,EAhEe,eAgESlH,EAAMgC,WACjB,aAAfhC,EAAM0B,MAAsC,cAAf1B,EAAM0B,KAjElB,oBAkEnBwF,EAAiBnF,OAAjB,YAA8B+I,GACxB3D,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OApES,wBAqEjBlC,EAAM0C,gBAAgByE,GACtBnH,EAAMuJ,YAAYuB,GAtED,kBAuEV1F,KAvEU,mCA0ECE,IAAM+B,IAAI,wBAAV,eAAwC0D,IA1EzC,gCA2EEzF,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA3ExC,QA2EXG,EA3EW,OA4EjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMuJ,YAAYuB,GAClB1F,IA9EiB,mDAgFjBnB,GAAO,GACPE,EAAU,mCAjFO,oCAoFnB+C,EAAiBjF,QAAjB,YAA+B6I,GACzB3D,EAAkBC,YAAapH,EAAMF,aAAcoH,IACrDlH,EAAMkC,OAtFS,wBAuFjBlC,EAAM0C,gBAAgByE,GACtBnH,EAAMsJ,aAAawB,GAxFF,kBAyFV1F,KAzFU,oCA4FCE,IAAM+B,IAAI,yBAAV,eAAyC0D,IA5F1C,kCA6FEzF,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA7FxC,SA6FXG,EA7FW,OA8FjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMsJ,aAAawB,GACnB1F,IAhGiB,sDAkGjBnB,GAAO,GACPE,EAAU,mCAnGO,qFAAH,qDA0Hd8G,EAAejL,EAAM+B,OAAO9C,KAAI,SAAAqD,GAAK,MAAK,CAAE9C,MAAO8C,EAAMkE,KAAM0E,MAAO5I,EAAMkE,SAC5E2E,EAAgBnL,EAAMiC,QAAQhD,KAAI,SAAAwD,GAAM,MAAK,CAAEjD,MAAOiD,EAAO+D,KAAM0E,MAAOzI,EAAO+D,SAEvF,OACE,yBAAKgB,IAAKhD,EAAUpE,UAAW0J,GAC7B,yBAAK1J,UAAWC,IAAQwH,QACtB,kBAACC,EAAA,EAAD,CAAU/B,MAAOX,KAEnB,uBAAGhF,UAAWC,IAAQ0H,MAAOiC,GAC7B,kBAAC,IAAD,CAAQjJ,QAAwB,aAAff,EAAM0B,MAAsC,cAAf1B,EAAM0B,KAAuBuJ,EAAeE,EACxF/K,UAAWC,IAAQ+K,SAAUnD,SA5Bb,SAACoD,GACrB,IAAKA,EAEH,OADA1B,EAAgB,IACTF,EAAY,eAAKJ,IAM1B,GAJAM,EAAgB0B,GAChBpH,GAAO,GACPE,EAAU,IACV0F,EAAe,GACI,aAAf7J,EAAM0B,MAAsC,cAAf1B,EAAM0B,KAAsB,CAC3D,IAAM4J,EAAatL,EAAM+B,OAAOwJ,MAAK,SAAAjJ,GAAK,OAAIA,EAAMkE,OAAS6E,EAAe7L,SAC5EiK,EAAY,eAAK6B,QACZ,CACL,IAAME,EAAcxL,EAAMiC,QAAQsJ,MAAK,SAAA9I,GAAM,OAAIA,EAAO+D,OAAS6E,EAAe7L,SAChFiK,EAAY,eAAK+B,MAcuCC,cAAY,EAACjM,MAAOkK,EAAcgC,gBAAgB,iBAC1G,uBAAGtL,UAA4B,KAAjBsJ,EAAsBrJ,IAAQsL,SAAWtL,IAAQ0H,MAC7C,aAAf/H,EAAM0B,KAAN,6BACqB8H,EAAS/C,OAD9B,iBAEc,cAAfzG,EAAM0B,KAAN,6BACsB8H,EAAS/C,OAD/B,kBAEe,cAAfzG,EAAM0B,KAAN,mBACY8H,EAAS/C,OADrB,oCAEY+C,EAAS/C,OAFrB,mBAIF,yBAAKrG,UAA4B,KAAjBsJ,EAAsBrJ,IAAQuL,aAAevL,IAAQwL,UACnE,2BAAOC,SAA2B,KAAjBpC,EAAqB/K,KAAK,OAAOyB,UAAWC,IAAQ0L,MACnEvM,MAAOoK,EAAa3B,SA5JN,SAAChD,GACrBhB,GAAO,GACPE,EAAU,IACV,IAAIvB,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,GACxBiH,EAAejH,OAoJK,cAAf5C,EAAM0B,MAAuC,eAAf1B,EAAM0B,KACnC,4BAAQtB,UAAWC,IAAQ2L,OAAQpK,QAAS,kBAAMiI,EAAeL,EAAS5C,YAA1E,OACE,MAEN,4BAAQhF,QAAS8I,EAAgBtK,UAA4B,KAAjBsJ,EAAsBrJ,IAAQ4L,eAAiB5L,IAAQ6L,YAAnG,WAGA,uBAAG9L,UAAW4D,EAAM3D,IAAQ8I,QAAU9I,IAAQ+I,SAAUlF,O,kBC7NxDmF,EAAmB,CAAE7C,KAAM,GAAIC,OAAQ,GAAIG,SAAU,EAAGD,MAAO,EAAGnH,MAAO,EAAGqH,WAAY,UA4K/EjH,eAdS,SAAAC,GAAK,MAAK,CAChCoC,QAASpC,EAAMmC,UAAUC,QACzBF,OAAQlC,EAAMmC,UAAUD,OACxBC,UAAWnC,EAAMmC,UACjBlC,aAAcD,EAAME,SAASD,aAC7BoC,OAAQrC,EAAMsC,KAAKD,WAGM,SAAAE,GAAQ,MAAK,CACtCkH,aAAc,SAACrH,GAAD,OAAaG,EAASG,IAAqBN,KACzDsH,YAAa,SAACxH,GAAD,OAAYK,EAASG,IAAoBR,KACtDW,gBAAiB,SAACzE,GAAD,OAAUmE,EAASG,IAAwBtE,QAG/C2B,EA1KO,SAAAI,GAAU,IAAD,EACW2C,mBAAS,IADpB,mBACtB+G,EADsB,KACRC,EADQ,OAEGhH,mBAAS,eAAK0G,IAFjB,mBAEtBG,EAFsB,KAEZC,EAFY,OAGG9G,mBAAS,GAHZ,mBAGtBwJ,EAHsB,KAGZC,EAHY,OAIPzJ,oBAAS,GAJF,mBAItBqB,EAJsB,KAIjBC,EAJiB,OAKDtB,mBAAS,IALR,mBAKtBuB,EALsB,KAKdC,EALc,OAMKxB,oBAAS,GANd,mBAMtBK,EANsB,KAMXC,EANW,KAOvBuB,EAAWD,mBAEjBE,qBAAU,WAER,OADAC,SAASC,iBAAiB,YAAaC,GAChC,kBAAMF,SAASM,oBAAoB,YAAaJ,MACtD,CAAC5E,EAAM0B,KAAM1B,EAAM6E,OAEtBJ,qBAAU,WACR,OAAO,kBAAMC,SAASM,oBAAoB,YAAaJ,MACtD,IAEH,IAAMA,EAAc,SAACK,GACfT,EAASM,QAAQI,SAASD,EAAEE,SAChCC,KAGIA,EAAe,WACnBqE,EAAY,eAAKJ,IACjB+C,EAAY,GACZzC,EAAgB,IAChB1F,GAAO,GACPE,EAAU,IACVlB,GAAa,GACbjD,EAAM+F,SAeFhE,EAAS/B,EAAM+B,OAAOsK,QAAO,SAAA/J,GAAK,MAAyB,WAArBA,EAAMuE,cAC5C5E,EAAUjC,EAAMiC,QAAQoK,QAAO,SAAA5J,GAAM,MAA0B,WAAtBA,EAAOoE,cAuBhDoE,EAAelJ,EAAO9C,KAAI,SAAAqD,GAC9B,MAAO,CAAE9C,MAAO8C,EAAMkE,KAAM0E,MAAO5I,EAAMkE,SAGrC2E,EAAgBlJ,EAAQhD,KAAI,SAAAwD,GAChC,MAAO,CAAEjD,MAAOiD,EAAO+D,KAAM0E,MAAOzI,EAAO+D,SA0D7C,OACE,yBAAKgB,IAAKhD,EAAUpE,UAA0B,UAAfJ,EAAM0B,KAClC1B,EAAM6E,KAAOxE,IAAQoH,WAAapH,IAAQqH,eAC1C1H,EAAM6E,KAAOxE,IAAQsH,YAActH,IAAQuH,iBAC5C,yBAAKxH,UAAWC,IAAQwH,QACtB,kBAACC,EAAA,EAAD,CAAU/B,MAAOX,KAEnB,uBAAGhF,UAAWC,IAAQ0H,MACJ,UAAf/H,EAAM0B,KACP,6CACA,uDAEF,kBAAC,IAAD,CAAQX,QAAwB,UAAff,EAAM0B,KAAmBuJ,EAAeE,EACvD/K,UAAWC,IAAQ+K,SAAUnD,SAjGb,SAACoD,GACrB,IAAKA,EAGH,OAFA1B,EAAgB,IAChB1G,GAAa,GACNwG,EAAY,eAAKJ,IAM1B,GAJApG,GAAa,GACb0G,EAAgB0B,GAChBpH,GAAO,GACPE,EAAU,IACS,UAAfnE,EAAM0B,KAAkB,CAC1B,IAAM4J,EAAavJ,EAAOwJ,MAAK,SAAAjJ,GAAK,OAAIA,EAAMkE,OAAS6E,EAAe7L,SACtEiK,EAAY,eAAK6B,IACjBc,EAAYd,EAAW3E,WAClB,CACL,IAAM6E,EAAcvJ,EAAQsJ,MAAK,SAAA9I,GAAM,OAAIA,EAAO+D,OAAS6E,EAAe7L,SAC1EiK,EAAY,eAAK+B,IACjBY,EAAYZ,EAAY7E,SAgFgC8E,cAAY,EAClEjM,MAAOkK,EAAcgC,gBAAgB,iBACvC,yBAAKtL,UAAW4C,EAAY3C,IAAQ2I,UAAY3I,IAAQ4I,WACtD,2BAAOzJ,MAAO2M,EAAUlE,SAnHR,SAAChD,GACrBhB,GAAO,GACPE,EAAU,IACV,IAAIvB,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,GACxBwJ,EAAYxJ,OA2GR,kBAACkG,EAAA,EAAD,CAASC,QAxEQ,WACrB,IAAM+B,EAA8B,UAAf9K,EAAM0B,KAAN,YAA6B1B,EAAM+B,QAAnC,YAAiD/B,EAAMiC,SACtE0I,EAAQG,EAAaF,WAAU,SAAA3M,GAAI,OAAIA,EAAKuI,OAASgD,EAAShD,QAC9DuE,EAAO,eAAQD,EAAaH,IAC5B2B,EAAW/M,OAAO4M,GACxBpB,EAAQpE,MAAQ2F,EAChBvB,EAAQvL,MAAQ8M,EAAWvB,EAAQnE,SACnCkE,EAAaH,GAAb,eAA2BI,GAC3B,IAAM7D,EAAgB,eAAQlH,EAAMgC,WACpC,GAAmB,UAAfhC,EAAM0B,KAAkB,CAC1BwF,EAAiBnF,OAAjB,YAA8B+I,GAC9B,IAAM3D,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzD,GAAIlH,EAAMkC,OAGR,OAFAlC,EAAM0C,gBAAgByE,GACtBnH,EAAMuJ,YAAYuB,GACX1F,IAEPE,IAAM+B,IAAI,wBAAV,eAAwC0D,IAAWvF,MAAK,SAAAC,GACtDH,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IAAmB3B,MAAK,SAAA8B,GAC5DtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMuJ,YAAYuB,GAClB1F,OACCO,OAAM,SAAA3B,GACPC,GAAO,GACPE,EAAU,yCAEXwB,OAAM,SAAA3B,GACPC,GAAO,GACPE,EAAU,0CAGT,CACL+C,EAAiBjF,QAAjB,YAA+B6I,GAC/B,IAAM3D,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzD,GAAIlH,EAAMkC,OAGR,OAFAlC,EAAM0C,gBAAgByE,GACtBnH,EAAMsJ,aAAawB,GACZ1F,IAETE,IAAM+B,IAAI,yBAAV,eAAyC0D,IAAWvF,MAAK,SAAAC,GACvDH,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IAAmB3B,MAAK,SAAA8B,GAC5DtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMsJ,aAAawB,GACnB1F,OACCO,OAAM,SAAA3B,GACPC,GAAO,GACPE,EAAU,yCAEXwB,OAAM,SAAA3B,GACPC,GAAO,GACPE,EAAU,yCAsBV,WACA,uBAAG/D,UAAW4D,EAAM3D,IAAQ8I,QAAU9I,IAAQ+I,SAAUlF,Q,kBCyLjDtE,eAdS,SAAAC,GAAK,MAAK,CAChC0M,YAAa1M,EAAMmC,UAAUuK,YAC7BC,YAAa3M,EAAMmC,UAAUwK,YAC7BxK,UAAWnC,EAAMmC,UACjBlC,aAAcD,EAAME,SAASD,aAC7BoC,OAAQrC,EAAMsC,KAAKD,WAGM,SAAAE,GAAQ,MAAK,CACtCM,gBAAiB,SAACzE,GAAD,OAAUmE,EAASG,IAAwBtE,KAC5DwO,aAAc,SAACC,GAAD,OAAYtK,EAASG,IAAqBmK,KACxDC,YAAa,SAACC,GAAD,OAAWxK,EAASG,IAAoBqK,QAGxChN,EAlVI,SAAAI,GAAU,IAAD,EACQ2C,mBAAS,IADjB,mBACnBqH,EADmB,KACRC,EADQ,OAEUtH,mBAAStC,IAAQsB,MAF3B,mBAEnBmI,EAFmB,KAEPC,EAFO,OAGcpH,mBAAStC,IAAQwM,aAH/B,mBAGnBC,EAHmB,KAGLC,EAHK,OAIIpK,mBAAS,MAJb,mBAInB5B,EAJmB,KAIViM,EAJU,OAKcrK,mBAAS,IALvB,mBAKnB+G,EALmB,KAKLC,EALK,OAMMhH,mBAAS,MANf,mBAMnB6G,EANmB,KAMTC,EANS,OAOQ9G,mBAAS,IAPjB,mBAOnBsK,EAPmB,KAORC,EAPQ,OAQQvK,mBAAS,IARjB,mBAQnBwK,EARmB,KAQRC,EARQ,OASUzK,mBAAS,IATnB,mBASnB0K,EATmB,KASPC,EATO,OAUJ3K,oBAAS,GAVL,mBAUnBqB,EAVmB,KAUdC,EAVc,QAWEtB,mBAAS,IAXX,qBAWnBuB,GAXmB,MAWXC,GAXW,SAYMxB,mBAAS,IAZf,qBAYnB4K,GAZmB,MAYTC,GAZS,MAapBhJ,GAAWD,mBAEjBE,qBAAU,WACR,OAAOzE,EAAM0B,MACX,IAAK,WACHuI,EAAa,mBACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQoN,UACjC1D,EAAc1J,IAAQqN,cAC7B,MACF,IAAK,cACHzD,EAAa,oDACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQsN,aACjC5D,EAAc1J,IAAQuN,iBAC7BZ,EAAWhN,EAAMuM,YAAYtN,KAAI,SAAA4O,GAAK,MAAK,CAAErO,MAAOqO,EAAMrH,KAAM0E,MAAO2C,EAAMrH,UAC7E,MACF,IAAK,UACHyD,EAAa,uBACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQyN,SACjC/D,EAAc1J,IAAQ0N,aAC7B,MACF,IAAK,aACH9D,EAAa,uDACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQ2N,YACjCjE,EAAc1J,IAAQ4N,gBAC7BjB,EAAWhN,EAAMwM,YAAYvN,KAAI,SAAAiP,GAAI,MAAK,CAAE1O,MAAO0O,EAAK1H,KAAM0E,MAAOgD,EAAK1H,UAC1E,MACF,IAAK,gBACHyD,EAAa,uCACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQ8N,eACjCpE,EAAc1J,IAAQ+N,mBAC7BpB,EAAWhN,EAAMuM,YAAYtN,KAAI,SAAA4O,GAAK,MAAK,CAAErO,MAAOqO,EAAMrH,KAAM0E,MAAO2C,EAAMrH,UAC7E,MACF,QACEyD,EAAa,0CACTjK,EAAM6E,KAAQkF,EAAc1J,IAAQgO,cACjCtE,EAAc1J,IAAQiO,kBAC7BtB,EAAWhN,EAAMwM,YAAYvN,KAAI,SAAAiP,GAAI,MAAK,CAAE1O,MAAO0O,EAAK1H,KAAM0E,MAAOgD,EAAK1H,UAI9E,OADA9B,SAASC,iBAAiB,YAAaC,IAChC,kBAAMF,SAASM,oBAAoB,YAAaJ,OACtD,CAAC5E,EAAM0B,KAAM1B,EAAM6E,OAEtBJ,qBAAU,WACR,OAAO,kBAAMC,SAASM,oBAAoB,YAAaJ,OACtD,IAEH,IAAMA,GAAc,SAACK,GACfT,GAASM,QAAQI,SAASD,EAAEE,SAChCC,MAGIA,GAAe,WACnB6E,EAAa,IACb8C,EAAgB1M,IAAQwM,aACxBG,EAAW,MACXrD,EAAgB,IAChBF,EAAY,MACZyD,EAAa,IACbE,EAAa,IACbE,EAAc,IACdrJ,GAAO,GACPE,GAAU,IACVqJ,GAAY,IACZxN,EAAM+F,SAqEFwI,GAAa,WACjBtK,GAAO,GACPE,GAAU,oCAGNuG,GAAc,uCAAG,kHAAAnE,EAAA,yDACfW,EADe,eACSlH,EAAMgC,WACjB,aAAfhC,EAAM0B,KAFW,iBAGbzD,EAAO,CAAEuI,KAAMyG,EAAWuB,KAAMrB,EAAW3N,MAAO6N,GAHrC,cAIDrN,EAAMuM,aAJL,oEAKP/F,OAASvI,EAAKuI,KALP,wBAMfvC,GAAO,GANQ,kBAORE,GAAU,oBAAD,OAAqBlG,EAAKuI,KAA1B,wBAPD,mJAUfxG,EAAMkC,OAVS,wBAWXqK,EAXW,YAWOrF,EAAiBqF,cAC7BtF,QAAZ,eAAyBhJ,IACzBiJ,EAAiBqF,YAAcA,EACzBpF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAMyM,aAAaF,GAhBF,kBAiBVnH,MAjBU,mCAoBCE,IAAM+B,IAAI,qBAAV,eAAqCpJ,IApBtC,eAoBXwH,EApBW,OAqBjByB,EAAiBqF,YAAc9G,EAAIxH,KAAKyO,OAClCvF,EAAkBC,YAAapH,EAAMF,aAAcoH,GAtBxC,UAuBE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IAvBxC,eAuBXG,EAvBW,OAwBjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMyM,aAAahH,EAAIxH,KAAKyO,QAzBX,kBA0BVtH,MA1BU,4DA2BCmJ,MA3BD,oCA4BK,gBAAfvO,EAAM0B,KA5BI,qBA6Bf1B,EAAMkC,OA7BS,wBA8BXqK,EA9BW,YA8BOrF,EAAiBqF,aACnC5B,EAAQ4B,EAAY3B,WAAU,SAAAiD,GAAK,OAAIA,EAAMrH,OAASgD,EAAShD,QACrE+F,EAAY1B,OAAOF,EAAO,GAC1BzD,EAAiBqF,YAAcA,EACzBpF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAMyM,aAAaF,GApCF,kBAqCVnH,MArCU,mCAwCCE,IAAM+B,IAAI,wBAAyB,CAAEb,KAAMgD,EAAShD,OAxCrD,eAwCXf,EAxCW,OAyCjByB,EAAiBqF,YAAc9G,EAAIxH,KAAKyO,OAClCvF,EAAkBC,YAAapH,EAAMF,aAAcoH,GA1CxC,UA2CE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA3CxC,eA2CXG,EA3CW,OA4CjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMyM,aAAahH,EAAIxH,KAAKyO,QA7CX,kBA8CVtH,MA9CU,4DA+CCmJ,MA/CD,oCAgDK,YAAfvO,EAAM0B,KAhDI,kBAiDbzD,EAAO,CAAEuI,KAAMyG,EAAWuB,KAAMrB,EAAW3N,MAAO6N,GAjDrC,cAkDFrN,EAAMwM,aAlDJ,sEAmDRhG,OAASvI,EAAKuI,KAnDN,wBAoDfvC,GAAO,GApDQ,kBAqDRE,GAAU,oBAAD,OAAqBlG,EAAKuI,KAA1B,wBArDD,qJAwDfxG,EAAMkC,OAxDS,yBAyDXsK,EAzDW,YAyDOtF,EAAiBsF,cAC7BvF,QAAZ,eAAyBhJ,IACzBiJ,EAAiBsF,YAAcA,EACzBrF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAM2M,YAAYH,GA9DD,kBA+DVpH,MA/DU,sCAkECE,IAAM+B,IAAI,oBAAV,eAAoCpJ,IAlErC,gBAkEXwH,EAlEW,OAmEjByB,EAAiBsF,YAAc/G,EAAIxH,KAAK2O,MAClCzF,EAAkBC,YAAapH,EAAMF,aAAcoH,GApExC,WAqEE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IArExC,gBAqEXG,EArEW,OAsEjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAM2M,YAAYlH,EAAIxH,KAAK2O,OAvEV,kBAwEVxH,MAxEU,+DAyECmJ,MAzED,sCA0EK,eAAfvO,EAAM0B,KA1EI,sBA2Ef1B,EAAMkC,OA3ES,yBA4EXsK,EA5EW,YA4EOtF,EAAiBsF,aACnC7B,EAAQ6B,EAAY5B,WAAU,SAAAsD,GAAI,OAAIA,EAAK1H,OAASgD,EAAShD,QACnEgG,EAAY3B,OAAOF,EAAO,GAC1BzD,EAAiBsF,YAAcA,EACzBrF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAM2M,YAAYH,GAlFD,kBAmFVpH,MAnFU,sCAsFCE,IAAM+B,IAAI,uBAAwB,CAAEb,KAAMgD,EAAShD,OAtFpD,gBAsFXf,EAtFW,OAuFjByB,EAAiBsF,YAAc/G,EAAIxH,KAAK2O,MAClCzF,EAAkBC,YAAapH,EAAMF,aAAcoH,GAxFxC,WAyFE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IAzFxC,gBAyFXG,EAzFW,OA0FjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAM2M,YAAYlH,EAAIxH,KAAK2O,OA3FV,kBA4FVxH,MA5FU,+DA6FCmJ,MA7FD,sCA8FK,kBAAfvO,EAAM0B,KA9FI,qBA+FbzD,EAAO,CAAEuI,KAAMgD,EAAShD,KAAMgI,KAAMhF,EAASgF,KAAMhP,MAAO+N,KAC5DvN,EAAMkC,OAhGS,yBAiGXqK,EAjGW,YAiGOrF,EAAiBqF,aACnC5B,EAAQ4B,EAAY3B,WAAU,SAAAiD,GAAK,OAAIA,EAAMrH,OAASvI,EAAKuI,QACjE+F,EAAY5B,GAAOnL,MAAQvB,EAAKuB,MAChC0H,EAAiBqF,YAAcA,EACzBpF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAMyM,aAAaF,GAvGF,kBAwGVnH,MAxGU,sCA2GCE,IAAM+B,IAAI,wBAAV,eAAwCpJ,IA3GzC,gBA2GXwH,EA3GW,OA4GjByB,EAAiBqF,YAAc9G,EAAIxH,KAAKyO,OAClCvF,EAAkBC,YAAapH,EAAMF,aAAcoH,GA7GxC,WA8GE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,IA9GxC,gBA8GXG,EA9GW,OA+GjBtH,EAAM0C,gBAAgB4E,EAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAMyM,aAAahH,EAAIxH,KAAKyO,QAhHX,kBAiHVtH,MAjHU,+DAkHCmJ,MAlHD,sCAoHbtQ,EAAO,CAAEuI,KAAMgD,EAAShD,KAAMgI,KAAMhF,EAASgF,KAAMhP,MAAO+N,KAC5DvN,EAAMkC,OArHS,yBAsHXsK,EAtHW,YAsHOtF,EAAiBsF,aACnC7B,EAAQ6B,EAAY5B,WAAU,SAAAsD,GAAI,OAAIA,EAAK1H,OAASvI,EAAKuI,QAC/DgG,EAAY7B,GAAOnL,MAAQvB,EAAKuB,MAChC0H,EAAiBsF,YAAcA,EACzBrF,EAAkBC,YAAapH,EAAMF,aAAcoH,GACzDlH,EAAM0C,gBAAgByE,GACtBnH,EAAM2M,YAAYH,GA5HD,kBA6HVpH,MA7HU,sCAgICE,IAAM+B,IAAI,uBAAV,eAAuCpJ,IAhIxC,gBAgIXwH,EAhIW,OAiIjByB,EAAiBsF,YAAc/G,EAAIxH,KAAK2O,MAClCzF,GAAkBC,YAAapH,EAAMF,aAAcoH,GAlIxC,WAmIE5B,IAAM+B,IAAI,WAAY,CAAEvH,aAAcqH,KAnIxC,gBAmIXG,GAnIW,OAoIjBtH,EAAM0C,gBAAgB4E,GAAKrJ,KAAKyH,OAAO1G,YACvCgB,EAAM2M,YAAYlH,EAAIxH,KAAK2O,OArIV,kBAsIVxH,MAtIU,+DAuICmJ,MAvID,uIAAH,qDA2IpB,OACE,yBAAK/G,IAAKhD,GAAUpE,UAAW0J,GAC7B,yBAAK1J,UAAWC,IAAQwH,QACtB,kBAACC,EAAA,EAAD,CAAU/B,MAAOX,MAEnB,uBAAGhF,UAAWC,IAAQ0H,MAAOiC,GAC5BjJ,EACC,kBAAC,IAAD,CAAQA,QAASA,EAASX,UAAWC,IAAQ+K,SAAUnD,SAzNvC,SAACwG,GACrB,IAAKA,EAGH,OAFA9E,EAAgB,IAChBoD,EAAgB1M,IAAQwM,aACjBpD,EAAY,MAMrB,GAJAE,EAAgB8E,GAChBxK,GAAO,GACPE,GAAU,IACV4I,EAAgB1M,IAAQqO,SACL,kBAAf1O,EAAM0B,MAA2C,gBAAf1B,EAAM0B,KAAwB,CAClE,IAAMiN,EAAa3O,EAAMuM,YAAYhB,MAAK,SAAAsC,GAAK,OAAIA,EAAMrH,OAASiI,EAAOjP,SACzEiK,EAAY,eAAKkF,IACjBnB,GAAYmB,EAAWnP,YAClB,GAAmB,iBAAfQ,EAAM0B,MAA0C,eAAf1B,EAAM0B,KAAuB,CACvE,IAAMkN,EAAY5O,EAAMwM,YAAYjB,MAAK,SAAA2C,GAAI,OAAIA,EAAK1H,OAASiI,EAAOjP,SACtEiK,EAAY,eAAKmF,IACjBpB,GAAYoB,EAAUpP,SAyMlBiM,cAAY,EAACjM,MAAOkK,EAAcgC,gBAAgB,iBAEpD,yBAAKtL,UAAWC,IAAQwO,QACtB,6BACE,mCACA,2BAAOrP,MAAOyN,EAAWhF,SA1MV,SAAChD,GACxBiI,EAAajI,EAAEE,OAAO3F,OACtByE,GAAO,GACPE,GAAU,IACNc,EAAEE,OAAO3F,MAAMU,OAAS,GAAKiN,EAAUjN,OAAS,GAAKmN,EAAWnN,OAAS,EAC3E6M,EAAgB1M,IAAQqO,SACjB3B,EAAgB1M,IAAQwM,iBAsM3B,6BACE,0CACA,2BAAOrN,MAAO2N,EAAWlF,SArMV,SAAChD,GACxBmI,EAAanI,EAAEE,OAAO3F,OACtByE,GAAO,GACPE,GAAU,IACNc,EAAEE,OAAO3F,MAAMU,OAAS,GAAK+M,EAAU/M,OAAS,GAAKmN,EAAWnN,OAAS,EAC3E6M,EAAgB1M,IAAQqO,SACjB3B,EAAgB1M,IAAQwM,iBAiM3B,6BACE,oCACA,2BAAOrN,MAAO6N,EAAYpF,SAhMV,SAAChD,GACzB,IAAIrC,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,GACxB0K,EAAc1K,GACdqB,GAAO,GACPE,GAAU,IACNvB,EAAI1C,OAAS,GAAKiN,EAAUjN,OAAS,GAAK+M,EAAU/M,OAAS,EAC/D6M,EAAgB1M,IAAQqO,SACjB3B,EAAgB1M,IAAQwM,mBAwLd,kBAAf7M,EAAM0B,MAA2C,iBAAf1B,EAAM0B,MAA6C,KAAjBgI,EAEpE,KADA,2BAAOtJ,UAAWC,IAAQyO,cAAetP,MAAO+N,GAAUtF,SAtLxC,SAAChD,GACvB,IAAIrC,EAAMqC,EAAEE,OAAO3F,MACf0G,MAAMtD,KACS,IAAfA,EAAI1C,QAAkC,MAAlB0C,EAAIuD,OAAO,IAAgC,MAAlBvD,EAAIuD,OAAO,KAC1DvD,EAAMA,EAAIwD,MAAM,IAEN,KAARxD,IAAcA,EAAM,GACxB4K,GAAY5K,GACZqB,GAAO,GACPE,GAAU,QA+KR,4BAAQvC,QAAS8I,GAAgBtK,UAAW0M,GAA5C,WACA,uBAAG1M,UAAW4D,EAAM3D,IAAQ8I,QAAU9I,IAAQ+I,SAAUlF,Q,yBCnM/CtE,uBALS,SAAAC,GAAK,MAAK,CAChCkC,OAAQlC,EAAMmC,UAAUD,OACxBE,QAASpC,EAAMmC,UAAUC,WAGZrC,CAAyBmP,aAxHtB,SAAA/O,GAAU,IAAD,EACqB2C,oBAAS,GAD9B,mBAClBqM,EADkB,KACDC,EADC,OAEuBtM,oBAAS,GAFhC,mBAElBuM,EAFkB,KAEAC,EAFA,OAGexM,oBAAS,GAHxB,mBAGlByM,EAHkB,KAGJC,EAHI,OAIiB1M,oBAAS,GAJ1B,mBAIlB2M,EAJkB,KAIHC,EAJG,OAKiB5M,oBAAS,GAL1B,mBAKlB6M,EALkB,KAKHC,EALG,OAMmB9M,oBAAS,GAN5B,mBAMlB+M,EANkB,KAMFC,EANE,OAOyBhN,oBAAS,GAPlC,mBAOlBiN,EAPkB,KAOCC,EAPD,OAQ2BlN,oBAAS,GARpC,mBAQlBmN,EARkB,KAQEC,EARF,OASepN,oBAAS,GATxB,mBASlBqN,EATkB,KASJC,EATI,OAUqBtN,oBAAS,GAV9B,mBAUlBuN,EAVkB,KAUDC,EAVC,QAWaxN,oBAAS,GAXtB,qBAWlByN,GAXkB,MAWLC,GAXK,SAYmB1N,oBAAS,GAZ5B,qBAYlB2N,GAZkB,MAYFC,GAZE,SAayB5N,oBAAS,GAblC,qBAalB6N,GAbkB,MAaCC,GAbD,SAcuB9N,oBAAS,GAdhC,qBAclB+N,GAdkB,MAcAC,GAdA,MAenBC,GAAarM,mBACbsM,GAAWtM,mBACXuM,GAAYvM,mBACZwM,GAAWxM,mBAEjBE,qBAAU,WACR,OAAOzE,EAAMgR,SAASC,QACpB,IAAK,cAAe,OAAOJ,GAAS/L,QAAQoM,iBAC5C,IAAK,eAAgB,OAAOJ,GAAUhM,QAAQoM,iBAC9C,IAAK,cAAe,OAAOH,GAASjM,QAAQoM,iBAC5C,QAAS,OAAON,GAAW9L,QAAQoM,oBAEpC,IAEH,IAAMC,GAAqB,SAACzP,GAC1B,MAAc,aAATA,GAAgC,cAATA,GAAiD,IAAxB1B,EAAM+B,OAAO7B,OAGpD,cAATwB,GAAiC,eAATA,GAAmD,IAAzB1B,EAAMiC,QAAQ/B,YAG5D,aAATwB,EAAsB2N,GAAgB,GAC7B,cAAT3N,EAAuB6N,GAAiB,GAC/B,cAAT7N,EAAuB+N,GAAiB,GACxCE,GAAkB,IALTR,GAAoB,GAHpBF,GAAmB,IAW9B,OACE,yBAAK7O,UAAWC,IAAQ+Q,WACtB,yBAAKhR,UAAWC,IAAQgR,QAAS7J,IAAKoJ,IACpC,kBAACvP,EAAA,EAAD,CAAelB,OAAO,IACtB,yBAAKC,UAAWC,IAAQiR,aACtB,yBAAKlR,UAAWC,IAAQkR,OAAQ/J,IAAKqJ,IACnC,sCACA,kBAAC/H,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMkG,GAAmB,KAA/C,qBACA,yBAAK7O,UAAWC,IAAQoR,aACtB,kBAACC,EAAA,EAAD,CAAUF,KAAG,EAACzI,QAAS,kBAAMoI,GAAmB,cAAhD,OACA,kBAAC,EAAD,CAAczP,KAAK,WAAWmD,KAAMuK,EAAcrJ,MAAO,kBAAMsJ,GAAgB,MAC/E,kBAACqC,EAAA,EAAD,CAAUF,KAAG,EAACzI,QAAS,kBAAMoI,GAAmB,eAAhD,QACA,kBAAC,EAAD,CAAczP,KAAK,YAAYmD,KAAMyK,EAAevJ,MAAO,kBAAMwJ,GAAiB,MAClF,4BAAQnP,UAAWC,IAAQsR,YAAa/P,QAAS,kBAAMiO,GAAqB,KAC1E,8BAAO+B,MAET,kBAAC,EAAD,CAAelQ,KAAK,QAAQmD,KAAM+K,EAAmB7J,MAAO,kBAAM8J,GAAqB,OAEzF,kBAAC,EAAD,CAAanO,KAAK,QAAQmD,KAAMmK,EAAiBjJ,MAAO,kBAAMkJ,GAAmB,MACjF,kBAAC4C,EAAA,EAAD,CAAiBnQ,KAAK,SAASoQ,QAAM,KAEvC,yBAAK1R,UAAWC,IAAQ0R,QAASvK,IAAKsJ,IACpC,gDACA,kBAAChI,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMoG,GAAoB,KAAhD,qBACA,yBAAK/O,UAAWC,IAAQoR,aACtB,kBAACC,EAAA,EAAD,CAAUF,KAAG,EAACzI,QAAS,kBAAMoI,GAAmB,eAAhD,OACA,kBAAC,EAAD,CAAczP,KAAK,YAAYmD,KAAM2K,EAAezJ,MAAO,kBAAM0J,GAAiB,MAClF,kBAACiC,EAAA,EAAD,CAAUF,KAAG,EAACzI,QAAS,kBAAMoI,GAAmB,gBAAhD,QACA,kBAAC,EAAD,CAAczP,KAAK,aAAamD,KAAM6K,EAAgB3J,MAAO,kBAAM4J,GAAkB,MACrF,4BAAQvP,UAAWC,IAAQsR,YAAa/P,QAAS,kBAAMmO,GAAsB,KAC3E,8BAAO6B,MAET,kBAAC,EAAD,CAAelQ,KAAK,SAASmD,KAAMiL,EAAoB/J,MAAO,kBAAMgK,GAAsB,OAE5F,kBAAC,EAAD,CAAarO,KAAK,SAASmD,KAAMqK,EAAkBnJ,MAAO,kBAAMoJ,GAAoB,MACpF,kBAAC0C,EAAA,EAAD,CAAiBnQ,KAAK,UAAUoQ,QAAM,MAG1C,yBAAK1R,UAAWC,IAAQiR,aACtB,yBAAKlR,UAAWC,IAAQkR,OAAQ/J,IAAKuJ,IACnC,sCACA,yBAAK3Q,UAAWC,IAAQ2R,WACtB,kBAAClJ,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMkH,GAAgB,KAA5C,mBACA,kBAAC,EAAD,CAAYvO,KAAK,WAAWqE,MAAO,kBAAMkK,GAAgB,IAAQpL,KAAMmL,IACvE,kBAAClH,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMoH,GAAmB,KAA/C,mBACA,kBAAC,EAAD,CAAYzO,KAAK,cAAcqE,MAAO,kBAAMoK,GAAmB,IAAQtL,KAAMqL,IAC7E,4BAAQ9P,UAAWC,IAAQ4R,iBAAkBrQ,QAAS,kBAAM6O,IAAqB,KAC/E,8BAAOmB,MAET,kBAAC,EAAD,CAAYlQ,KAAK,gBAAgBqE,MAAO,kBAAM0K,IAAqB,IAAQ5L,KAAM2L,MAEnF,kBAACqB,EAAA,EAAD,CAAiBnQ,KAAK,SAASoQ,QAAM,KAEvC,yBAAK1R,UAAWC,IAAQ0R,SACtB,2CACA,yBAAK3R,UAAWC,IAAQ2R,WACtB,kBAAClJ,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMsH,IAAe,KAA3C,uBACA,kBAAC,EAAD,CAAY3O,KAAK,UAAUqE,MAAO,kBAAMsK,IAAe,IAAQxL,KAAMuL,KACrE,kBAACtH,EAAA,EAAD,CAAS0I,KAAG,EAACzI,QAAS,kBAAMwH,IAAkB,KAA9C,sBACA,kBAAC,EAAD,CAAY7O,KAAK,aAAaqE,MAAO,kBAAMwK,IAAkB,IAAQ1L,KAAMyL,KAC3E,4BAAQlQ,UAAWC,IAAQ4R,iBAAkBrQ,QAAS,kBAAM+O,IAAoB,KAC9E,8BAAOiB,MAET,kBAAC,EAAD,CAAYlQ,KAAK,eAAeqE,MAAO,kBAAM4K,IAAoB,IAAQ9L,KAAM6L,MAEjF,kBAACmB,EAAA,EAAD,CAAiBnQ,KAAK,QAAQoQ,QAAM,a,gCCzHhD,qCAQehJ,IALC,SAAA9I,GAAK,OACnB,4BAAQI,UAAWJ,EAAMwR,IAAOxR,EAAMkS,SAAW7R,IAAQ8R,SAAW9R,IAAQ+R,OAAU/R,IAAQgS,IAC5FzQ,QAAS5B,EAAM+I,SAAU/I,EAAMsS,Y,gCCLnC,qCAOeZ,IAJE,SAAA1R,GAAK,OACpB,4BAAQI,UAAWJ,EAAMwR,IAAMnR,IAAQ+R,OAAS/R,IAAQgS,IAAKzQ,QAAS5B,EAAM+I,SAAU/I,EAAMsS,Y,mBCH9FhR,EAAOC,QAAU,CAAC,OAAS,wBAAwB,IAAM,qBAAqB,SAAW,4B,mBCAzFD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,IAAM,wB,wCCA1DD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,cAAgB,qCAAqC,mBAAqB,0CAA0C,cAAgB,qCAAqC,aAAe,oCAAoC,mBAAqB,0CAA0C,kBAAoB,yCAAyC,cAAgB,qCAAqC,mBAAqB,0CAA0C,MAAQ,+B,gCCD3gB,6CAsEe3B,iBAPS,SAAAC,GAAK,MAAK,CAChCkC,OAAQlC,EAAMmC,UAAUD,OACxBE,QAASpC,EAAMmC,UAAUC,QACzByK,OAAQ7M,EAAMmC,UAAUuK,YACxBK,MAAO/M,EAAMmC,UAAUwK,eAGV5M,EAlES,SAAAI,GAAK,OAC3B,yBAAKI,UAAWJ,EAAM8R,OAAS,KAAuB,WAAf9R,EAAM0B,MAAoC,YAAf1B,EAAM0B,KAAqBrB,IAAQkS,eAAiBlS,IAAQmS,qBAC5H,2BAAOpS,UAAWJ,EAAM8R,OAASzR,IAAQoS,YAAcpS,IAAQqS,OAC7D,+BACE,wBAAItS,UAAWC,IAAQsS,cACrB,4BAAoB,WAAf3S,EAAM0B,KAAoB,SAA0B,YAAf1B,EAAM0B,KAAqB,SAAW,QAChF,4BAAoB,WAAf1B,EAAM0B,KAAoB,eAAgC,YAAf1B,EAAM0B,KAAqB,iBAAmB,eAC9F,4BAAoB,WAAf1B,EAAM0B,KAAoB,SAA0B,YAAf1B,EAAM0B,KAAqB,WAAY,SACjE,WAAf1B,EAAM0B,MAAoC,YAAf1B,EAAM0B,KAAqB,qCAAiB,KACxD,WAAf1B,EAAM0B,MAAoC,YAAf1B,EAAM0B,KAAqB,qCAAiB,OAG5E,+BACkB,WAAf1B,EAAM0B,KACL1B,EAAM+B,OAAO9C,KAAI,SAACqD,EAAOiG,GAAR,OACf,wBAAIE,IAAKF,GACP,wBAAInI,UAAWC,IAAQuS,QAAStQ,EAAMmE,QACtC,4BAAKnE,EAAMkE,MACX,4BAAKlE,EAAMsE,UACX,4BAAqB,MAAhBtE,EAAMqE,MAAgB,IAAtB,WAAgCpH,OAAO+C,EAAMqE,OAAOlH,QAAQ,KACjE,wBAAIW,UAAWC,IAAQwS,OAAwB,MAAhBvQ,EAAM9C,MAAgB,IAAtB,WAAgCD,OAAO+C,EAAM9C,OAAOC,QAAQ,SAE5E,YAAfO,EAAM0B,KACV1B,EAAMiC,QAAQhD,KAAI,SAACwD,EAAQ8F,GAAT,OAChB,wBAAIE,IAAKF,GACP,wBAAInI,UAAWC,IAAQuS,QACF,QAAlBnQ,EAAOgE,OAAmB,yBAAKqM,IAAI,sBAAsBC,IAAI,QAC5C,QAAlBtQ,EAAOgE,OAAmB,yBAAKqM,IAAI,sBAAsBC,IAAI,QAC3C,QAAlBtQ,EAAOgE,OAAmB,yBAAKqM,IAAI,sBAAsBC,IAAI,QAC7DtQ,EAAOgE,QAET,4BAAKhE,EAAO+D,MACZ,4BAAK/D,EAAOmE,UACZ,4BAAsB,MAAjBnE,EAAOkE,MAAgB,IAAvB,WAAiCpH,OAAOkD,EAAOkE,OAAOlH,QAAQ,KACnE,wBAAIW,UAAWC,IAAQwS,OAAyB,MAAjBpQ,EAAOjD,MAAgB,IAAvB,WAAiCD,OAAOkD,EAAOjD,OAAOC,QAAQ,SAGhF,WAAfO,EAAM0B,KACR1B,EAAM0M,OAAOzN,KAAI,SAAC4O,EAAOtF,GAAR,OACf,wBAAIE,IAAKF,GACP,wBAAInI,UAAWC,IAAQuS,QAAS/E,EAAMrH,MACtC,4BAAKqH,EAAMW,MACX,wBAAIpO,UAAWC,IAAQwS,OAAvB,IAAgCtT,OAAOsO,EAAMrO,OAAOC,QAAQ,QAIhEO,EAAM4M,MAAM3N,KAAI,SAACiP,EAAM3F,GAAP,OACd,wBAAIE,IAAKF,GACP,wBAAInI,UAAWC,IAAQuS,QAAS1E,EAAK1H,MACrC,4BAAK0H,EAAKM,MACV,wBAAIpO,UAAWC,IAAQwS,OAAvB,IAAgCtT,OAAO2O,EAAK1O,OAAOC,QAAQ,e,mBCrDzE6B,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,oBAAsB,6CAA6C,MAAQ,+BAA+B,YAAc,qCAAqC,MAAQ,+BAA+B,aAAe,sCAAsC,OAAS","file":"static/js/4.04ba6e64.chunk.js","sourcesContent":["export const createNetWorthOptions = (data) => {\r\n  const netWorthData = data.map(dataPt => {\r\n    return { x: new Date(dataPt.date), y: Number((dataPt.value).toFixed(2)) };\r\n  });\r\n\r\n  const options = {\r\n    animationEnabled: true,\r\n    theme: 'light2',\r\n    exportEnabled: false,\r\n    axisY: { valueFormatString: \"'$'0\" },\r\n    axisX: { valueFormatString: 'MM/DD/YY', labelAngle: -20 },\r\n    toolTip: { content: '{x}: ${y}' },\r\n    data: [{\r\n      type: 'area',\r\n      indexLabelFontColor: '#5A5757',\r\n      indexLabelPlacement: 'outside',\r\n      color: 'rgb(26, 171, 152)',\r\n      fillOpacity: '1',\r\n      dataPoints: netWorthData\r\n    }]\r\n  };\r\n\r\n  return options;\r\n};\r\n","import React from 'react';\r\nimport classes from './NetWorthChart.module.css';\r\nimport { connect } from 'react-redux';\r\nimport CanvasJSReact from '../canvasjs/canvasjs.react';\r\nimport { createNetWorthOptions } from '../../utils/chartFuncs';\r\nconst CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst NetWorthChart = props => {\r\n  const netWorthVal = props.netWorthData.length === 0 ? '0.00' :\r\n  Number(props.netWorthData[props.netWorthData.length - 1].value).toFixed(2);\r\n\r\n  return (\r\n    props.small ? (\r\n      <div className={classes.Chart}>\r\n        <div className={classes.NetWorthTitleSmall}>\r\n          <h1 className={classes.NetWorthTextSmall}>Net Worth</h1>\r\n          <h1 className={classes.NetWorthValueSmall}>\r\n            ${Number(netWorthVal).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          </h1>\r\n        </div>\r\n        <div className={classes.NetWorthChartSmall}>\r\n          <CanvasJSChart options={{ ...createNetWorthOptions(props.netWorthData), height: 200 }} />\r\n          <div className={classes.Block}></div>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <div className={classes.NetWorthTitle}>\r\n          <h1 className={classes.NetWorthText}>Net Worth</h1>\r\n          <h1 className={classes.NetWorthValue}>\r\n            ${Number(netWorthVal).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          </h1>\r\n        </div>\r\n        <div className={classes.NetWorthChart}>\r\n          <CanvasJSChart options={{ ...createNetWorthOptions(props.netWorthData) }} />\r\n          <div className={classes.Block}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  netWorthData: state.netWorth.netWorthData\r\n});\r\n\r\nexport default connect(mapStateToProps)(NetWorthChart);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Portfolio_Container__2Lh7v\",\"Content\":\"Portfolio_Content__1tCeD\",\"Investments\":\"Portfolio_Investments__3xVv8\",\"Stocks\":\"Portfolio_Stocks__17s2Y\",\"Cryptos\":\"Portfolio_Cryptos__1lkDy\",\"Table\":\"Portfolio_Table__31oz1\",\"Value\":\"Portfolio_Value__7pg89\",\"HeaderFields\":\"Portfolio_HeaderFields__36Kmk\",\"Symbol\":\"Portfolio_Symbol__34IIQ\",\"BuySellBtns\":\"Portfolio_BuySellBtns__1GGk8\",\"SettingsBtn\":\"Portfolio_SettingsBtn__3XtZ5\",\"AssetSettingsBtn\":\"Portfolio_AssetSettingsBtn__1r-p2\",\"AssetBtns\":\"Portfolio_AssetBtns__33a9_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StockPanel\":\"SearchPanel_StockPanel__2CChX\",\"CryptoPanel\":\"SearchPanel_CryptoPanel__1dypT\",\"StockPanelHide\":\"SearchPanel_StockPanelHide__13Ch4\",\"CryptoPanelHide\":\"SearchPanel_CryptoPanelHide__2a3g4\",\"BtnDiv\":\"SearchPanel_BtnDiv__17zMD\",\"Text\":\"SearchPanel_Text__2AKO8\",\"SearchInput\":\"SearchPanel_SearchInput__1c0sz\",\"ShowInput\":\"SearchPanel_ShowInput__2qwC3\",\"HideInput\":\"SearchPanel_HideInput__2x1NU\",\"Results\":\"SearchPanel_Results__2-1PS\",\"Result\":\"SearchPanel_Result__Gop_s\",\"SearchSymbol\":\"SearchPanel_SearchSymbol__OfAX-\",\"SearchName\":\"SearchPanel_SearchName__3DzYW\",\"BtnDiv2\":\"SearchPanel_BtnDiv2__2HcT9\",\"InputText\":\"SearchPanel_InputText__3gmXN\",\"ShowErr\":\"SearchPanel_ShowErr__2DhsU\",\"HideErr\":\"SearchPanel_HideErr__3XLu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackBtn\":\"BackBtn_BackBtn__2ULbF\",\"Hide\":\"BackBtn_Hide__2sOS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"BuySellPanel_Hide__2o5mT\",\"BuyStock\":\"BuySellPanel_BuyStock__1-QCB\",\"SellStock\":\"BuySellPanel_SellStock__2S1eJ\",\"HideBuyStock\":\"BuySellPanel_HideBuyStock__2euoZ\",\"HideSellStock\":\"BuySellPanel_HideSellStock__3vuAK\",\"BuyCrypto\":\"BuySellPanel_BuyCrypto__3F8id\",\"SellCrypto\":\"BuySellPanel_SellCrypto__3AD3L\",\"HideBuyCrypto\":\"BuySellPanel_HideBuyCrypto__cErw3\",\"HideSellCrypto\":\"BuySellPanel_HideSellCrypto__i1atI\",\"BtnDiv\":\"BuySellPanel_BtnDiv__1HkjQ\",\"Text\":\"BuySellPanel_Text__29sR8\",\"HideText\":\"BuySellPanel_HideText__3-jQz\",\"Input\":\"BuySellPanel_Input__3GW2s\",\"ConfirmBtn\":\"BuySellPanel_ConfirmBtn__9seJA\",\"HideConfirmBtn\":\"BuySellPanel_HideConfirmBtn__3-mHz\",\"AllBtn\":\"BuySellPanel_AllBtn__2dh18\",\"ShowErr\":\"BuySellPanel_ShowErr__Ttp5f\",\"HideErr\":\"BuySellPanel_HideErr__1B6WU\",\"InputDiv\":\"BuySellPanel_InputDiv__317pk\",\"HideInputDiv\":\"BuySellPanel_HideInputDiv__3FILJ\",\"Dropdown\":\"BuySellPanel_Dropdown__3Tpwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StockPanel\":\"SettingsPanel_StockPanel__UZXeJ\",\"CryptoPanel\":\"SettingsPanel_CryptoPanel__2tSHt\",\"StockPanelHide\":\"SettingsPanel_StockPanelHide__1UghW\",\"CryptoPanelHide\":\"SettingsPanel_CryptoPanelHide__1evDN\",\"BtnDiv\":\"SettingsPanel_BtnDiv__3ZXY8\",\"Text\":\"SettingsPanel_Text__2Nd-n\",\"Dropdown\":\"SettingsPanel_Dropdown__1ishV\",\"ShowInput\":\"SettingsPanel_ShowInput__3VLzL\",\"HideInput\":\"SettingsPanel_HideInput__19j3W\",\"ShowErr\":\"SettingsPanel_ShowErr__6l0YA\",\"HideErr\":\"SettingsPanel_HideErr__2ME_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"AssetPanel_Hide__3Zgog\",\"AddAsset\":\"AssetPanel_AddAsset__aLKaa\",\"HideAddAsset\":\"AssetPanel_HideAddAsset__1YIeu\",\"AddDebt\":\"AssetPanel_AddDebt__25Dbr\",\"HideAddDebt\":\"AssetPanel_HideAddDebt__QE8he\",\"SettingsAsset\":\"AssetPanel_SettingsAsset__16_Bh\",\"HideSettingsAsset\":\"AssetPanel_HideSettingsAsset__1kSfW\",\"SettingsDebt\":\"AssetPanel_SettingsDebt__1e1zF\",\"HideSettingsDebt\":\"AssetPanel_HideSettingsDebt__2Y8t6\",\"RemoveAsset\":\"AssetPanel_RemoveAsset__2qe-b\",\"RemoveDebt\":\"AssetPanel_RemoveDebt__lRaMp\",\"HideRemoveDebt\":\"AssetPanel_HideRemoveDebt__ppnKl\",\"HideRemoveAsset\":\"AssetPanel_HideRemoveAsset__3WcJZ\",\"BtnDiv\":\"AssetPanel_BtnDiv__2A2iq\",\"Text\":\"AssetPanel_Text__2AaTj\",\"Inputs\":\"AssetPanel_Inputs__3EVLV\",\"NewValueInput\":\"AssetPanel_NewValueInput__27MUa\",\"Confirm\":\"AssetPanel_Confirm__3pA6d\",\"HideConfirm\":\"AssetPanel_HideConfirm__Xv9Y4\",\"ShowErr\":\"AssetPanel_ShowErr__2bbll\",\"HideErr\":\"AssetPanel_HideErr__TqJf1\",\"Dropdown\":\"AssetPanel_Dropdown__2TDVG\"};","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './SearchPanel.module.css';\r\nimport { instance as axios } from '../../axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport BackBtn from '../UI/BackBtn/BackBtn';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport BlueBtn from '../UI/BlueBtn/BlueBtn';\r\n\r\nlet typingTimeout;\r\n\r\nconst SearchPanel = props => {\r\n  const [val, setVal] = useState('');\r\n  const [searchRes, setSearchRes] = useState([]);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [showManual, setShowManual] = useState(false);\r\n  const [inputValName, setInputValName] = useState('');\r\n  const [inputValTicker, setInputValTicker] = useState('');\r\n  const [inputValShares, setInputValShares] = useState(0);\r\n  const [inputValPrice, setInputValPrice] = useState(0);\r\n  const [selectedRes, setSelectedRes] = useState(null);\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    if (props.show) { inputRef.current.focus(); }\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const setSearchVal = (e) => {\r\n    const value = e.target.value;\r\n    setVal(value);\r\n    clearTimeout(typingTimeout);\r\n    typingTimeout = props.mode === 'Stock' ?\r\n    setTimeout(() => searchStock(value), 600) :\r\n    setTimeout(() => searchCrypto(value), 600);\r\n  };\r\n\r\n  const searchStock = (stock) => {\r\n    if (stock === '') { return setSearchRes([]); }\r\n    setLoading(true);\r\n    axios.get('portfolio/searchStock/' + stock).then(res => {\r\n      setSearchRes(res.data.result);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setLoading(false);\r\n      console.log(err);\r\n    });\r\n  };\r\n\r\n  const searchCrypto = (crypto) => {\r\n    if (crypto === '') { return setSearchRes([]); }\r\n    setLoading(true);\r\n    axios.get('portfolio/searchCrypto/' + crypto).then(res => {\r\n      setSearchRes(res.data.result);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    props.close();\r\n    setVal('');\r\n    setSearchRes([]);\r\n    resetInputsHandler();\r\n  };\r\n\r\n  const resetInputsHandler = () => {\r\n    setShowInput(false);\r\n    setShowManual(false);\r\n    setInputValName('');\r\n    setInputValShares(0);\r\n    setInputValPrice(0);\r\n    setInputValTicker('');\r\n    setSelectedRes(null);\r\n    setSelectedTicker('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setLoading(false);\r\n  };\r\n\r\n  const selectedHandler = (stock) => {\r\n    setShowInput(true);\r\n    setSelectedRes(stock);\r\n    props.mode === 'Stock' ?\r\n    setSelectedTicker(stock.ticker) :\r\n    setSelectedTicker(stock.item.symbol);\r\n  };\r\n\r\n  const inputValPriceHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = '0'; }\r\n    setInputValPrice(val);\r\n  };\r\n\r\n  const inputValSharesHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setInputValShares(val);\r\n  };\r\n\r\n  const addHandler = async (manual) => {\r\n    if (inputValShares === 0 || inputValShares === '') { return; }\r\n    if (manual && (inputValName === '' || inputValTicker === '' || inputValPrice === '')) { return; }\r\n    const data = manual ?\r\n    {\r\n      name: inputValName,\r\n      symbol: inputValTicker.toUpperCase(),\r\n      price: Number(inputValPrice).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValPrice * inputValShares).toFixed(2),\r\n      identifier: 'Manual'\r\n    } :\r\n    props.mode === 'Stock' ?\r\n    {\r\n      name: selectedRes.name,\r\n      symbol: selectedRes.ticker,\r\n      price: (selectedRes.price).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValShares * selectedRes.price).toFixed(2),\r\n      identifier: 'Normal'\r\n    } :\r\n    {\r\n      name: selectedRes.item.name,\r\n      symbol: selectedRes.item.symbol,\r\n      price: (selectedRes.item.price).toFixed(2),\r\n      quantity: inputValShares,\r\n      value: (inputValShares * selectedRes.item.price).toFixed(2),\r\n      identifier: 'Normal'\r\n    };\r\n    if (props.mode === 'Stock') {\r\n      for (let stock of props.stocks) {\r\n        if (stock.symbol === data.symbol) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${stock.symbol} in your portfolio.`);\r\n        }\r\n      }\r\n      const updatedStocks = [...props.stocks];\r\n      updatedStocks.unshift({ ...data });\r\n      const updatedPortfolio = { ...props.portfolio, stocks: updatedStocks };\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.addStock(data);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateStocks', { data });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.addStock(data);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        return setErrMsg('Error connecting to the server.');\r\n      }\r\n    } else {\r\n      for (let crypto of props.cryptos) {\r\n        if (crypto.symbol === data.symbol) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${crypto.symbol} in your portfolio.`);\r\n        }\r\n      }\r\n      const updatedCryptos = [...props.cryptos];\r\n      updatedCryptos.unshift({ ...data });\r\n      const updatedPortfolio = { ...props.portfolio, cryptos: updatedCryptos };\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.addCrypto(data);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateCryptos', { data });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.addCrypto(data);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        return setErrMsg('Error connecting to the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={props.mode === 'Stock' ?\r\n      (props.show ? classes.StockPanel : classes.StockPanelHide) :\r\n      (props.show ? classes.CryptoPanel : classes.CryptoPanelHide)}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n        <BackBtn back={resetInputsHandler} mode={!showInput && !showManual ? 'Hide' : 'Show'} />\r\n      </div>\r\n      <p className={classes.Text}>\r\n        {props.mode === 'Stock' ?\r\n        'Search for a stock by entering its ticker or the company name' :\r\n        'Search for a cryptocurrency by entering its symbol or name'}\r\n      </p>\r\n      <input className={classes.SearchInput}\r\n        value={val} onChange={setSearchVal} ref={inputRef}\r\n        placeholder={props.mode === 'Stock' ? 'AAPL, Apple, ...' : 'BTC, Bitcoin, ...'} />\r\n      {loading && <Spinner mode=\"Search\" />}\r\n      <div className={classes.Results}>\r\n        {searchRes.map((stock, i) => (\r\n          <div className={classes.Result} key={i} onClick={() => selectedHandler(stock)}>\r\n            <div className={classes.SearchSymbol}>{props.mode === 'Stock' ? stock.ticker: stock.item.symbol}</div>\r\n            <div className={classes.SearchName}>{props.mode === 'Stock' ? stock.name : stock.item.name}</div>\r\n          </div>\r\n        ))}\r\n        <div className={classes.BtnDiv2}>\r\n          <BlueBtn clicked={() => setShowManual(true)}>\r\n            {`${props.mode === 'Stock' ? 'Stock' : 'Crypto'} not found? Add it manually`}\r\n          </BlueBtn>\r\n        </div>\r\n      </div>\r\n      <div className={showInput ? classes.ShowInput : classes.HideInput}>\r\n        <p className={classes.InputText}>\r\n          {props.mode === 'Stock' ?\r\n          `How many shares of ${selectedTicker} do you own?` :\r\n          `How much ${selectedTicker} do you own?`}\r\n        </p>\r\n        <input value={inputValShares} onChange={inputValSharesHandler} />\r\n        <BlueBtn clicked={() => addHandler(false)}>Add</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n      <div className={showManual ? classes.ShowInput: classes.HideInput}>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Ticker:' : 'Symbol:'}</p>\r\n          <input placeholder={props.mode === 'Stock' ? 'eg AAPL' : 'eg BTC'} value={inputValTicker}\r\n          onChange={e => setInputValTicker(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Company name:' : 'Name:'}</p>\r\n          <input placeholder={props.mode === 'Stock' ? 'eg Apple' : 'eg Bitcoin'} value={inputValName}\r\n          onChange={e => setInputValName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <p>Current price:</p>\r\n          <input value={inputValPrice} onChange={inputValPriceHandler} />\r\n        </div>\r\n        <div>\r\n          <p>{props.mode === 'Stock' ? 'Number of shares:' : 'Quantity:'}</p>\r\n          <input value={inputValShares} onChange={inputValSharesHandler} />\r\n        </div>\r\n        <BlueBtn clicked={() => addHandler(true)}>Add</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addStock: (stock) => dispatch(actions.addStock(stock)),\r\n  addCrypto: (crypto) => dispatch(actions.addCrypto(crypto)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPanel);\r\n","import React from 'react';\r\nimport classes from './BackBtn.module.css';\r\nimport { arrowRight } from '../UIIcons';\r\n\r\nconst BackBtn = props => (\r\n  <button className={props.mode === 'Hide' ? classes.Hide : classes.BackBtn} onClick={props.back}>\r\n    <span>{arrowRight}</span>\r\n  </button>\r\n);\r\n\r\nexport default BackBtn;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './BuySellPanel.module.css';\r\nimport { connect } from 'react-redux';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport * as actions from '../../store/actions/index';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport Select from 'react-select';\r\nimport '../UI/ReactSelectStyles.css';\r\n\r\nconst originalSelected = { name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Normal' };\r\n\r\nconst BuySellPanel = props => {\r\n  const [selected, setSelected] = useState({ ...originalSelected });\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selectedVal, setSelectedVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [panelClass, setPanelClass] = useState(classes.Hide);\r\n  const [titleText, setTitleText] = useState('');\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.mode) {\r\n      case 'BuyStock':\r\n        if (props.show) { setPanelClass(classes.BuyStock); }\r\n        else { setPanelClass(classes.HideBuyStock); }\r\n        setTitleText('Which stock did you buy?');\r\n        break;\r\n      case 'SellStock':\r\n        if (props.show) { setPanelClass(classes.SellStock); }\r\n        else { setPanelClass(classes.HideSellStock); }\r\n        setTitleText('Which stock did you sell?');\r\n        break;\r\n      case 'BuyCrypto':\r\n        if (props.show) { setPanelClass(classes.BuyCrypto); }\r\n        else { setPanelClass(classes.HideBuyCrypto); }\r\n        setTitleText('Which cryptocurrency did you buy?');\r\n        break;\r\n      default:\r\n        if (props.show) { setPanelClass(classes.SellCrypto); }\r\n        else { setPanelClass(classes.HideSellCrypto); }\r\n        setTitleText('Which cryptocurrency did you sell?');\r\n        break;\r\n    }\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ ...originalSelected });\r\n    setSelectedVal(0);\r\n    setSelectedName('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setTitleText('');\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = (e) => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setSelectedVal(val);\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    if (selectedVal === 0) { return; }\r\n    if ((props.mode === 'SellStock' || props.mode === 'SellCrypto') && selectedVal > selected.quantity) {\r\n      setErr(true);\r\n      return setErrMsg(`You do not own enough${props.mode === 'SellStock' ? ' shares of' : ''} ${selected.symbol} to sell that much.`);\r\n    }\r\n    if (selectedVal === selected.quantity) {\r\n      if (props.mode === 'SellStock') {\r\n        const stocks = [...props.stocks];\r\n        const index = stocks.findIndex(stock => stock.name === selected.name);\r\n        stocks.splice(index, 1);\r\n        const updatedPortfolio = { ...props.portfolio };\r\n        updatedPortfolio.stocks = [...stocks];\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        if (props.isDemo) {\r\n          props.setNetWorthData(updatedNetWorth);\r\n          props.changeStock(stocks);\r\n          return closeHandler();\r\n        }\r\n        try {\r\n          const res = await axios.put('portfolio/deleteStock', { identifier: selected.identifier, name: selected.name });\r\n          const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeStock(stocks);\r\n          return closeHandler();\r\n        } catch(e) {\r\n          setErr(true);\r\n          return setErrMsg('Error connecting to the server.');\r\n        }\r\n      }\r\n      if (props.mode === 'SellCrypto') {\r\n        const cryptos = [...props.cryptos];\r\n        const index = cryptos.findIndex(crypto => crypto.name === selected.name);\r\n        cryptos.splice(index, 1);\r\n        const updatedPortfolio = { ...props.portfolio };\r\n        updatedPortfolio.cryptos = [...cryptos];\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        if (props.isDemo) {\r\n          props.setNetWorthData(updatedNetWorth);\r\n          props.changeCrypto(cryptos);\r\n          return closeHandler();\r\n        }\r\n        try {\r\n          const res = await axios.put('portfolio/deleteCrypto', { identifier: selected.identifier, name: selected.name });\r\n          const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeCrypto(cryptos);\r\n          return closeHandler();\r\n        } catch(e) {\r\n          setErr(true);\r\n          return setErrMsg('Error connecting to the server.');\r\n        }\r\n      }\r\n    }\r\n    const newPortfolio = props.mode === 'BuyStock' || props.mode === 'SellStock' ?\r\n    [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newQuantity = props.mode === 'BuyStock' || props.mode === 'BuyCrypto' ?\r\n    Number(Number(newData.quantity) + Number(selectedVal)) :\r\n    Number(Number(newData.quantity) - Number(selectedVal));\r\n    newData.quantity = Number(newQuantity);\r\n    newData.value = Number(newData.price * newQuantity);\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n      updatedPortfolio.stocks = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeStock(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/changeStock', { ...newData });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.changeStock(newPortfolio);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      }\r\n    } else {\r\n      updatedPortfolio.cryptos = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeCrypto(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/changeCrypto', { ...newData });\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.changeCrypto(newPortfolio);\r\n        closeHandler();\r\n      } catch(e) {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectHandler = (selectedOption) => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      return setSelected({ ...originalSelected });\r\n    }\r\n    setSelectedName(selectedOption);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setSelectedVal(0);\r\n    if (props.mode === 'BuyStock' || props.mode === 'SellStock') {\r\n      const stockMatch = props.stocks.find(stock => stock.name === selectedOption.value);\r\n      setSelected({ ...stockMatch });\r\n    } else {\r\n      const cryptoMatch = props.cryptos.find(crypto => crypto.name === selectedOption.value);\r\n      setSelected({ ...cryptoMatch });\r\n    }\r\n  };\r\n\r\n  const stockOptions = props.stocks.map(stock => ({ value: stock.name, label: stock.name }));\r\n  const cryptoOptions = props.cryptos.map(crypto => ({ value: crypto.name, label: crypto.name }));\r\n\r\n  return (\r\n    <div ref={panelRef} className={panelClass}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>{titleText}</p>\r\n      <Select options={props.mode === 'BuyStock' || props.mode === 'SellStock' ? stockOptions : cryptoOptions}\r\n        className={classes.Dropdown} onChange={selectHandler} isSearchable value={selectedName} classNamePrefix=\"react-select\" />\r\n      <p className={selectedName === '' ? classes.HideText : classes.Text}>\r\n        {props.mode === 'BuyStock' ?\r\n        `How many shares of ${selected.symbol} did you buy?` :\r\n        props.mode === 'SellStock' ?\r\n        `How many shares of ${selected.symbol} did you sell?` :\r\n        props.mode === 'BuyCrypto' ?\r\n        `How much ${selected.symbol} did you buy?` :\r\n        `How much ${selected.symbol} did you sell?`}\r\n      </p>\r\n      <div className={selectedName === '' ? classes.HideInputDiv : classes.InputDiv}>\r\n        <input disabled={selectedName === ''} type=\"text\" className={classes.Input}\r\n          value={selectedVal} onChange={setValHandler} />\r\n        {props.mode === 'SellStock' || props.mode === 'SellCrypto' ? (\r\n          <button className={classes.AllBtn} onClick={() => setSelectedVal(selected.quantity)}>All</button>\r\n        ) : null}\r\n      </div>\r\n      <button onClick={confirmHandler} className={selectedName === '' ? classes.HideConfirmBtn : classes.ConfirmBtn}>\r\n        Confirm\r\n      </button>\r\n      <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: (cryptos) => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: (stocks) => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuySellPanel);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './SettingsPanel.module.css';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\nimport '../UI/ReactSelectStyles.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport BlueBtn from '../UI/BlueBtn/BlueBtn';\r\n\r\nconst originalSelected = { name: '', symbol: '', quantity: 0, price: 0, value: 0, identifier: 'Manual' };\r\n\r\nconst SettingsPanel = props => {\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState({ ...originalSelected });\r\n  const [priceVal, setPriceVal] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [showInput, setShowInput] = useState(false);\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setSelected({ ...originalSelected });\r\n    setPriceVal(0);\r\n    setSelectedName('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setShowInput(false);\r\n    props.close();\r\n  };\r\n\r\n  const setValHandler = (e) => {\r\n    setErr(false);\r\n    setErrMsg('');\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setPriceVal(val);\r\n  };\r\n\r\n  const stocks = props.stocks.filter(stock => stock.identifier === 'Manual');\r\n  const cryptos = props.cryptos.filter(crypto => crypto.identifier === 'Manual');\r\n\r\n  const selectHandler = (selectedOption) => {\r\n    if (!selectedOption) {\r\n      setSelectedName('');\r\n      setShowInput(false);\r\n      return setSelected({ ...originalSelected });\r\n    }\r\n    setShowInput(true);\r\n    setSelectedName(selectedOption);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (props.mode === 'Stock') {\r\n      const stockMatch = stocks.find(stock => stock.name === selectedOption.value);\r\n      setSelected({ ...stockMatch });\r\n      setPriceVal(stockMatch.price);\r\n    } else {\r\n      const cryptoMatch = cryptos.find(crypto => crypto.name === selectedOption.value);\r\n      setSelected({ ...cryptoMatch });\r\n      setPriceVal(cryptoMatch.price);\r\n    }\r\n  };\r\n\r\n  const stockOptions = stocks.map(stock => {\r\n    return { value: stock.name, label: stock.name };\r\n  });\r\n\r\n  const cryptoOptions = cryptos.map(crypto => {\r\n    return { value: crypto.name, label: crypto.name };\r\n  });\r\n\r\n  const confirmHandler = () => {\r\n    const newPortfolio = props.mode === 'Stock' ? [...props.stocks] : [...props.cryptos];\r\n    const index = newPortfolio.findIndex(data => data.name === selected.name);\r\n    const newData = { ...newPortfolio[index] };\r\n    const newPrice = Number(priceVal);\r\n    newData.price = newPrice;\r\n    newData.value = newPrice * newData.quantity;\r\n    newPortfolio[index] = { ...newData };\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'Stock') {\r\n      updatedPortfolio.stocks = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeStock(newPortfolio);\r\n        return closeHandler();\r\n      } else {\r\n        axios.put('portfolio/changeStock', { ...newData }).then(res => {\r\n          axios.put('netWorth', { netWorthData: updatedNetWorth }).then(resp => {\r\n            props.setNetWorthData(resp.data.result.dataPoints);\r\n            props.changeStock(newPortfolio);\r\n            closeHandler();\r\n          }).catch(err => {\r\n            setErr(true);\r\n            setErrMsg('Error connecting to the server.');\r\n          });\r\n        }).catch(err => {\r\n          setErr(true);\r\n          setErrMsg('Error connecting to the server.');\r\n        });\r\n      }\r\n    } else {\r\n      updatedPortfolio.cryptos = [...newPortfolio];\r\n      const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n      if (props.isDemo) {\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.changeCrypto(newPortfolio);\r\n        return closeHandler();\r\n      }\r\n      axios.put('portfolio/changeCrypto', { ...newData }).then(res => {\r\n        axios.put('netWorth', { netWorthData: updatedNetWorth }).then(resp => {\r\n          props.setNetWorthData(resp.data.result.dataPoints);\r\n          props.changeCrypto(newPortfolio);\r\n          closeHandler();\r\n        }).catch(err => {\r\n          setErr(true);\r\n          setErrMsg('Error connecting to the server.');\r\n        });\r\n      }).catch(err => {\r\n        setErr(true);\r\n        setErrMsg('Error connecting to the server.');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={props.mode === 'Stock' ?\r\n      (props.show ? classes.StockPanel : classes.StockPanelHide) :\r\n      (props.show ? classes.CryptoPanel : classes.CryptoPanelHide)}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>\r\n        {props.mode === 'Stock' ?\r\n        'Change the price of a manually added stock' :\r\n        'Change the price of a manually added cryptocurrency'}\r\n      </p>\r\n      <Select options={props.mode === 'Stock' ? stockOptions : cryptoOptions}\r\n        className={classes.Dropdown} onChange={selectHandler} isSearchable\r\n        value={selectedName} classNamePrefix=\"react-select\" />\r\n      <div className={showInput ? classes.ShowInput : classes.HideInput}>\r\n        <input value={priceVal} onChange={setValHandler} />\r\n        <BlueBtn clicked={confirmHandler}>Confirm</BlueBtn>\r\n        <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cryptos: state.portfolio.cryptos,\r\n  stocks: state.portfolio.stocks,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeCrypto: (cryptos) => dispatch(actions.changeCrypto(cryptos)),\r\n  changeStock: (stocks) => dispatch(actions.changeStock(stocks)),\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsPanel);\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport classes from './AssetPanel.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport { instance as axios } from '../../axios';\r\nimport { calcNetWorth } from '../../utils/valueCalcs';\r\nimport Select from 'react-select';\r\nimport '../UI/ReactSelectStyles.css';\r\nimport CloseBtn from '../UI/CloseBtn/CloseBtn';\r\n\r\nconst AssetPanel = props => {\r\n  const [titleText, setTitleText] = useState('');\r\n  const [panelClass, setPanelClass] = useState(classes.Hide);\r\n  const [confirmClass, setConfirmClass] = useState(classes.HideConfirm);\r\n  const [options, setOptions] = useState(null);\r\n  const [selectedName, setSelectedName] = useState('');\r\n  const [selected, setSelected] = useState(null);\r\n  const [inputName, setInputName] = useState('');\r\n  const [inputDesc, setInputDesc] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [newValue, setNewValue] = useState('');\r\n  const panelRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.mode) {\r\n      case 'AddAsset':\r\n        setTitleText('Add a new asset');\r\n        if (props.show) { setPanelClass(classes.AddAsset); }\r\n        else { setPanelClass(classes.HideAddAsset); }\r\n        break;\r\n      case 'RemoveAsset':\r\n        setTitleText('Select an asset to remove it from your portfolio');\r\n        if (props.show) { setPanelClass(classes.RemoveAsset); }\r\n        else { setPanelClass(classes.HideRemoveAsset); }\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.name, label: asset.name })));\r\n        break;\r\n      case 'AddDebt':\r\n        setTitleText('Add a new liability');\r\n        if (props.show) { setPanelClass(classes.AddDebt); }\r\n        else { setPanelClass(classes.HideAddDebt); }\r\n        break;\r\n      case 'RemoveDebt':\r\n        setTitleText('Select a liability to remove it from your portfolio');\r\n        if (props.show) { setPanelClass(classes.RemoveDebt); }\r\n        else { setPanelClass(classes.HideRemoveDebt); }\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.name, label: debt.name })));\r\n        break;\r\n      case 'SettingsAsset':\r\n        setTitleText('Select an asset to change its value');\r\n        if (props.show) { setPanelClass(classes.SettingsAsset); }\r\n        else { setPanelClass(classes.HideSettingsAsset); }\r\n        setOptions(props.otherAssets.map(asset => ({ value: asset.name, label: asset.name })));\r\n        break;\r\n      default:\r\n        setTitleText('Select a liability to change its value');\r\n        if (props.show) { setPanelClass(classes.SettingsDebt); }\r\n        else { setPanelClass(classes.HideSettingsDebt); }\r\n        setOptions(props.liabilities.map(debt => ({ value: debt.name, label: debt.name })));\r\n        break;\r\n    }\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, [props.mode, props.show]);\r\n\r\n  useEffect(() => {\r\n    return () => document.removeEventListener('mousedown', handleClick);\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (panelRef.current.contains(e.target)) { return; }\r\n    closeHandler();\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setTitleText('');\r\n    setConfirmClass(classes.HideConfirm);\r\n    setOptions(null);\r\n    setSelectedName('');\r\n    setSelected(null);\r\n    setInputName('');\r\n    setInputDesc('');\r\n    setInputValue('');\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setNewValue('');\r\n    props.close();\r\n  };\r\n\r\n  const selectHandler = (option) => {\r\n    if (!option) {\r\n      setSelectedName('');\r\n      setConfirmClass(classes.HideConfirm);\r\n      return setSelected(null);\r\n    }\r\n    setSelectedName(option);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    setConfirmClass(classes.Confirm);\r\n    if (props.mode === 'SettingsAsset' || props.mode === 'RemoveAsset') {\r\n      const assetMatch = props.otherAssets.find(asset => asset.name === option.value);\r\n      setSelected({ ...assetMatch });\r\n      setNewValue(assetMatch.value);\r\n    } else if (props.mode === 'SettingsDebt' || props.mode === 'RemoveDebt') {\r\n      const debtMatch = props.liabilities.find(debt => debt.name === option.value);\r\n      setSelected({ ...debtMatch });\r\n      setNewValue(debtMatch.value);\r\n    }\r\n  };\r\n\r\n  const inputNameHandler = (e) => {\r\n    setInputName(e.target.value);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (e.target.value.length > 0 && inputDesc.length > 0 && inputValue.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const inputDescHandler = (e) => {\r\n    setInputDesc(e.target.value);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (e.target.value.length > 0 && inputName.length > 0 && inputValue.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const inputValueHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setInputValue(val);\r\n    setErr(false);\r\n    setErrMsg('');\r\n    if (val.length > 0 && inputDesc.length > 0 && inputName.length > 0) {\r\n      setConfirmClass(classes.Confirm);\r\n    } else { setConfirmClass(classes.HideConfirm); }\r\n  };\r\n\r\n  const newValueHandler = (e) => {\r\n    let val = e.target.value;\r\n    if (isNaN(val)) { return; }\r\n    if (val.length === 2 && val.charAt(0) === '0' && val.charAt(1) !== '.') {\r\n      val = val.slice(1);\r\n    }\r\n    if (val === '') { val = 0; }\r\n    setNewValue(val);\r\n    setErr(false);\r\n    setErrMsg('');\r\n  };\r\n\r\n  const errHandler = () => {\r\n    setErr(true);\r\n    setErrMsg('Error connecting to the server.');\r\n  };\r\n\r\n  const confirmHandler = async () => {\r\n    const updatedPortfolio = { ...props.portfolio };\r\n    if (props.mode === 'AddAsset') {\r\n      const data = { name: inputName, desc: inputDesc, value: inputValue };\r\n      for (let asset of props.otherAssets) {\r\n        if (asset.name === data.name) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${data.name} in your portfolio`);\r\n        }\r\n      }\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        otherAssets.unshift({ ...data });\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/addAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'RemoveAsset') {\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        const index = otherAssets.findIndex(asset => asset.name === selected.name);\r\n        otherAssets.splice(index, 1);\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/removeAsset', { name: selected.name });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'AddDebt') {\r\n      const data = { name: inputName, desc: inputDesc, value: inputValue };\r\n      for (let debt of props.liabilities) {\r\n        if (debt.name === data.name) {\r\n          setErr(true);\r\n          return setErrMsg(`You already have ${data.name} in your portfolio`);\r\n        }\r\n      }\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        liabilities.unshift({ ...data });\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/addDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'RemoveDebt') {\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        const index = liabilities.findIndex(debt => debt.name === selected.name);\r\n        liabilities.splice(index, 1);\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/removeDebt', { name: selected.name });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else if (props.mode === 'SettingsAsset') {\r\n      const data = { name: selected.name, desc: selected.desc, value: newValue };\r\n      if (props.isDemo) {\r\n        const otherAssets = [...updatedPortfolio.otherAssets];\r\n        const index = otherAssets.findIndex(asset => asset.name === data.name);\r\n        otherAssets[index].value = data.value;\r\n        updatedPortfolio.otherAssets = otherAssets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateAssets(otherAssets);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateAsset', { ...data });\r\n        updatedPortfolio.otherAssets = res.data.assets;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateAssets(res.data.assets);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    } else {\r\n      const data = { name: selected.name, desc: selected.desc, value: newValue };\r\n      if (props.isDemo) {\r\n        const liabilities = [...updatedPortfolio.liabilities];\r\n        const index = liabilities.findIndex(debt => debt.name === data.name);\r\n        liabilities[index].value = data.value;\r\n        updatedPortfolio.liabilities = liabilities;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        props.setNetWorthData(updatedNetWorth);\r\n        props.updateDebts(liabilities);\r\n        return closeHandler();\r\n      }\r\n      try {\r\n        const res = await axios.put('portfolio/updateDebt', { ...data });\r\n        updatedPortfolio.liabilities = res.data.debts;\r\n        const updatedNetWorth = calcNetWorth(props.netWorthData, updatedPortfolio);\r\n        const resp = await axios.put('netWorth', { netWorthData: updatedNetWorth });\r\n        props.setNetWorthData(resp.data.result.dataPoints);\r\n        props.updateDebts(res.data.debts);\r\n        return closeHandler();\r\n      } catch(e) { return errHandler(); }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={panelRef} className={panelClass}>\r\n      <div className={classes.BtnDiv}>\r\n        <CloseBtn close={closeHandler} />\r\n      </div>\r\n      <p className={classes.Text}>{titleText}</p>\r\n      {options ?\r\n        <Select options={options} className={classes.Dropdown} onChange={selectHandler}\r\n          isSearchable value={selectedName} classNamePrefix=\"react-select\" />\r\n        :\r\n        <div className={classes.Inputs}>\r\n          <div>\r\n            <p>Name</p>\r\n            <input value={inputName} onChange={inputNameHandler} />\r\n          </div>\r\n          <div>\r\n            <p>Description</p>\r\n            <input value={inputDesc} onChange={inputDescHandler} />\r\n          </div>\r\n          <div>\r\n            <p>Value</p>\r\n            <input value={inputValue} onChange={inputValueHandler} />\r\n          </div>\r\n        </div>\r\n      }\r\n      {(props.mode === 'SettingsAsset' || props.mode === 'SettingsDebt') && selectedName !== '' ?\r\n        <input className={classes.NewValueInput} value={newValue} onChange={newValueHandler} />\r\n      : null}\r\n      <button onClick={confirmHandler} className={confirmClass}>Confirm</button>\r\n      <p className={err ? classes.ShowErr : classes.HideErr}>{errMsg}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  otherAssets: state.portfolio.otherAssets,\r\n  liabilities: state.portfolio.liabilities,\r\n  portfolio: state.portfolio,\r\n  netWorthData: state.netWorth.netWorthData,\r\n  isDemo: state.auth.isDemo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setNetWorthData: (data) => dispatch(actions.setNetWorthData(data)),\r\n  updateAssets: (assets) => dispatch(actions.updateAssets(assets)),\r\n  updateDebts: (debts) => dispatch(actions.updateDebts(debts))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetPanel);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport classes from './Portfolio.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SearchPanel from '../../components/SearchPanel/SearchPanel';\r\nimport BuySellPanel from '../../components/BuySellPanel/BuySellPanel';\r\nimport { settingsIcon } from '../../components/UI/UIIcons';\r\nimport SettingsPanel from '../../components/SettingsPanel/SettingsPanel';\r\nimport AssetPanel from '../../components/AssetPanel/AssetPanel';\r\nimport NetWorthChart from '../../components/NetWorthChart/NetWorthChart';\r\nimport InvestmentTable from '../../components/InvestmentTable/InvestmentTable';\r\nimport GreenBtn from '../../components/UI/GreenBtn/GreenBtn';\r\nimport BlueBtn from '../../components/UI/BlueBtn/BlueBtn';\r\n\r\nconst Portfolio = props => {\r\n  const [showStockSearch, setShowStockSearch] = useState(false);\r\n  const [showCryptoSearch, setShowCryptoSearch] = useState(false);\r\n  const [showBuyStock, setShowBuyStock] = useState(false);\r\n  const [showSellStock, setShowSellStock] = useState(false);\r\n  const [showBuyCrypto, setShowBuyCrypto] = useState(false);\r\n  const [showSellCrypto, setShowSellCrypto] = useState(false);\r\n  const [showStockSettings, setShowStockSettings] = useState(false);\r\n  const [showCryptoSettings, setShowCryptoSettings] = useState(false);\r\n  const [showAddAsset, setShowAddAsset] = useState(false);\r\n  const [showRemoveAsset, setShowRemoveAsset] = useState(false);\r\n  const [showAddDebt, setShowAddDebt] = useState(false);\r\n  const [showRemoveDebt, setShowRemoveDebt] = useState(false);\r\n  const [showAssetSettings, setShowAssetSettings] = useState(false);\r\n  const [showDebtSettings, setShowDebtSettings] = useState(false);\r\n  const contentRef = useRef();\r\n  const stockRef = useRef();\r\n  const cryptoRef = useRef();\r\n  const assetRef = useRef();\r\n\r\n  useEffect(() => {\r\n    switch(props.location.search) {\r\n      case '?pos=stocks': return stockRef.current.scrollIntoView();\r\n      case '?pos=cryptos': return cryptoRef.current.scrollIntoView();\r\n      case '?pos=assets': return assetRef.current.scrollIntoView();\r\n      default: return contentRef.current.scrollIntoView();\r\n    }\r\n  }, []);\r\n\r\n  const showBuySellHandler = (mode) => {\r\n    if ((mode === 'BuyStock' || mode === 'SellStock') && props.stocks.length === 0) {\r\n      return setShowStockSearch(true);\r\n    }\r\n    if ((mode === 'BuyCrypto' || mode === 'SellCrypto') && props.cryptos.length === 0) {\r\n      return setShowCryptoSearch(true);\r\n    }\r\n    mode === 'BuyStock' ? setShowBuyStock(true) :\r\n    mode === 'SellStock' ? setShowSellStock(true) :\r\n    mode === 'BuyCrypto' ? setShowBuyCrypto(true) :\r\n    setShowSellCrypto(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.Content} ref={contentRef}>\r\n        <NetWorthChart small={false} />\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={stockRef}>\r\n            <h1>Stocks</h1>\r\n            <BlueBtn big clicked={() => setShowStockSearch(true)}>Add a new holding</BlueBtn>\r\n            <div className={classes.BuySellBtns}>\r\n              <GreenBtn big clicked={() => showBuySellHandler('BuyStock')}>Buy</GreenBtn>\r\n              <BuySellPanel mode=\"BuyStock\" show={showBuyStock} close={() => setShowBuyStock(false)} />\r\n              <GreenBtn big clicked={() => showBuySellHandler('SellStock')}>Sell</GreenBtn>\r\n              <BuySellPanel mode=\"SellStock\" show={showSellStock} close={() => setShowSellStock(false)} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowStockSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <SettingsPanel mode=\"Stock\" show={showStockSettings} close={() => setShowStockSettings(false)} />\r\n            </div>\r\n            <SearchPanel mode=\"Stock\" show={showStockSearch} close={() => setShowStockSearch(false)} />\r\n            <InvestmentTable mode=\"Stocks\" normal />\r\n          </div>\r\n          <div className={classes.Cryptos} ref={cryptoRef}>\r\n            <h1>Cryptocurrencies</h1>\r\n            <BlueBtn big clicked={() => setShowCryptoSearch(true)}>Add a new holding</BlueBtn>\r\n            <div className={classes.BuySellBtns}>\r\n              <GreenBtn big clicked={() => showBuySellHandler('BuyCrypto')}>Buy</GreenBtn>\r\n              <BuySellPanel mode=\"BuyCrypto\" show={showBuyCrypto} close={() => setShowBuyCrypto(false)} />\r\n              <GreenBtn big clicked={() => showBuySellHandler('SellCrypto')}>Sell</GreenBtn>\r\n              <BuySellPanel mode=\"SellCrypto\" show={showSellCrypto} close={() => setShowSellCrypto(false)} />\r\n              <button className={classes.SettingsBtn} onClick={() => setShowCryptoSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <SettingsPanel mode=\"Crypto\" show={showCryptoSettings} close={() => setShowCryptoSettings(false)} />\r\n            </div>\r\n            <SearchPanel mode=\"Crypto\" show={showCryptoSearch} close={() => setShowCryptoSearch(false)} />\r\n            <InvestmentTable mode=\"Cryptos\" normal />\r\n          </div>\r\n        </div>\r\n        <div className={classes.Investments}>\r\n          <div className={classes.Stocks} ref={assetRef}>\r\n            <h1>Assets</h1>\r\n            <div className={classes.AssetBtns}>\r\n              <BlueBtn big clicked={() => setShowAddAsset(true)}>Add a new asset</BlueBtn>\r\n              <AssetPanel mode=\"AddAsset\" close={() => setShowAddAsset(false)} show={showAddAsset} />\r\n              <BlueBtn big clicked={() => setShowRemoveAsset(true)}>Remove an asset</BlueBtn>\r\n              <AssetPanel mode=\"RemoveAsset\" close={() => setShowRemoveAsset(false)} show={showRemoveAsset} />\r\n              <button className={classes.AssetSettingsBtn} onClick={() => setShowAssetSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <AssetPanel mode=\"SettingsAsset\" close={() => setShowAssetSettings(false)} show={showAssetSettings} />\r\n            </div>\r\n            <InvestmentTable mode=\"Assets\" normal />\r\n          </div>\r\n          <div className={classes.Cryptos}>\r\n            <h1>Liabilities</h1>\r\n            <div className={classes.AssetBtns}>\r\n              <BlueBtn big clicked={() => setShowAddDebt(true)}>Add a new liability</BlueBtn>\r\n              <AssetPanel mode=\"AddDebt\" close={() => setShowAddDebt(false)} show={showAddDebt} />\r\n              <BlueBtn big clicked={() => setShowRemoveDebt(true)}>Remove a liability</BlueBtn>\r\n              <AssetPanel mode=\"RemoveDebt\" close={() => setShowRemoveDebt(false)} show={showRemoveDebt} />\r\n              <button className={classes.AssetSettingsBtn} onClick={() => setShowDebtSettings(true)}>\r\n                <span>{settingsIcon}</span>\r\n              </button>\r\n              <AssetPanel mode=\"SettingsDebt\" close={() => setShowDebtSettings(false)} show={showDebtSettings} />\r\n            </div>\r\n            <InvestmentTable mode=\"Debts\" normal />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos\r\n});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Portfolio));\r\n","import React from 'react';\r\nimport classes from './BlueBtn.module.css';\r\n\r\nconst BlueBtn = props => (\r\n  <button className={props.big ? (props.noMargin ? classes.NoBigBtn : classes.BigBtn) : classes.Btn} \r\n    onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default BlueBtn;\r\n","import React from 'react';\r\nimport classes from './GreenBtn.module.css';\r\n\r\nconst GreenBtn = props => (\r\n  <button className={props.big ? classes.BigBtn : classes.Btn} onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default GreenBtn;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BigBtn\":\"BlueBtn_BigBtn__3hb37\",\"Btn\":\"BlueBtn_Btn__O1Uk4\",\"NoBigBtn\":\"BlueBtn_NoBigBtn__2jTSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BigBtn\":\"GreenBtn_BigBtn__CbbvN\",\"Btn\":\"GreenBtn_Btn__339UW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chart\":\"NetWorthChart_Chart__23Lvu\",\"NetWorthTitle\":\"NetWorthChart_NetWorthTitle__3-YD8\",\"NetWorthTitleSmall\":\"NetWorthChart_NetWorthTitleSmall__1FY2m\",\"NetWorthValue\":\"NetWorthChart_NetWorthValue__3b8pK\",\"NetWorthText\":\"NetWorthChart_NetWorthText__3rl82\",\"NetWorthValueSmall\":\"NetWorthChart_NetWorthValueSmall__Nn0OE\",\"NetWorthTextSmall\":\"NetWorthChart_NetWorthTextSmall__1a1V_\",\"NetWorthChart\":\"NetWorthChart_NetWorthChart__3j0Ko\",\"NetWorthChartSmall\":\"NetWorthChart_NetWorthChartSmall__2-sme\",\"Block\":\"NetWorthChart_Block__3oKBE\"};","import React from 'react';\r\nimport classes from './InvestmentTable.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst InvestmentTable = props => (\r\n  <div className={props.normal ? null : (props.mode === 'Stocks' || props.mode === 'Cryptos' ? classes.TableContainer : classes.AssetTableContainer)}>\r\n    <table className={props.normal ? classes.NormalTable : classes.Table}>\r\n      <thead>\r\n        <tr className={classes.HeaderFields}>\r\n          <th>{props.mode === 'Stocks' ? 'Ticker' : props.mode === 'Cryptos' ? 'Symbol' : 'Name'}</th>\r\n          <th>{props.mode === 'Stocks' ? 'Company Name' : props.mode === 'Cryptos' ? 'Cryptocurrency' : 'Description'}</th>\r\n          <th>{props.mode === 'Stocks' ? 'Shares' : props.mode === 'Cryptos' ? 'Quantity': 'Value'}</th>\r\n          {props.mode === 'Stocks' || props.mode === 'Cryptos' ? <th>Price</th> : null}\r\n          {props.mode === 'Stocks' || props.mode === 'Cryptos' ? <th>Value</th> : null}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.mode === 'Stocks' ? (\r\n          props.stocks.map((stock, i) => (\r\n            <tr key={i}>\r\n              <td className={classes.Symbol}>{stock.symbol}</td>\r\n              <td>{stock.name}</td>\r\n              <td>{stock.quantity}</td>\r\n              <td>{stock.price === '?' ? '?' : `$${Number(stock.price).toFixed(2)}`}</td>\r\n              <td className={classes.Value}>{stock.value === '?' ? '?' : `$${Number(stock.value).toFixed(2)}`}</td>\r\n            </tr>\r\n        ))) : props.mode === 'Cryptos' ? (\r\n          props.cryptos.map((crypto, i) => (\r\n            <tr key={i}>\r\n              <td className={classes.Symbol}>\r\n                {crypto.symbol === 'BTC' ? <img src=\"/assets/btcIcon.png\" alt=\"BTC\"></img> :\r\n                crypto.symbol === 'ETH' ? <img src=\"/assets/ethIcon.png\" alt=\"ETH\"></img> :\r\n                crypto.symbol === 'LTC' ? <img src=\"/assets/ltcIcon.png\" alt=\"LTC\"></img> :\r\n                crypto.symbol}\r\n              </td>\r\n              <td>{crypto.name}</td>\r\n              <td>{crypto.quantity}</td>\r\n              <td>{crypto.price === '?' ? '?' : `$${Number(crypto.price).toFixed(2)}`}</td>\r\n              <td className={classes.Value}>{crypto.value === '?' ? '?' : `$${Number(crypto.value).toFixed(2)}`}</td>\r\n            </tr>\r\n          ))\r\n        ) : props.mode === 'Assets' ? (\r\n          props.assets.map((asset, i) => (\r\n            <tr key={i}>\r\n              <td className={classes.Symbol}>{asset.name}</td>\r\n              <td>{asset.desc}</td>\r\n              <td className={classes.Value}>${Number(asset.value).toFixed(2)}</td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          props.debts.map((debt, i) => (\r\n            <tr key={i}>\r\n              <td className={classes.Symbol}>{debt.name}</td>\r\n              <td>{debt.desc}</td>\r\n              <td className={classes.Value}>${Number(debt.value).toFixed(2)}</td>\r\n            </tr>\r\n          ))\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  stocks: state.portfolio.stocks,\r\n  cryptos: state.portfolio.cryptos,\r\n  assets: state.portfolio.otherAssets,\r\n  debts: state.portfolio.liabilities\r\n});\r\n\r\nexport default connect(mapStateToProps)(InvestmentTable);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableContainer\":\"InvestmentTable_TableContainer__u8kkM\",\"AssetTableContainer\":\"InvestmentTable_AssetTableContainer__19hAO\",\"Table\":\"InvestmentTable_Table__Ws6yp\",\"NormalTable\":\"InvestmentTable_NormalTable__3BiA9\",\"Value\":\"InvestmentTable_Value__21liU\",\"HeaderFields\":\"InvestmentTable_HeaderFields__aKC_u\",\"Symbol\":\"InvestmentTable_Symbol__2I_if\"};"],"sourceRoot":""}